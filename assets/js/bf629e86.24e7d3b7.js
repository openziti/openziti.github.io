"use strict";(self.webpackChunkdocusaurus_3=self.webpackChunkdocusaurus_3||[]).push([[487],{43286:(e,t,n)=>{n.d(t,{Ay:()=>a,RM:()=>s});var i=n(74848),r=n(28453);const s=[{value:"For Tunnelers",id:"for-tunnelers",level:4},{value:"For BrowZer",id:"for-browzer",level:4},{value:"For Ziti Admin Console (ZAC)",id:"for-ziti-admin-console-zac",level:4}];function o(e){const t={a:"a",code:"code",h4:"h4",p:"p",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.a,{href:"https://oauth.net/2/pkce/",children:"Authorization Code Flow with PKCE or PKCE flow"})," requires configuring callback URLs the\r\nIdentity Provider (IdP) will allow redirecting to. If the URL for a specific client is not specifically listed, the IdP\r\nwill deny the authentication request. Depending on the technology used to authenticate to the OpenZiti Network,\r\ndifferent URLs need to be specified. More than one URL is allowed to be configured. Decide if you are configuring the\r\nIdP for use with tunnelers, with BrowZer or with both and add the appropriate callback urls."]}),"\n",(0,i.jsx)(t.p,{children:'In the Auth0 dashboard, with the application selected, choose the "Settings" tab and scroll down to the "Application\r\nURIs" section and add the URLs.'}),"\n",(0,i.jsx)(t.h4,{id:"for-tunnelers",children:"For Tunnelers"}),"\n",(0,i.jsxs)(t.p,{children:["Tunnelers require an allowed callback URL of: ",(0,i.jsx)(t.code,{children:"http://localhost:20314/auth/callback"}),"."]}),"\n",(0,i.jsx)(t.h4,{id:"for-browzer",children:"For BrowZer"}),"\n",(0,i.jsxs)(t.p,{children:["The URL to configure for BrowZer will vary depending on the BrowZer configuration. BrowZer requires a wildcard\r\ncertificate in order to be deployed and all services are delivered from this wildcard domain. You will need to add\r\nthe configured ",(0,i.jsx)(t.a,{href:"/docs/learn/quickstarts/browzer/example/#get-a-wildcard-certificate",children:"wildcard domain"})," as the\r\ncallback url."]}),"\n",(0,i.jsx)(t.h4,{id:"for-ziti-admin-console-zac",children:"For Ziti Admin Console (ZAC)"}),"\n",(0,i.jsxs)(t.p,{children:["The URL to configure an IdP for so that ZAC will be able to authenticate will depend on how you deploy your ZAC. The\r\ncurrent method recommended to deploy ZAC will deploy it on the same URL as the controller. For example:\r\n",(0,i.jsx)(t.a,{href:"https://controller.example.com/zac/callback",children:"https://controller.example.com/zac/callback"})]})]})}function a(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}},69012:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>l,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"guides/external-auth/identity-providers/okta","title":"How to set up Okta","description":"The following fields are necessary in order to configure an external JWT signer with OpenZiti. This configuration will","source":"@site/docs/guides/external-auth/identity-providers/okta.md","sourceDirName":"guides/external-auth/identity-providers","slug":"/guides/external-auth/identity-providers/okta","permalink":"/docs/guides/external-auth/identity-providers/okta","draft":false,"unlisted":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/guides/external-auth/identity-providers/okta.md","tags":[],"version":"current","lastUpdatedAt":1746454584000,"frontMatter":{"title":"How to set up Okta","sidebar_label":"Okta","hide_table_of_contents":true},"sidebar":"docsSidebar","previous":{"title":"Microsoft Entra ID","permalink":"/docs/guides/external-auth/identity-providers/msentra"},"next":{"title":"ZITADEL","permalink":"/docs/guides/external-auth/identity-providers/zitadel"}}');var r=n(74848),s=n(28453),o=n(43286);n(27763);const a={title:"How to set up Okta",sidebar_label:"Okta",hide_table_of_contents:!0},l="Okta",d={},c=[{value:"Create App Integration",id:"create-app-integration",level:2},{value:"Callback URLs",id:"callback-urls",level:3},...o.RM,{value:"Add an Authorization Server",id:"add-an-authorization-server",level:2},{value:"Add an Authorization Server Policy",id:"add-an-authorization-server-policy",level:2},{value:"Add an Authorization Server Policy Rule",id:"add-an-authorization-server-policy-rule",level:2},{value:"Adding an Email Claim to the Access Token",id:"adding-an-email-claim-to-the-access-token",level:2},{value:"Verify Token in Okta Web Portal",id:"verify-token-in-okta-web-portal",level:2}];function h(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",img:"img",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"okta",children:"Okta"})}),"\n",(0,r.jsx)("img",{src:"/icons/logo-okta.svg",alt:"Okta logo",height:"100px"}),"\n",(0,r.jsxs)(t.p,{children:["The following fields are necessary in order to configure an external JWT signer with OpenZiti. This configuration will\nenable authentication via JWTs obtained through an\n",(0,r.jsx)(t.a,{href:"https://oauth.net/2/pkce/",children:"Authorization Code Flow with PKCE or PKCE flow"}),". The fields below are found in the Okta\nadmin web interface either under the ",(0,r.jsx)(t.strong,{children:"Applications"})," or ",(0,r.jsx)(t.strong,{children:"Security"})," sections on the left navigation."]}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Field"}),(0,r.jsx)(t.th,{children:"Where to Find the Value in the Okta UI"}),(0,r.jsx)(t.th,{children:"Example"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.strong,{children:"Issuer"})}),(0,r.jsxs)(t.td,{children:["Security->API, from the list of Authorization Servers, the ",(0,r.jsx)(t.strong,{children:"Issuer URI"})," column"]}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"https://trial-3520298.okta.com/oauth2/auspqk0v3fpttP8fZ697",children:"https://trial-3520298.okta.com/oauth2/auspqk0v3fpttP8fZ697"})})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.strong,{children:"Client ID"})}),(0,r.jsxs)(t.td,{children:["Applications->Applications, from the list of Applications the ",(0,r.jsx)(t.strong,{children:"Client ID"})]}),(0,r.jsx)(t.td,{children:"0oapqjp4snmzqejuh197"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.strong,{children:"Audience"})}),(0,r.jsxs)(t.td,{children:["Security->API, from the list of Authorization Servers, the ",(0,r.jsx)(t.strong,{children:"Audience"})," column"]}),(0,r.jsx)(t.td,{children:"openziti-aud"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.strong,{children:"External Auth URL"})}),(0,r.jsxs)(t.td,{children:["Same as the ",(0,r.jsx)(t.strong,{children:"Issuer"})]}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"https://trial-3520298.okta.com/oauth2/auspqk0v3fpttP8fZ697",children:"https://trial-3520298.okta.com/oauth2/auspqk0v3fpttP8fZ697"})})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.strong,{children:"JWKS Endpoint"})}),(0,r.jsxs)(t.td,{children:["Use the ",(0,r.jsx)(t.code,{children:"jwks_uri"})," field from the OpenID discovery endpoint. Generally the ",(0,r.jsx)(t.strong,{children:"Issuer"})," + '.well-known/openid-configuration'"]}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"https://trial-3520298.okta.com/oauth2/auspqk0v3fpttP8fZ697/.well-known/v1/keys",children:"https://trial-3520298.okta.com/oauth2/auspqk0v3fpttP8fZ697/.well-known/v1/keys"})})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.strong,{children:"Claims Property"})}),(0,r.jsxs)(t.td,{children:["Often ",(0,r.jsx)(t.code,{children:"email"}),", but can also be ",(0,r.jsx)(t.code,{children:"sub"})," or any other claim contained in the JWT"]}),(0,r.jsx)(t.td,{children:"email"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.strong,{children:"Scopes"})}),(0,r.jsxs)(t.td,{children:[(0,r.jsx)(t.code,{children:"openid"})," is always included."]}),(0,r.jsx)(t.td,{children:"profile offline_access"})]})]})]}),"\n",(0,r.jsx)(t.hr,{}),"\n",(0,r.jsx)(t.h2,{id:"create-app-integration",children:"Create App Integration"}),"\n",(0,r.jsxs)(t.p,{children:["From the Okta admin dashboard, expand the Applications left-side navigation and click ",(0,r.jsx)(t.strong,{children:"Applications"})," and click the\n",(0,r.jsx)(t.strong,{children:"Create App Integration"})," button."]}),"\n",(0,r.jsx)(t.admonition,{title:"Create Application",type:"info",children:(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{alt:"Create Application",src:n(67499).A+"",width:"1017",height:"457"})})}),"\n",(0,r.jsxs)(t.p,{children:["On the following screen, ensure the ",(0,r.jsx)(t.strong,{children:"OIDC - OpenID Connect"})," and ",(0,r.jsx)(t.strong,{children:"Single-Page Application"})," are selected and click\nthe ",(0,r.jsx)(t.strong,{children:"Next"})," button."]}),"\n",(0,r.jsx)(t.admonition,{title:"Create a new app integration",type:"info",children:(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{alt:"Create a new app integration",src:n(13678).A+"",width:"915",height:"778"})})}),"\n",(0,r.jsxs)(t.p,{children:["Finalize the new Single-Page App Integration by filling out the ",(0,r.jsx)(t.strong,{children:"App integration name"}),". Next, decide if the\napplication should allow for longer-lived sessions via the ",(0,r.jsx)(t.strong,{children:"Grant type"})," and the ",(0,r.jsx)(t.strong,{children:"Refresh Token"})," (recommended).\nFinally, add the redirect URIs for the specific OpenZiti technology you are looking to enable."]}),"\n",(0,r.jsx)(t.h3,{id:"callback-urls",children:"Callback URLs"}),"\n",(0,r.jsx)(o.Ay,{}),"\n",(0,r.jsx)(t.admonition,{title:"Add Application",type:"info",children:(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{alt:"Add Application",src:n(7324).A+"",width:"920",height:"812"})})}),"\n",(0,r.jsx)(t.h2,{id:"add-an-authorization-server",children:"Add an Authorization Server"}),"\n",(0,r.jsxs)(t.p,{children:["Within the Okta platform, an ",(0,r.jsx)(t.strong,{children:"Authorization Server"})," is used to control the audience (",(0,r.jsx)(t.code,{children:"aud"})," field) added to security\ntokens. To create an audience usable by an external JWT signer for your OpenZiti Network, create a new\n",(0,r.jsx)(t.strong,{children:"Authorization Server"})," by going to the admin interface, click ",(0,r.jsx)(t.strong,{children:"Security"})," on the left navigation and find and click\n",(0,r.jsx)(t.strong,{children:"API"}),". On the resultant page, click ",(0,r.jsx)(t.strong,{children:"Add Authorization Server"}),"."]}),"\n",(0,r.jsx)(t.admonition,{title:"Add Authorization Server",type:"info",children:(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{alt:"Add Authorization Server",src:n(42789).A+"",width:"1377",height:"590"})})}),"\n",(0,r.jsxs)(t.p,{children:["In the popup, enter values for the ",(0,r.jsx)(t.strong,{children:"Name"}),", ",(0,r.jsx)(t.strong,{children:"Audience"})," and ",(0,r.jsx)(t.strong,{children:"Description"}),". Any values are acceptable. Whatever\n",(0,r.jsx)(t.strong,{children:"Audience"})," used will be the value that needs to be assigned to the external JWT signer."]}),"\n",(0,r.jsx)(t.admonition,{title:"Add Authorization Server Details",type:"info",children:(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{alt:"Add Authorization Server Details",src:n(58020).A+"",width:"673",height:"288"})})}),"\n",(0,r.jsx)(t.h2,{id:"add-an-authorization-server-policy",children:"Add an Authorization Server Policy"}),"\n",(0,r.jsxs)(t.p,{children:["Okta will require you to add an ",(0,r.jsx)(t.strong,{children:"Access Policy"})," to the ",(0,r.jsx)(t.strong,{children:"Authorization Server"})," mapping it to a particular set of\nusers. Here you can choose any user or more finely control which Okta clients will leverage this ",(0,r.jsx)(t.strong,{children:"Authorization Server"}),".\nAdd a ",(0,r.jsx)(t.strong,{children:"Name"})," and ",(0,r.jsx)(t.strong,{children:"Description"})," and choose which clients to assign the policy to."]}),"\n",(0,r.jsx)(t.admonition,{title:"Add Authorization Server Policy",type:"info",children:(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{alt:"Add Authorization Server Policy",src:n(91734).A+"",width:"628",height:"334"})})}),"\n",(0,r.jsx)(t.h2,{id:"add-an-authorization-server-policy-rule",children:"Add an Authorization Server Policy Rule"}),"\n",(0,r.jsxs)(t.p,{children:["After adding the new ",(0,r.jsx)(t.strong,{children:"Access Policy"}),", you also need to add a ",(0,r.jsx)(t.strong,{children:"Rule"})," which decides when the ",(0,r.jsx)(t.strong,{children:"Authorization Server"})," is\nused. Click the ",(0,r.jsx)(t.strong,{children:"Add rule"})," button to add a new rule to the ",(0,r.jsx)(t.strong,{children:"Authorization Server"}),". Here, make the appropriate\ndecisions. If you're not sure what to use, talk to your IdP administrator and ask for guidance. Add a ",(0,r.jsx)(t.strong,{children:"Rule Name"}),",\ndecide which ",(0,r.jsx)(t.strong,{children:"Grants"})," to allow, which ",(0,r.jsx)(t.strong,{children:"Users"})," are assigned and which ",(0,r.jsx)(t.strong,{children:"Scopes"})," will activate the rule and then\nclick ",(0,r.jsx)(t.strong,{children:"Create Rule"})," at the bottom of the form."]}),"\n",(0,r.jsx)(t.admonition,{title:"Add Authorization Server Policy Rule",type:"info",children:(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{alt:"Add Authorization Server Policy Rule",src:n(32146).A+"",width:"667",height:"900"})})}),"\n",(0,r.jsx)(t.h2,{id:"adding-an-email-claim-to-the-access-token",children:"Adding an Email Claim to the Access Token"}),"\n",(0,r.jsxs)(t.p,{children:["If you want to use the user's email address as a claim in your access token, this can be accomplished by creating a\n",(0,r.jsx)(t.strong,{children:"Claim"})," on the ",(0,r.jsx)(t.strong,{children:"Authorization Server"}),". From the ",(0,r.jsx)(t.strong,{children:"Authorization Server"})," detail page, find the ",(0,r.jsx)(t.strong,{children:"Claims"})," tab and select\nit. On the form, under ",(0,r.jsx)(t.strong,{children:"Claim type"})," click ",(0,r.jsx)(t.strong,{children:"Access"})," to select the Access token then click ",(0,r.jsx)(t.strong,{children:"Add Claim"}),"."]}),"\n",(0,r.jsx)(t.admonition,{title:"Add Claim",type:"info",children:(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{alt:"Add Email Claim",src:n(23900).A+"",width:"1026",height:"460"})})}),"\n",(0,r.jsxs)(t.p,{children:["To finalize the claim fill out the fields shown and click ",(0,r.jsx)(t.strong,{children:"Create"})," when done:"]}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Name"})," - the name of the claim ",(0,r.jsx)(t.strong,{children:"as it appears in the JWT"}),". You likely want this to be ",(0,r.jsx)(t.code,{children:"email"})]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Value"})," - use the expression/value of ",(0,r.jsx)(t.code,{children:"user.email"})," as the ",(0,r.jsx)(t.strong,{children:"Value"})," to get the user's email"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Include in"})," - what scopes if requested will activate the claim. Using ",(0,r.jsx)(t.code,{children:"openid"})," alone is sufficient to always\nreturn it in tokens. Assign other claims such as ",(0,r.jsx)(t.code,{children:"profile"})," or ",(0,r.jsx)(t.code,{children:"email"})," to activate the claim more specifically"]}),"\n"]}),"\n",(0,r.jsx)(t.admonition,{title:"Add Email Claim - Details",type:"info",children:(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{alt:"Add Email Claim",src:n(12432).A+"",width:"677",height:"558"})})}),"\n",(0,r.jsx)(t.h2,{id:"verify-token-in-okta-web-portal",children:"Verify Token in Okta Web Portal"}),"\n",(0,r.jsxs)(t.p,{children:["The Okta web portal can also help verify tokens before using them with OpenZiti. This functionality can be quite\nhelpful. From the ",(0,r.jsx)(t.strong,{children:"Authorization Server"}),", click the ",(0,r.jsx)(t.strong,{children:"Token Preview"})," tab. Fill out the ",(0,r.jsx)(t.strong,{children:"OAuth/OIDC client"}),", ",(0,r.jsx)(t.strong,{children:"Grant\ntype"}),", ",(0,r.jsx)(t.strong,{children:"User"})," and ",(0,r.jsx)(t.strong,{children:"Scopes"}),", then click ",(0,r.jsx)(t.strong,{children:"Preview Token"}),". The resulting ",(0,r.jsx)(t.code,{children:"id_token"})," or (access) ",(0,r.jsx)(t.code,{children:"token"})," will be\nshown in the ",(0,r.jsx)(t.strong,{children:"Preview"})," pane to the right. Use this preview to ensure the OpenZiti overlay is configured correctly."]}),"\n",(0,r.jsx)(t.admonition,{title:"Verify Token in Okta Web Portal",type:"info",children:(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{alt:"Verify Token in Okta Web Portal",src:n(9574).A+"",width:"1085",height:"840"})})})]})}function u(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},27763:(e,t,n)=>{n.d(t,{A:()=>j});var i=n(96540),r=n(34164),s=n(25246),o=n(9136),a=n(33535);const l={details:"details_lb9f",isBrowser:"isBrowser_bmU9",collapsibleContent:"collapsibleContent_i85q"};var d=n(74848);function c(e){return!!e&&("SUMMARY"===e.tagName||c(e.parentElement))}function h(e,t){return!!e&&(e===t||h(e.parentElement,t))}function u(e){let{summary:t,children:n,...u}=e;(0,s.A)().collectAnchor(u.id);const p=(0,o.A)(),x=(0,i.useRef)(null),{collapsed:g,setCollapsed:j}=(0,a.u)({initialState:!u.open}),[f,m]=(0,i.useState)(u.open),A=i.isValidElement(t)?t:(0,d.jsx)("summary",{children:t??"Details"});return(0,d.jsxs)("details",{...u,ref:x,open:f,"data-collapsed":g,className:(0,r.A)(l.details,p&&l.isBrowser,u.className),onMouseDown:e=>{c(e.target)&&e.detail>1&&e.preventDefault()},onClick:e=>{e.stopPropagation();const t=e.target;c(t)&&h(t,x.current)&&(e.preventDefault(),g?(j(!1),m(!0)):j(!0))},children:[A,(0,d.jsx)(a.N,{lazy:!1,collapsed:g,disableSSRStyle:!0,onCollapseTransitionEnd:e=>{j(e),m(!e)},children:(0,d.jsx)("div",{className:l.collapsibleContent,children:n})})]})}const p={details:"details_b_Ee"},x="alert alert--info";function g(e){let{...t}=e;return(0,d.jsx)(u,{...t,className:(0,r.A)(x,p.details,t.className)})}function j(e){const t=i.Children.toArray(e.children),n=t.find((e=>i.isValidElement(e)&&"summary"===e.type)),r=(0,d.jsx)(d.Fragment,{children:t.filter((e=>e!==n))});return(0,d.jsx)(g,{...e,summary:n,children:r})}},91734:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/add-auth-server-policy-ccce1c100d9d6d02beadc31128b51e0a.png"},58020:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/add-auth-server-popup-5c6bb3d02f89edb298e1509c7f314ba3.png"},32146:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/add-auth-server-rule-73c443b14ad6b859ed33b5df40dd752d.png"},42789:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/add-auth-server-1b099f213ecd504496fadff25433c4ea.png"},12432:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/add-email-claim-detail-6ff20bff131399f50285826c2ebd0a3e.png"},23900:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/add-email-claim-faaebc1e740d72340d9f0f698e41915a.png"},13678:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/create-app-type-c6a10b1bff2dff08142f7785b75d3cf3.png"},67499:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/create-app-bbbde9d061c2c04303d5f59bd10bef6e.png"},7324:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/finalize-app-integration-e4baf93cfbdacc114be3e6b01ae824d0.png"},9574:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/verify-token-916ec26e588b1a93357a690572fd0090.png"},28453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>a});var i=n(96540);const r={},s=i.createContext(r);function o(e){const t=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(s.Provider,{value:t},e.children)}}}]);