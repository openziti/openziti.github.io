"use strict";(self.webpackChunkopen_ziti=self.webpackChunkopen_ziti||[]).push([[9952],{3905:(e,n,t)=>{t.d(n,{Zo:()=>d,kt:()=>h});var r=t(67294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var s=r.createContext({}),u=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},d=function(e){var n=u(e.components);return r.createElement(s.Provider,{value:n},e.children)},m="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},c=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),m=u(t),c=i,h=m["".concat(s,".").concat(c)]||m[c]||p[c]||o;return t?r.createElement(h,a(a({ref:n},d),{},{components:t})):r.createElement(h,a({ref:n},d))}));function h(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,a=new Array(o);a[0]=c;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[m]="string"==typeof e?e:i,a[1]=l;for(var u=2;u<o;u++)a[u]=t[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}c.displayName="MDXCreateElement"},15062:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>l,default:()=>c,frontMatter:()=>a,metadata:()=>s,toc:()=>d});var r=t(87462),i=(t(67294),t(3905)),o=t(85982);const a={},l="Options and Modes",s={unversionedId:"reference/tunnelers/linux/linux-tunnel-options",id:"reference/tunnelers/linux/linux-tunnel-options",title:"Options and Modes",description:"ziti-edge-tunnel Environment Variables",source:"@site/docs/reference/tunnelers/60-linux/40-linux-tunnel-options.mdx",sourceDirName:"reference/tunnelers/60-linux",slug:"/reference/tunnelers/linux/linux-tunnel-options",permalink:"/docs/reference/tunnelers/linux/linux-tunnel-options",draft:!1,editUrl:"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/reference/tunnelers/60-linux/40-linux-tunnel-options.mdx",tags:[],version:"current",sidebarPosition:40,frontMatter:{},sidebar:"docsSidebar",previous:{title:"Manual",permalink:"/docs/reference/tunnelers/linux/manual-installation"},next:{title:"Troubleshooting",permalink:"/docs/reference/tunnelers/linux/linux-tunnel-troubleshooting"}},u={},d=[{value:"<code>ziti-edge-tunnel</code> Environment Variables",id:"ziti-edge-tunnel-environment-variables",level:2},{value:"<code>ziti-edge-tunnel</code> Global Options",id:"ziti-edge-tunnel-global-options",level:2},{value:"Run Modes",id:"run-modes",level:2},{value:"<code>run</code> Mode",id:"run-mode",level:3},{value:"How does <code>run</code> configure nameservers?",id:"how-does-run-configure-nameservers",level:4},{value:"System Requirements for Mode <code>run</code>",id:"system-requirements-for-mode-run",level:4},{value:"<code>run-host</code> Mode",id:"run-host-mode",level:3},{value:"System Requirements for Mode <code>run-host</code>",id:"system-requirements-for-mode-run-host",level:4}],m={toc:d},p="wrapper";function c(e){let{components:n,...t}=e;return(0,i.kt)(p,(0,r.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"options-and-modes"},"Options and Modes"),(0,i.kt)("h2",{id:"ziti-edge-tunnel-environment-variables"},(0,i.kt)("inlineCode",{parentName:"h2"},"ziti-edge-tunnel")," Environment Variables"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"ZITI_TIME_FORMAT=utc")," - set the log message time format to UTC timestamp instead of milliseconds since start"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"ZITI_LOG=4")," - set the log level of the underlying Ziti C SDK, higher is more verbose (level 4 means DEBUG)"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"TLSUV_DEBUG=4")," - set the log level of the underlying libuv library, higher is more verbose (level 4 means DEBUG)"),(0,i.kt)("p",null,"For more information about configuring the underlying Ziti C SDK with environment variables, see ",(0,i.kt)("a",{parentName:"p",href:"/docs/reference/developer/sdk/ziti-sdk-c"},"the Ziti C SDK documentation"),"."),(0,i.kt)("h2",{id:"ziti-edge-tunnel-global-options"},(0,i.kt)("inlineCode",{parentName:"h2"},"ziti-edge-tunnel")," Global Options"),(0,i.kt)("p",null,"You can start ",(0,i.kt)("inlineCode",{parentName:"p"},"ziti-edge-tunnel")," with different options, some of the most commonly used options are listed below."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text"},"# Load a single identity.\n--identity <identity>\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text"},"# Load all identities in a dir, ignoring files with a .bak or .original filename suffix.\n--identity-dir <dir>\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text"},"# Set log level, higher is more verbose (default level 3 means INFO).\n--verbose N\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text"},"# Set service polling interval in seconds (default 10).\n--refresh N\n")),(0,i.kt)("h2",{id:"run-modes"},"Run Modes"),(0,i.kt)("p",null,"There are two run modes:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"run"),": transparent proxy with DNS nameserver"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"run-host"),": hosting-only without proxy or nameserver")),(0,i.kt)("h3",{id:"run-mode"},(0,i.kt)("inlineCode",{parentName:"h3"},"run")," Mode"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"ziti-edge-tunnel run")," provides a transparent proxy and nameserver. The nameserver may be configured to be authoritative (the default) or recursive with command-line option ",(0,i.kt)("inlineCode",{parentName:"p"},"--dns-upstream"),". ",(0,i.kt)("inlineCode",{parentName:"p"},"systemd-resolved"),", if enabled, automatically configures the Ziti nameserver. You may inspect the configuration with these commands."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text"},"resolvectl dns     # inspect the association of tun device and nameserver\nresolvectl domain  # inspect the configuration of query routing domains\n")),(0,i.kt)("p",null,"If any interface has a wildcard routing domain configured, ",(0,i.kt)("inlineCode",{parentName:"p"},"ziti-edge-tunnel")," will also configure its tun with a wildcard routing domain. If no other interface has a wildcard routing domain configured, neither will the ",(0,i.kt)("inlineCode",{parentName:"p"},"ziti-edge-tunnel")," tun."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text"},"# Specify the tun interface address and the subnet to which Service domain names are resolved (default 100.64.0.1/10). The nameserver address is always the tun interface address +1, default is 100.64.0.2.\n--dns-ip-range <ip range>\n")),(0,i.kt)("h4",{id:"how-does-run-configure-nameservers"},"How does ",(0,i.kt)("inlineCode",{parentName:"h4"},"run")," configure nameservers?"),(0,i.kt)(o.ZP,{mdxType:"LinuxResolverConfig"}),(0,i.kt)("h4",{id:"system-requirements-for-mode-run"},"System Requirements for Mode ",(0,i.kt)("inlineCode",{parentName:"h4"},"run")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"ziti-edge-tunnel run")," requires Linux capabilities for managing the ",(0,i.kt)("inlineCode",{parentName:"p"},"/dev/net/tun")," device, running ",(0,i.kt)("inlineCode",{parentName:"p"},"resolvectl")," to assign nameservers and domain routes to the tun interface, and running ",(0,i.kt)("inlineCode",{parentName:"p"},"ip route")," to manage IP routes."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"tun device and route management are permitted by passing the ",(0,i.kt)("inlineCode",{parentName:"li"},"CAP_NET_ADMIN")," to the ziti-edge-tunnel process via ",(0,i.kt)("inlineCode",{parentName:"li"},"AmbientCapabilities")," in the systemd service unit."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"systemd-resolved")," DNS configuration is permitted by a PolKit rule installed with the RPM or DEB package.")),(0,i.kt)("h3",{id:"run-host-mode"},(0,i.kt)("inlineCode",{parentName:"h3"},"run-host")," Mode"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"ziti-edge-tunnel run-host")," is a mode for hosting (listening) for services which does provide service intercepts or DNS. Services configured for 'Bind' will be hosted by the tunneler."),(0,i.kt)("h4",{id:"system-requirements-for-mode-run-host"},"System Requirements for Mode ",(0,i.kt)("inlineCode",{parentName:"h4"},"run-host")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"ziti-edge-tunnel run-host")," does not require elevated privileges or the above device or socket, only network egress to the servers for which it is hosting Services."))}c.isMDXComponent=!0},85982:(e,n,t)=>{t.d(n,{ZP:()=>l});var r=t(87462),i=(t(67294),t(3905));const o={toc:[]},a="wrapper";function l(e){let{components:n,...t}=e;return(0,i.kt)(a,(0,r.Z)({},o,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"ziti-edge-tunnel run")," provides a built-in nameserver for the services it is authorized to dial. The nameserver is automatically configured by ",(0,i.kt)("inlineCode",{parentName:"p"},"systemd-resolved"),", if enabled."),(0,i.kt)("p",null,"If ",(0,i.kt)("inlineCode",{parentName:"p"},"systemd-resolved")," is not enabled, you must configure your resolver to query the tunneler's nameserver. Add Ziti's nameserver to the connection manager, e.g., NetworkManager, Netplan, or by directly editing ",(0,i.kt)("inlineCode",{parentName:"p"},"/etc/resolv.conf"),"."),(0,i.kt)("p",null,"You may configure the system resolver to use the tunneler's nameserver as the first or only nameserver."),(0,i.kt)("p",null,"When the tunneler nameserver is the first of multiple nameservers and the requested DNS record does not match an authorized service's intercept domain name, it sets the query status to ",(0,i.kt)("inlineCode",{parentName:"p"},"REFUSE"),". This implies that the caller ",(0,i.kt)("em",{parentName:"p"},"should")," keep trying to resolve the domain name with other nameservers."),(0,i.kt)("p",null,"To use the tunneler nameserver as the only nameserver, you must specify an upstream nameserver for recursion: ",(0,i.kt)("inlineCode",{parentName:"p"},"ziti-edge-tunnel run --dns-upstream 208.67.222.222"),". In this configuration, the query status from the upstream nameserver is returned, e.g., ",(0,i.kt)("inlineCode",{parentName:"p"},"NXDOMAIN")," if the domain name is not found in the tunneler nameserver or the upstream nameserver."),(0,i.kt)("p",null,"The IP address of the nameserver (default: ",(0,i.kt)("inlineCode",{parentName:"p"},"100.64.0.2"),") is determined by the tunneler's dns-ip-range (default: ",(0,i.kt)("inlineCode",{parentName:"p"},"100.64.0.1/10"),")."))}l.isMDXComponent=!0}}]);