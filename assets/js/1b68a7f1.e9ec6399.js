"use strict";(self.webpackChunkdocusaurus_3=self.webpackChunkdocusaurus_3||[]).push([[7939],{50855:(e,n,o)=>{o.d(n,{Ay:()=>c,RM:()=>s});var t=o(74848),r=o(28453);const s=[];function i(e){const n={a:"a",p:"p",...(0,r.R)(),...e.components};return(0,t.jsxs)(n.p,{children:["If you are building a new application you have a unique opportunity to choose to use one of the Ziti SDKs and to create a\r\ntruly zero trust application from the start! A Ziti Edge SDK enables your application to discover and provide or connect\r\nto Ziti services directly without an agent or proxy. The SDKs use\r\n",(0,t.jsx)(n.a,{href:"/docs/reference/developer/api/#edge-client-api",children:"the edge client API"})," provided by the controller to authenticate and\r\ndiscover routers and services. Then, the SDK connects to the most responsive router and begins hosting or connecting to the Ziti service."]})}function c(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(i,{...e})}):i(e)}},55539:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>c,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"learn/core-concepts/clients/choose","title":"Choosing a Client","description":"Once you have a network - you are going to require a Ziti-aware client in order to access the network. There are","source":"@site/docs/learn/core-concepts/clients/choose.mdx","sourceDirName":"learn/core-concepts/clients","slug":"/learn/core-concepts/clients/choose","permalink":"/docs/learn/core-concepts/clients/choose","draft":false,"unlisted":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/core-concepts/clients/choose.mdx","tags":[],"version":"current","lastUpdatedAt":1744638201000,"sidebarPosition":0,"frontMatter":{"title":"Choosing a Client","id":"choose","sidebar_position":0},"sidebar":"docsSidebar","previous":{"title":"Core Concepts","permalink":"/docs/category/core-concepts"},"next":{"title":"Process Sequences","permalink":"/docs/category/process-sequences"}}');var r=o(74848),s=o(28453),i=o(50855);const c={title:"Choosing a Client",id:"choose",sidebar_position:0},a=void 0,l={},d=[{value:"Tunnelers",id:"tunnelers",level:2},{value:"SDK",id:"sdk",level:2},...i.RM];function u(e){const n={a:"a",h2:"h2",p:"p",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:"Once you have a network - you are going to require a Ziti-aware client in order to access the network. There are\r\ntwo types of clients and depending on your needs you'll choose to either use a tunneler or you will use an SDK to\r\nsecurely access the network."}),"\n",(0,r.jsxs)(n.p,{children:["Choosing which type of client you will use to connect to a network is a straightforward process and comes down to a\r\nsingle question. If you are you installing Ziti in front of an existing application which has already been developed and\r\ndeployed you need to use a ",(0,r.jsx)(n.a,{href:"/docs/reference/tunnelers/",children:"tunneler"}),".  If you are developing a new product, starting from scratch and\r\nyou want to take advantage of a fully zero trust solution you will probably want to use an SDK."]}),"\n",(0,r.jsx)(n.h2,{id:"tunnelers",children:"Tunnelers"}),"\n",(0,r.jsx)(n.p,{children:"A tunneler is purpose-built software designed to connect applications which are not Ziti-aware to the network."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"/docs/reference/tunnelers/",children:"Learn more about tunnelers"})}),"\n",(0,r.jsx)(n.h2,{id:"sdk",children:"SDK"}),"\n",(0,r.jsx)(i.Ay,{}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"/docs/reference/developer/sdk/",children:"Explore edge SDK Resources"})})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},28453:(e,n,o)=>{o.d(n,{R:()=>i,x:()=>c});var t=o(96540);const r={},s=t.createContext(r);function i(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);