"use strict";(self.webpackChunkdocusaurus_3=self.webpackChunkdocusaurus_3||[]).push([[9256],{51848:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>s,default:()=>h,frontMatter:()=>l,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"reference/ha/routers","title":"Routers in Controller HA","description":"There are only a few differences in how routers work in an HA cluster.","source":"@site/docs/reference/ha/routers.md","sourceDirName":"reference/ha","slug":"/reference/ha/routers","permalink":"/docs/reference/ha/routers","draft":false,"unlisted":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/reference/ha/routers.md","tags":[],"version":"current","lastUpdatedAt":1743027958000,"sidebarPosition":40,"frontMatter":{"sidebar_label":"Routers","sidebar_position":40},"sidebar":"docsSidebar","previous":{"title":"Initialization","permalink":"/docs/reference/ha/bootstrapping/initialization"},"next":{"title":"Operations","permalink":"/docs/reference/ha/operations"}}');var o=t(74848),i=t(28453);const l={sidebar_label:"Routers",sidebar_position:40},s="Routers in Controller HA",a={},c=[{value:"Configuration",id:"configuration",level:2},{value:"Endpoints File",id:"endpoints-file",level:3},{value:"Location",id:"location",level:4},{value:"Manual Controller Configuration",id:"manual-controller-configuration",level:3},{value:"Router Data Model",id:"router-data-model",level:2},{value:"Controller Selection",id:"controller-selection",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"routers-in-controller-ha",children:"Routers in Controller HA"})}),"\n",(0,o.jsx)(n.p,{children:"There are only a few differences in how routers work in an HA cluster."}),"\n",(0,o.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,o.jsx)(n.p,{children:"When enrolling routers, the JWT for a new router contains the list of\ncontrollers. When the router is enrolled, the controller endpoints\nconfiguration file is initialized with the list of controllers."}),"\n",(0,o.jsx)(n.p,{children:"This means that manually configuring the controllers for a router should\nno longer be required."}),"\n",(0,o.jsx)(n.h3,{id:"endpoints-file",children:"Endpoints File"}),"\n",(0,o.jsx)(n.p,{children:"The router stores the current known controllers in an endpoints configuration\nfile."}),"\n",(0,o.jsx)(n.p,{children:"Note that:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"The endpoints file will be written whenever the router is notified of changes\nto the controller cluster."}),"\n",(0,o.jsx)(n.li,{children:"The file is only read at router startup."}),"\n",(0,o.jsx)(n.li,{children:"The file is not monitored, so changes made by administrators while the router\nis running won't take effect until the router is restarted, and may be\noverwritten by the router before it is restarted. Make sure the router is\nstopped before manually editting the file."}),"\n",(0,o.jsx)(n.li,{children:"The endpoints file is only generated by enrollment and when the endpoints\nchange. For an existing configuration with the routers specified in the\nrouter config, if the endpoints never change, the endpoints file will never\nbe generated."}),"\n"]}),"\n",(0,o.jsx)(n.h4,{id:"location",children:"Location"}),"\n",(0,o.jsxs)(n.p,{children:["By default, the endpoints file will be named ",(0,o.jsx)(n.code,{children:"endpoints"})," and will be placed\nin the same directory as the router config file."]}),"\n",(0,o.jsx)(n.p,{children:"Customize the path of the endpoints file in the config file."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"ctrl:\n  endpoints:\n    - tls:ctrl1.ziti.example.com:1280\n  endpointsFile: /var/run/ziti/endpoints.yaml\n"})}),"\n",(0,o.jsx)(n.h3,{id:"manual-controller-configuration",children:"Manual Controller Configuration"}),"\n",(0,o.jsx)(n.p,{children:"Instead of specifying a single controller, multiple controllers can be specified\nin the router configuration."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"ctrl:\n  endpoints:\n    - tls:ctrl1.ziti.example.com:1280\n    - tls:ctrl2.ziti.example.com:1280\n    - tls:ctrl3.ziti.example.com:1280\n"})}),"\n",(0,o.jsx)(n.p,{children:"If the controller cluster changes, it will notify routers of the updated\ncontroller endpoints."}),"\n",(0,o.jsx)(n.h2,{id:"router-data-model",children:"Router Data Model"}),"\n",(0,o.jsx)(n.p,{children:"The router receives a stripped down version of the controller data model."}),"\n",(0,o.jsx)(n.p,{children:"While the router data model can be disabled on the controller using a config\nsetting in standalone mode, it is required for controller clusters, so that\nsetting will be ignored."}),"\n",(0,o.jsx)(n.p,{children:"The data model on the router is periodically snapshotted, so it doesn't need to\nbe fully restored from a controller on every restart."}),"\n",(0,o.jsxs)(n.p,{children:["The location and frequency of snapshotting can be\n",(0,o.jsx)(n.a,{href:"../configuration/router#edge",children:"configured using the db and dbSaveIntervalSeconds properties"}),"."]}),"\n",(0,o.jsx)(n.h2,{id:"controller-selection",children:"Controller Selection"}),"\n",(0,o.jsxs)(n.p,{children:["When creating ",(0,o.jsx)(n.a,{href:"/docs/learn/core-concepts/security/SessionsAndConnections#data-plane",children:"circuits"}),",\nrouters will chose the most responsive controller, based on latency. Network operators will\nwant to keep an eye on controllers to make sure they can keep up with the circuit creation\nload they receive."]}),"\n",(0,o.jsx)(n.p,{children:"When managing terminators, routers will try to talk directly to the current\ncluster leader, since updates have to go through the leader."})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>s});var r=t(96540);const o={},i=r.createContext(o);function l(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:l(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);