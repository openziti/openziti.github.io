"use strict";(self.webpackChunkdocusaurus_3=self.webpackChunkdocusaurus_3||[]).push([[5763],{94931:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>s,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"learn/core-concepts/security/authentication/identities","title":"Identities","description":"Ziti Edge defines a top level entity called an Identity. An Identity is a security principal that can bind (host) or","source":"@site/docs/learn/core-concepts/security/authentication/60-identities.md","sourceDirName":"learn/core-concepts/security/authentication","slug":"/learn/core-concepts/security/authentication/identities","permalink":"/docs/learn/core-concepts/security/authentication/identities","draft":false,"unlisted":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/core-concepts/security/authentication/60-identities.md","tags":[],"version":"current","lastUpdatedAt":1755607176000,"sidebarPosition":60,"frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"External JWT Signers","permalink":"/docs/learn/core-concepts/security/authentication/external-jwt-signers"},"next":{"title":"MFA TOTP","permalink":"/docs/learn/core-concepts/security/authentication/totp"}}');var a=t(74848),r=t(28453);const s={},l="Identities",c={},d=[{value:"Identity ER Diagram",id:"identity-er-diagram",level:2},{value:"Creating",id:"creating",level:2},{value:"Creating w/ No Authenticators/Enrollments",id:"creating-w-no-authenticatorsenrollments",level:3},{value:"Ziti CLI",id:"ziti-cli",level:4},{value:"Edge Management API",id:"edge-management-api",level:4},{value:"Creating w/ Ziti PKI Client Cert Enrollment",id:"creating-w-ziti-pki-client-cert-enrollment",level:3},{value:"Ziti CLI",id:"ziti-cli-1",level:4},{value:"Edge Management API",id:"edge-management-api-1",level:4},{value:"Creating w/ 3rd Party CA Client Cert Enrollment",id:"creating-w-3rd-party-ca-client-cert-enrollment",level:3},{value:"Ziti CLI:",id:"ziti-cli-2",level:4},{value:"Edge Management API",id:"edge-management-api-2",level:4},{value:"Creating w/ Username/Password Enrollment",id:"creating-w-usernamepassword-enrollment",level:3},{value:"Ziti CLI:",id:"ziti-cli-3",level:4},{value:"Edge Management API",id:"edge-management-api-3",level:4},{value:"Creating w/ JWT Authenticator",id:"creating-w-jwt-authenticator",level:3},{value:"Ziti CLI:",id:"ziti-cli-4",level:4},{value:"Edge Management API",id:"edge-management-api-4",level:4},{value:"Deleting",id:"deleting",level:2}];function o(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",mermaid:"mermaid",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"identities",children:"Identities"})}),"\n",(0,a.jsx)(n.p,{children:"Ziti Edge defines a top level entity called an Identity. An Identity is a security principal that can bind (host) or\ndial (connect) to services over a network. An Identity may be a human who uses one or more devices, a device\nitself, a single account on a multi-user device, an application, or a set of applications. What determines what an\nIdentity is only limited by the intent of its use, its security configuration, and where/how it stores its credentials."}),"\n",(0,a.jsxs)(n.p,{children:["If an Identity represents a human that is using an SSO provider that ties into Ziti Edge's\n",(0,a.jsx)(n.a,{href:"/docs/learn/core-concepts/security/authentication/external-jwt-signers",children:"External JWT Signers"})," the human operator can move from device to device using whichever Ziti\nenabled applications that allow them to authenticate. If the Identity can only authenticate via a x509 Client\nCertificate where the private key is stored in a hardware back keystore on a device, such that the key can not be moved,\nthe identity is tied to that hardware. Further if the Identity's credentials are stored in an OS-backed user specific\nstorage mechanism (e.g. Windows Credential Manager) it is that accounts Identity."]}),"\n",(0,a.jsx)(n.h2,{id:"identity-er-diagram",children:"Identity ER Diagram"}),"\n",(0,a.jsx)(n.p,{children:"Below is a diagram that show the high-level relationships between an Identity and various important entities and within\na network. This diagram does not show all entities, simply the ones tied closest to an Identity. For example,\nthe Role Attributes on an Identity are used by selectors defined on policies to act on the identity. However, the\npolicies and selectors are not modeled here."}),"\n",(0,a.jsx)(n.mermaid,{value:"erDiagram\n    Identity ||..o{ API-Session : has\n    API-Session ||..o{ Session : has\n    API-Session ||..o{ Session-Certificates : has\n    API-Session ||..|| Posture-Data : has\n    Identity ||..|| Authentication-Policy : has\n    Identity ||..o{ Identity-Role-Attributes : has\n    Identity ||..o{ Authenticator: has\n    Identity ||..o{ Enrollment: has\n    Identity ||..o| MFA-TOTP-Config: has"}),"\n",(0,a.jsx)(n.h2,{id:"creating",children:"Creating"}),"\n",(0,a.jsxs)(n.p,{children:["Creating an identity alone may not be enough to make it usable. An identity will also need a valid primary\nauthentication mechanism. Depending on that mechanism it may also need to complete ",(0,a.jsx)(n.a,{href:"/docs/learn/core-concepts/security/enrollment#clients",children:"enrollment"}),"."]}),"\n",(0,a.jsxs)(n.p,{children:["Please note that all authentication mechanisms also require a properly configured ",(0,a.jsx)(n.a,{href:"./auth",children:"authentication policy"})]}),"\n",(0,a.jsxs)(n.p,{children:["The following ",(0,a.jsx)(n.a,{href:"./auth#primary-authentication",children:"primary authentication"})," mechanisms require post-creation enrollment:"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Ziti PKI x509 Client Certificate"}),"\n",(0,a.jsx)(n.li,{children:"3rd Party x509 Client Certificate"}),"\n",(0,a.jsx)(n.li,{children:"Username Password (UPDB)"}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["The following do not require enrollment, but must have a properly configured ",(0,a.jsx)(n.a,{href:"./external-jwt-signers",children:"External JWT Signer"})]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"JWT"}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"creating-w-no-authenticatorsenrollments",children:"Creating w/ No Authenticators/Enrollments"}),"\n",(0,a.jsx)(n.p,{children:"Note: This identity will not be able to authenticate"}),"\n",(0,a.jsx)(n.h4,{id:"ziti-cli",children:"Ziti CLI"}),"\n",(0,a.jsx)(n.p,{children:"It is currently not possible to create and identity without an enrollment option through the CLI. It can be completed\nby creating and identity then deleting the default certificate enrollment."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-text",children:'ziti edge create identity [device|service|user] <name>\nziti edge delete enrollment where "identity=<id>"\n'})}),"\n",(0,a.jsx)(n.h4,{id:"edge-management-api",children:"Edge Management API"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.code,{children:"POST /edge/management/v1/identities"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-text",children:'{\n  "name": "Roger Wilco",\n  "isAdmin": false\n}\n'})}),"\n",(0,a.jsx)(n.h3,{id:"creating-w-ziti-pki-client-cert-enrollment",children:"Creating w/ Ziti PKI Client Cert Enrollment"}),"\n",(0,a.jsxs)(n.p,{children:["Note: This identity will be using the default ",(0,a.jsx)(n.a,{href:"./auth",children:"authentication policy"})," which allows certificate authentication"]}),"\n",(0,a.jsx)(n.h4,{id:"ziti-cli-1",children:"Ziti CLI"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.code,{children:"ziti edge create identity [device|service|user] <name> "})}),"\n",(0,a.jsx)(n.h4,{id:"edge-management-api-1",children:"Edge Management API"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.code,{children:"POST /edge/management/v1/identities"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-text",children:'{\n  "name": "Roger Wilco",\n  "isAdmin": false,\n  "enrollment": {\n    "ott": true\n  }\n}\n'})}),"\n",(0,a.jsx)(n.h3,{id:"creating-w-3rd-party-ca-client-cert-enrollment",children:"Creating w/ 3rd Party CA Client Cert Enrollment"}),"\n",(0,a.jsxs)(n.p,{children:["Note: This identity will be using the default ",(0,a.jsx)(n.a,{href:"./auth",children:"authentication policy"})," which allows certificate authentication"]}),"\n",(0,a.jsx)(n.h4,{id:"ziti-cli-2",children:"Ziti CLI:"}),"\n",(0,a.jsx)(n.p,{children:"It is currently not possible to create identities with a 3rd party certificate enrollment through the CLI."}),"\n",(0,a.jsx)(n.h4,{id:"edge-management-api-2",children:"Edge Management API"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.code,{children:"POST /edge/management/v1/identities"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-text",children:'{\n  "name": "Roger Wilco",\n  "isAdmin": false,\n  "enrollment": {\n    "ottca": "<id-to-3rd-party-ca>"\n  }\n}\n'})}),"\n",(0,a.jsx)(n.h3,{id:"creating-w-usernamepassword-enrollment",children:"Creating w/ Username/Password Enrollment"}),"\n",(0,a.jsxs)(n.p,{children:["Note: This identity will be using the default ",(0,a.jsx)(n.a,{href:"./auth",children:"authentication policy"})," which allows UPDB authentication"]}),"\n",(0,a.jsx)(n.h4,{id:"ziti-cli-3",children:"Ziti CLI:"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.code,{children:"ziti edge create identity [device|service|user] <name> --updb <username>"})}),"\n",(0,a.jsx)(n.h4,{id:"edge-management-api-3",children:"Edge Management API"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.code,{children:"POST /edge/management/v1/identities"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-text",children:'{\n  "name": "Roger Wilco",\n  "isAdmin": false,\n  "enrollment": {\n    "updb": "<username>"\n  }\n}\n'})}),"\n",(0,a.jsx)(n.h3,{id:"creating-w-jwt-authenticator",children:"Creating w/ JWT Authenticator"}),"\n",(0,a.jsxs)(n.p,{children:["Note: A valid ",(0,a.jsx)(n.a,{href:"./external-jwt-signers",children:"External JWT Signer"})," must be created and an ",(0,a.jsx)(n.a,{href:"./auth",children:"authentication policy"}),"\nmust be defined that allows the identity to authenticate with that signer."]}),"\n",(0,a.jsx)(n.h4,{id:"ziti-cli-4",children:"Ziti CLI:"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.code,{children:'ziti edge create identity [device|service|user] <name> --external-id "externalJWTId"'})}),"\n",(0,a.jsx)(n.h4,{id:"edge-management-api-4",children:"Edge Management API"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.code,{children:"POST /edge/management/v1/identities"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-text",children:'{\n  "name": "Roger Wilco",\n  "isAdmin": false,\n  "externalId": "externalJWTId"\n}\n'})}),"\n",(0,a.jsx)(n.h2,{id:"deleting",children:"Deleting"}),"\n",(0,a.jsx)(n.p,{children:"Deleting an Identity removes all directly associated data. This includes:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"/docs/learn/core-concepts/security/sessions#api-session",children:"API Sessions"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"../sessions#session",children:"Sessions"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"/docs/learn/core-concepts/security/authorization/posture-checks#posture-data",children:"Posture Data"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"/docs/learn/core-concepts/security/authentication/api-session-certificates",children:"Session Certificates"})}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.li,{children:"Identity Role Attributes"}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"/docs/learn/core-concepts/security/authentication/auth#authenticators",children:"Authenticators"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"/docs/learn/core-concepts/security/enrollment",children:"Enrollments"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"/docs/learn/core-concepts/security/authentication/totp",children:"MFA TOTP Configuration"})}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"It does not remove entities are that re-usable between Identities:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"/docs/learn/core-concepts/security/authentication/authentication-policies",children:"Authentication Policies"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"/docs/learn/core-concepts/security/authorization/policies/overview",children:"Service Policies"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"/docs/learn/core-concepts/security/authorization/policies/overview",children:"Edge Router Policies"})}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"Deleting an Identity immediately removes it and all current and future access it would have to a network and its\nServices."})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(o,{...e})}):o(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>l});var i=t(96540);const a={},r=i.createContext(a);function s(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);