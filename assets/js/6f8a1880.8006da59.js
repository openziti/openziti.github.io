"use strict";(self.webpackChunkdocusaurus_3=self.webpackChunkdocusaurus_3||[]).push([[9153],{96401:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>a,default:()=>u,frontMatter:()=>s,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"learn/core-concepts/security/authentication/certificate-management","title":"Certificate Management","description":"Clients, routers, and the controller use x509 client and server certificates. Client authentication","source":"@site/docs/learn/core-concepts/security/authentication/40-certificate-management.md","sourceDirName":"learn/core-concepts/security/authentication","slug":"/learn/core-concepts/security/authentication/certificate-management","permalink":"/docs/learn/core-concepts/security/authentication/certificate-management","draft":false,"unlisted":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/core-concepts/security/authentication/40-certificate-management.md","tags":[],"version":"current","lastUpdatedAt":1754512703000,"sidebarPosition":40,"frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Authentication Policies","permalink":"/docs/learn/core-concepts/security/authentication/authentication-policies"},"next":{"title":"External JWT Signers","permalink":"/docs/learn/core-concepts/security/authentication/external-jwt-signers"}}');var r=n(74848),c=n(28453);const s={},a="Certificate Management",o={},l=[{value:"Router Certificate Extension",id:"router-certificate-extension",level:2},{value:"Client Certificate Extension",id:"client-certificate-extension",level:2},{value:"Client Certificate Extension",id:"client-certificate-extension-1",level:3},{value:"Request",id:"request",level:4},{value:"Response:",id:"response",level:4}];function d(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",p:"p",pre:"pre",...(0,c.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"certificate-management",children:"Certificate Management"})}),"\n",(0,r.jsx)(t.p,{children:"Clients, routers, and the controller use x509 client and server certificates. Client authentication\nmethods include certificates, but router and controller authentication always uses certificates."}),"\n",(0,r.jsxs)(t.p,{children:["Client and Routers with certificates from the internal Edge signer PKI may request new certificates by calling the Edge API.\nRouters always have certificates from the internal Edge signer PKI. Clients can also be created with certificates from external\nPKIs via ",(0,r.jsx)(t.a,{href:"./third-party-cas",children:"3rd Party CAs"}),". Ziti can trust certificates from a configured external CA, but can not revoke or issue those certificates."]}),"\n",(0,r.jsx)(t.h2,{id:"router-certificate-extension",children:"Router Certificate Extension"}),"\n",(0,r.jsxs)(t.p,{children:["Routers will attempt to extend their current client and server certificates one week prior to expiration. No\nintervention is necessary on behalf of the network administrator. The request must be sent to the controller via a\npre-authenticated connection. If a router has been disconnected from the Ziti network and their client certificates\nhave expired, the router must be ",(0,r.jsx)(t.a,{href:"../enrollment#router-enrollment-extension",children:"re-enrolled"}),"."]}),"\n",(0,r.jsx)(t.h2,{id:"client-certificate-extension",children:"Client Certificate Extension"}),"\n",(0,r.jsxs)(t.p,{children:["Clients may determine their own client certificate extension frequency. In order to extend their current client\ncertificate issued by the Ziti PKI, they must issue the following REST request to either the\n",(0,r.jsx)(t.a,{href:"/docs/reference/developer/api/#edge-management-api",children:"edge management API"})," or ",(0,r.jsx)(t.a,{href:"/docs/reference/developer/api/#edge-client-api",children:"edge client API"}),"\nafter becoming ",(0,r.jsx)(t.a,{href:"/docs/learn/core-concepts/security/sessions#full-vs-partial-authentication",children:"fully authenticated"}),"."]}),"\n",(0,r.jsx)(t.h3,{id:"client-certificate-extension-1",children:"Client Certificate Extension"}),"\n",(0,r.jsx)(t.p,{children:"The Ziti SDKs provide helper functions for this process and issuing these requests manually should not be necessary."}),"\n",(0,r.jsxs)(t.p,{children:["The ",(0,r.jsx)(t.code,{children:"id"})," necessary to extend a specific authenticator may be obtained by listing the client's current authenticators\nwith ",(0,r.jsx)(t.code,{children:"GET edge/*/v1/current-identity/authenticators"})," where ",(0,r.jsx)(t.code,{children:"*"})," may be ",(0,r.jsx)(t.code,{children:"management"})," or ",(0,r.jsx)(t.code,{children:"client"}),". The CSR provided\nmust be PEM encoded."]}),"\n",(0,r.jsx)(t.h4,{id:"request",children:"Request"}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.code,{children:"POST edge/client/v1/current-identity/authenticators/{id}/extend"})}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-text",children:'{\n  "clientCertCsr": "-----BEGIN NEW CERTIFICATE REQUEST-----\\n..."\n}\n'})}),"\n",(0,r.jsx)(t.h4,{id:"response",children:"Response:"}),"\n",(0,r.jsx)(t.p,{children:"A new CA bundle and client certificate will be returned PEM encoded."}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-text",children:'{\n  "data": {\n      "ca": "-----BEGIN CERTIFICATE-----\\nMIICZTCCAeygAwIBAgIUOoTKiY",\n      "clientCert": "-----BEGIN CERTIFICATE-----\\nMIICZTCCAeygAwIBAgIUOoTKiY"\n  },\n  "meta": {}\n}\n'})})]})}function u(e={}){const{wrapper:t}={...(0,c.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>a});var i=n(96540);const r={},c=i.createContext(r);function s(e){const t=i.useContext(c);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),i.createElement(c.Provider,{value:t},e.children)}}}]);