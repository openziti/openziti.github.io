"use strict";(self.webpackChunkdocusaurus_3=self.webpackChunkdocusaurus_3||[]).push([[6787],{24453:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>o,contentTitle:()=>c,default:()=>h,frontMatter:()=>l,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"learn/core-concepts/metrics/file","title":"File Reporter","description":"The controller event system can write metrics to a file for direct viewing or post-processing into a metrics system of your choice.","source":"@site/docs/learn/core-concepts/metrics/20-file.mdx","sourceDirName":"learn/core-concepts/metrics","slug":"/learn/core-concepts/metrics/file","permalink":"/docs/learn/core-concepts/metrics/file","draft":false,"unlisted":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/core-concepts/metrics/20-file.mdx","tags":[],"version":"current","lastUpdatedAt":1754504182000,"sidebarPosition":20,"frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Available Metrics","permalink":"/docs/learn/core-concepts/metrics/available-metrics"},"next":{"title":"On Demand","permalink":"/docs/learn/core-concepts/metrics/inspect"}}');var t=r(74848),s=r(28453);const l={},c="File Reporter",o={},a=[{value:"Ziti Configuration",id:"ziti-configuration",level:2},{value:"Metrics Reporting",id:"metrics-reporting",level:3},{value:"Metrics Writing",id:"metrics-writing",level:3},{value:"Metrics Subscription",id:"metrics-subscription",level:4},{value:"Example:",id:"example",level:5},{value:"Metrics Handling",id:"metrics-handling",level:4},{value:"File Rolling",id:"file-rolling",level:5},{value:"Example",id:"example-1",level:4},{value:"Putting it all together",id:"putting-it-all-together",level:3},{value:"Metric Examples",id:"metric-examples",level:2},{value:"intValue",id:"intvalue",level:3},{value:"Histogram",id:"histogram",level:3},{value:"Timer",id:"timer",level:3}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",h5:"h5",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"file-reporter",children:"File Reporter"})}),"\n",(0,t.jsx)(n.p,{children:"The controller event system can write metrics to a file for direct viewing or post-processing into a metrics system of your choice."}),"\n",(0,t.jsx)(n.h2,{id:"ziti-configuration",children:"Ziti Configuration"}),"\n",(0,t.jsx)(n.p,{children:"There are two independent configurations that need to be set up for metric event reporting to work:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Report Interval:"})," The controller and routers need to have a metric reporting interval set.  The interval determines how often metrics will be sent to the controller and possibly written out to file"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Event Subscription:"})," The subscription is configured in the controller, and determines which of the reported metrics are written."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"metrics-reporting",children:"Metrics Reporting"}),"\n",(0,t.jsxs)(n.p,{children:["The reporting interval is defined in the ",(0,t.jsx)(n.code,{children:"metrics.reportInterval"})," property. While the controller and each router can have a different reporting interval, we suggest that you set them all the same to make lining up metrics across the cluster easier."]}),"\n",(0,t.jsx)(n.p,{children:"Example:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"metrics:\n  reportInterval: 20s\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Routers support an additional configuration parameter ",(0,t.jsx)(n.code,{children:"MessageQueueSize"})," which is the number of unsent metrics messages that can sit in the router metrics queue before metrics gathering is paused."]}),"\n",(0,t.jsx)(n.p,{children:"Example:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"metrics:\n  reportInterval: 20s\n  messageQueueSize: 20  // Default 10\n"})}),"\n",(0,t.jsx)(n.h3,{id:"metrics-writing",children:"Metrics Writing"}),"\n",(0,t.jsx)(n.p,{children:"Writing of metrics is broken into two pieces:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"subscription:"})," Which metrics will be written"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"hander:"})," how the metrics will be written"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"metrics-subscription",children:"Metrics Subscription"}),"\n",(0,t.jsx)(n.p,{children:"The metrics subscription defines which metrics will be written and how they will be written."}),"\n",(0,t.jsx)(n.p,{children:"There are two parts to a metrics event reporter\nThe subscription has three components"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"sourceFilter:"})," Which components to write metrics for. This is a regular expression.","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"ctrl_client:"})," Special marker for the controller"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Router ID:"})," Get metrics for one and only one router"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:".*:"})," Get metrics from the controller and all routers"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"metricFilter:"})," Which metrics to report.  This is a regular expression","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:".*pool.*:"})," Report only pool metrics"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:".*:"})," Report all metrics"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h5,{id:"example",children:"Example:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"events:\n  allControllerMetrics:\n    subscriptions:\n      - type: metrics\n        sourceFilter: ctrl_client\n        metricFilter: .*\n  justEdgeRouterPoolMetrics:\n    subscriptions:\n      - type: metrics\n        sourceFilter: .*\n        metricFilter: .*pool.*\n"})}),"\n",(0,t.jsx)(n.h4,{id:"metrics-handling",children:"Metrics Handling"}),"\n",(0,t.jsx)(n.p,{children:"The metrics handler defined how metrics are to be written.  It is comprised of:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"type:"})," The type of handler.  Supported types are:"]}),"\n"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"file:"})," Metrics will be written to a file"]}),"\n"]}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"maxsizemb:"})," File rolling - log files will be rolled when they reach this size.  Default size is ",(0,t.jsx)(n.code,{children:"10mb"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"maxbackups"})," File rolling - the number of files to keep. Default is ",(0,t.jsx)(n.code,{children:"0 (unlimited)"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"format:"})," The format of the metric.  Supported formats are: ",(0,t.jsx)(n.code,{children:"json"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"path:"})," The name of the file to write metrics to"]}),"\n"]}),"\n",(0,t.jsx)(n.h5,{id:"file-rolling",children:"File Rolling"}),"\n",(0,t.jsxs)(n.p,{children:["files are rolled when they reach a size of ",(0,t.jsx)(n.code,{children:"maxsizemb"}),". Files are renamed from ",(0,t.jsx)(n.code,{children:"name.log"})," to ",(0,t.jsx)(n.code,{children:"name-iso8601.log"})]}),"\n",(0,t.jsxs)(n.p,{children:["For example, ",(0,t.jsx)(n.code,{children:"name-2022-06-07T18-50-44.568.log"})]}),"\n",(0,t.jsx)(n.h4,{id:"example-1",children:"Example"}),"\n",(0,t.jsx)(n.p,{children:"Write 100mb files, saving 2 of them."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"    handler:\n      type: file\n      format: json\n      maxsizemb: 100\n      maxbackups: 2\n      path: /tmp/controller-metrics.log\n"})}),"\n",(0,t.jsx)(n.h3,{id:"putting-it-all-together",children:"Putting it all together"}),"\n",(0,t.jsx)(n.p,{children:"Controller configuration file:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"metrics:\n  reportInterval: 20s\n\nevents:\n  allControllerMetrics:\n    subscriptions:\n      - type: metrics\n        sourceFilter: ctrl_client\n        metricFilter: .*\n    handler:\n      type: file\n      format: json\n      maxsizemb: 50\n      maxbackups: 2\n      path: /tmp/controller-metrics.log\n\n  justPoolMetrics:\n    subscriptions:\n      - type: metrics\n        sourceFilter: .*\n        metricFilter: .*pool.*\n    handler:\n      type: file\n      format: json\n      maxsizemb: 100\n      maxbackups: 5\n      path: /tmp/router-pool-metrics.log\n"})}),"\n",(0,t.jsx)(n.p,{children:"Router configuration files:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"metrics:\n  reportInterval: 20s\n"})}),"\n",(0,t.jsx)(n.h2,{id:"metric-examples",children:"Metric Examples"}),"\n",(0,t.jsx)(n.h3,{id:"intvalue",children:"intValue"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:'{\n  "metric_type": "intValue",\n  "namespace": "metrics",\n  "source_id": "ctrl_client",\n  "version": 2,\n  "timestamp": {\n    "seconds": 1654625684,\n    "nanos": 479708609\n  },\n  "metric": "pool.listener.mgmt.worker_count",\n  "metrics": {\n    "value": 1\n  },\n  "source_event_id": "acb85925-0e17-4ca0-90cb-9a2498b33bc8"\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"histogram",children:"Histogram"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:'{\n  "metric_type": "histogram",\n  "namespace": "metrics",\n  "source_id": "ctrl_client",\n  "source_entity_id": "xpw7BEDAk",\n  "version": 2,\n  "timestamp": {\n    "seconds": 1654625684,\n    "nanos": 479708609\n  },\n  "metric": "ctrl.queue_time",\n  "metrics": {\n    "count": 57,\n    "max": 21647,\n    "mean": 15266.508771929824,\n    "min": 5753,\n    "p50": 15670,\n    "p75": 16558.5,\n    "p95": 18362.699999999997,\n    "p99": 21647,\n    "p999": 21647,\n    "p9999": 21647,\n    "std_dev": 2604.8795245927113,\n    "variance": 6785397.337642349\n  },\n  "source_event_id": "acb85925-0e17-4ca0-90cb-9a2498b33bc8"\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"timer",children:"Timer"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:'{\n  "metric_type": "timer",\n  "namespace": "metrics",\n  "source_id": "ctrl_client",\n  "version": 2,\n  "timestamp": {\n    "seconds": 1654625684,\n    "nanos": 479708609\n  },\n  "metric": "api.session.enforcer.run",\n  "metrics": {\n    "count": 11,\n    "m15_rate": 0.2,\n    "m1_rate": 0.2,\n    "m5_rate": 0.2,\n    "max": 6842849,\n    "mean": 1096126.3636363635,\n    "mean_rate": 0.20374652060865114,\n    "min": 254514,\n    "p50": 335348,\n    "p75": 1212318,\n    "p95": 6842849,\n    "p99": 6842849,\n    "p999": 6842849,\n    "p9999": 6842849,\n    "std_dev": 1858257.4031879376,\n    "variance": 3453120576502.777\n  },\n  "source_event_id": "acb85925-0e17-4ca0-90cb-9a2498b33bc8"\n}\n'})})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},28453:(e,n,r)=>{r.d(n,{R:()=>l,x:()=>c});var i=r(96540);const t={},s=i.createContext(t);function l(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);