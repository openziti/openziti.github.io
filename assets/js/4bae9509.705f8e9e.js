"use strict";(self.webpackChunkdocusaurus_3=self.webpackChunkdocusaurus_3||[]).push([[484],{52038:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>d,contentTitle:()=>a,default:()=>c,frontMatter:()=>o,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"reference/tunnelers/windows/index","title":"Windows","description":"The Ziti Desk for Windows (ZDEW) is the tunneler targeting the Windows operating system. The project is fully","source":"@site/docs/reference/tunnelers/02-windows/index.md","sourceDirName":"reference/tunnelers/02-windows","slug":"/reference/tunnelers/windows/","permalink":"/docs/reference/tunnelers/windows/","draft":false,"unlisted":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/reference/tunnelers/02-windows/index.md","tags":[],"version":"current","lastUpdatedAt":1748532284000,"frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Tunnelers","permalink":"/docs/reference/tunnelers/"},"next":{"title":"Adding Identities","permalink":"/docs/reference/tunnelers/windows/add-ids/"}}');var r=n(74848),s=n(28453);const o={},a="Windows",d={},l=[{value:"Installation",id:"installation",level:2},{value:"Adding Identities",id:"adding-identities",level:2},{value:"Architecture",id:"architecture",level:2},{value:"The Data Service",id:"the-data-service",level:3},{value:"DNS",id:"dns",level:4},{value:"The Monitor Service",id:"the-monitor-service",level:3},{value:"Automatic Upgrades",id:"automatic-upgrades",level:4},{value:"Diagnostic Information",id:"diagnostic-information",level:4},{value:"The UI",id:"the-ui",level:3},{value:"Logging",id:"logging",level:2},{value:"Configuration and Identity Files",id:"configuration-and-identity-files",level:2},{value:"Multiple Users",id:"multiple-users",level:2}];function h(e){const i={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(i.header,{children:(0,r.jsx)(i.h1,{id:"windows",children:"Windows"})}),"\n",(0,r.jsxs)(i.p,{children:["The Ziti Desk for Windows (ZDEW) is the tunneler targeting the Windows operating system. The project is fully\r\nopen source and can be found on GitHub at ",(0,r.jsx)(i.a,{href:"https://github.com/openziti/desktop-edge-win",children:"https://github.com/openziti/desktop-edge-win"})]}),"\n",(0,r.jsx)(i.h2,{id:"installation",children:"Installation"}),"\n",(0,r.jsxs)(i.p,{children:["The ZDEW has an installer available for download from GitHub.\r\n",(0,r.jsx)(i.a,{href:"https://github.com/openziti/desktop-edge-win/releases/latest",children:"Download the latest release here"}),"."]}),"\n",(0,r.jsxs)(i.p,{children:["The executable is signed by a third-party using GitHub actions. ",(0,r.jsx)(i.a,{href:"https://netfoundry.io",children:"NetFoundry"})," is\r\nthe primary supporter of the project and purchases an extended validation (EV) certificate for the\r\nexecutable. This EV certificate, should prevent the ",(0,r.jsx)(i.a,{href:"https://learn.microsoft.com/en-us/defender-endpoint/",children:"Microsoft Defender"}),"\r\nsoftware from identifying the executable as malicious."]}),"\n",(0,r.jsx)(i.p,{children:"Download the executable from GitHub and verify the SHA256 hash of the file to ensure it has not been\r\ntampered with from when it was released. Once installed, enroll your first identity."}),"\n",(0,r.jsx)(i.h2,{id:"adding-identities",children:"Adding Identities"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.a,{href:"./add-ids/ott",children:"One-Time Token"})," - Add an identity with a single use token. The most common option"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.a,{href:"./add-ids/third-party-ca",children:"Third-Party CA"})," - Add an identity using a third-party CA"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.a,{href:"./add-ids/ext-providers/ext-jwt",children:"External JWT Provider - JWT"})," - Add an identity using the configured provider and network JWT"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.a,{href:"./add-ids/ext-providers/ext-jwt-url",children:"External JWT Provider - URL"})," - Add an identity using the configured provider and URL"]}),"\n"]}),"\n",(0,r.jsx)(i.h2,{id:"architecture",children:"Architecture"}),"\n",(0,r.jsx)(i.p,{children:"The ZDEW is composed of three main components: the data service, the monitor service, the UI. Communication among\r\nthese processes is handled through IPC and requires the process to have been started by an interactive login. The IPC\r\nchannels are not meant for direct use and using them outside of the overall tunneler is discouraged."}),"\n",(0,r.jsx)(i.h3,{id:"the-data-service",children:"The Data Service"}),"\n",(0,r.jsxs)(i.p,{children:["The data service is the main workhorse of the ZDEW. It is an instance of ",(0,r.jsx)(i.code,{children:"ziti-edge-tunnel"})," built for Windows. The code\r\nis delivered from the ",(0,r.jsx)(i.a,{href:"https://github.com/openziti/ziti-tunnel-sdk-c/",children:"ziti-tunneler-sdk-c"})," repository. It integrates the\r\n",(0,r.jsx)(i.a,{href:"https://github.com/openziti/ziti-sdk-c/",children:"Ziti C SDK"}),' as well and is responsible for creating the "TUN"\r\n(virtual network interface) as well as for configuring any routes necessary for IP-based intercepts.']}),"\n",(0,r.jsx)(i.h4,{id:"dns",children:"DNS"}),"\n",(0,r.jsx)(i.p,{children:"The data service also has a DNS server listening at $TUN_IP + 1. For example, if the data service is configured to use\r\nthe default IP 100.64.0.1, there will be a DNS server listening on 100.64.0.2."}),"\n",(0,r.jsx)(i.h3,{id:"the-monitor-service",children:"The Monitor Service"}),"\n",(0,r.jsx)(i.p,{children:"This component is delivered as a Windows service and is set to automatic, delayed startup. It has two main functions:\r\nautomatic upgrades and diagnostic information."}),"\n",(0,r.jsx)(i.h4,{id:"automatic-upgrades",children:"Automatic Upgrades"}),"\n",(0,r.jsx)(i.p,{children:"This service will monitor the GitHub releases for new updates. It does this every ten minutes by default but could be\r\nconfigured if the user wants to change this to be longer. Shorter is not recommended."}),"\n",(0,r.jsx)(i.h4,{id:"diagnostic-information",children:"Diagnostic Information"}),"\n",(0,r.jsxs)(i.p,{children:["When the ZDEW runs into problems. The UI has a 'feedback' option in the main menu to generate diagnostic information,\r\ncollect logs etc. This service performs that work resulting in a zip file saved into the ",(0,r.jsx)(i.code,{children:"logs"})," folder."]}),"\n",(0,r.jsx)(i.h3,{id:"the-ui",children:"The UI"}),"\n",(0,r.jsx)(i.p,{children:"The UI is currently a .NET UWP application. It is not necessary for this program to run for the ZDEW to function. It\r\nis exclusively for users to interact with the data and monitor services."}),"\n",(0,r.jsx)(i.h2,{id:"logging",children:"Logging"}),"\n",(0,r.jsxs)(i.p,{children:["Logs for ZDEW are saved relative to the location of the installation. Normally, this path will end up being:\r\n",(0,r.jsx)(i.code,{children:"C:\\Program Files (x86)\\NetFoundry Inc\\Ziti Desktop Edge"}),". In that directory should be a logs directory."]}),"\n",(0,r.jsx)(i.p,{children:"The logs directory has three subdirectories for each of the main components:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:"service - the logs for the data service"}),"\n",(0,r.jsx)(i.li,{children:"ZitiMonitorService - the logs for the monitor service"}),"\n",(0,r.jsx)(i.li,{children:"UI - the logs from the UI"}),"\n"]}),"\n",(0,r.jsx)(i.h2,{id:"configuration-and-identity-files",children:"Configuration and Identity Files"}),"\n",(0,r.jsxs)(i.p,{children:["The ZDEW runs as a service on the machine it is installed on. It will save enrolled identities in a file in\r\nthe SYSTEM profile's ",(0,r.jsx)(i.code,{children:"APPDIR"}),". Generally, this will be located at ",(0,r.jsx)(i.code,{children:"%WINDIR%\\System32\\config\\systemprofile\\AppData\\Roaming\\NetFoundry"}),"."]}),"\n",(0,r.jsxs)(i.p,{children:["This location will also contain a file that captures the state of the ZitiUpdateService in a file named ",(0,r.jsx)(i.code,{children:"ZitiUpdateService\\settings.json"}),"\r\nin that location."]}),"\n",(0,r.jsx)(i.h2,{id:"multiple-users",children:"Multiple Users"}),"\n",(0,r.jsxs)(i.p,{children:["The ZDEW runs as a service on the machine it is installed on. This means it is a ",(0,r.jsx)(i.strong,{children:"SYSTEM WIDE"})," installation. The identities\r\nadded to the service will be available to any users that can authenticate to the machine. Tunnelers intercept all underlay\r\ntraffic from local machine, and translate that traffic to an OpenZiti service if they are configured to do so. To do this,\r\nthe ZDEW project uses the excellent ",(0,r.jsx)(i.a,{href:"https://www.wintun.net",children:"WinTun"}),' project. This TUN is a network adapter. There is no\r\nway to configure the ZDEW for "per-user" use at this time.']})]})}function c(e={}){const{wrapper:i}={...(0,s.R)(),...e.components};return i?(0,r.jsx)(i,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},28453:(e,i,n)=>{n.d(i,{R:()=>o,x:()=>a});var t=n(96540);const r={},s=t.createContext(r);function o(e){const i=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function a(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),t.createElement(s.Provider,{value:i},e.children)}}}]);