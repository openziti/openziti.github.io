"use strict";(self.webpackChunkdocusaurus_3=self.webpackChunkdocusaurus_3||[]).push([[4028],{56569:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>l,default:()=>h,frontMatter:()=>c,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"learn/core-concepts/security/authentication/totp","title":"MFA TOTP","description":"Ziti authentication allows for n-factors of authentication - meaning that it is possible to support 1FA, 2FA, ...nFA","source":"@site/docs/learn/core-concepts/security/authentication/70-totp.md","sourceDirName":"learn/core-concepts/security/authentication","slug":"/learn/core-concepts/security/authentication/totp","permalink":"/docs/learn/core-concepts/security/authentication/totp","draft":false,"unlisted":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/core-concepts/security/authentication/70-totp.md","tags":[],"version":"current","lastUpdatedAt":1744685538000,"sidebarPosition":70,"frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Identities","permalink":"/docs/learn/core-concepts/security/authentication/identities"},"next":{"title":"Authorization","permalink":"/docs/learn/core-concepts/security/authorization/auth"}}');var r=t(74848),o=t(28453);const c={},l="MFA TOTP",s={},a=[{value:"Enforcement",id:"enforcement",level:2},{value:"Authentication Policies",id:"authentication-policies",level:3},{value:"MFA Posture Check",id:"mfa-posture-check",level:3},{value:"Enrollment",id:"enrollment",level:2},{value:"Enrollment Status",id:"enrollment-status",level:3},{value:"Request:",id:"request",level:4},{value:"Responses:",id:"responses",level:4},{value:"Restart Enrollment",id:"restart-enrollment",level:3},{value:"Start Enrollment",id:"start-enrollment",level:3},{value:"Verify &amp; Complete Enrollment",id:"verify--complete-enrollment",level:3},{value:"QR Code",id:"qr-code",level:3},{value:"Removing/Unenrolling",id:"removingunenrolling",level:3},{value:"Client Removal",id:"client-removal",level:4},{value:"Administrative Removal",id:"administrative-removal",level:4},{value:"Viewing Recovery Codes",id:"viewing-recovery-codes",level:3},{value:"Regenerating Recovery Codes",id:"regenerating-recovery-codes",level:3}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"mfa-totp",children:"MFA TOTP"})}),"\n",(0,r.jsxs)(n.p,{children:['Ziti authentication allows for n-factors of authentication - meaning that it is possible to support 1FA, 2FA, ...nFA\nauthentication. One common setup for multi-factor authentication (MFA) is time-based one time passwords (TOTP).\nTOTP is commonly see in "authenticator" application (e.g. Google Authenticator, Authy, Microsoft Authenticator, etc).\nAll "authenticator" applications support the same core ',(0,r.jsx)(n.a,{href:"https://www.rfc-editor.org/rfc/rfc6238",children:"TOTP RFC 6238"}),"\nspecification."]}),"\n",(0,r.jsx)(n.h2,{id:"enforcement",children:"Enforcement"}),"\n",(0,r.jsxs)(n.p,{children:["Ziti allows individual clients to enroll or un-enroll from MFA TOTP. Administrators can enforce TOTP enrollment through\n",(0,r.jsx)(n.a,{href:"/docs/learn/core-concepts/security/authentication/authentication-policies",children:"Authentication Policies"})," and ",(0,r.jsx)(n.a,{href:"/docs/learn/core-concepts/security/authorization/posture-checks#mfa",children:"Posture Checks"}),"."]}),"\n",(0,r.jsx)(n.h3,{id:"authentication-policies",children:"Authentication Policies"}),"\n",(0,r.jsxs)(n.p,{children:["When enforced at authentication via ",(0,r.jsx)(n.a,{href:"/docs/learn/core-concepts/security/authentication/authentication-policies",children:"Authentication Policies"}),", clients are unable to\ntransition from ",(0,r.jsx)(n.a,{href:"/docs/learn/core-concepts/security/sessions#full-vs-partial-authentication",children:"partially authenticated to fully authenticated"}),"\nwithout enrolling in MFA TOTP - leaving them unable to list services or connect to them."]}),"\n",(0,r.jsx)(n.h3,{id:"mfa-posture-check",children:"MFA Posture Check"}),"\n",(0,r.jsxs)(n.p,{children:["When enforced through the ",(0,r.jsx)(n.a,{href:"/docs/learn/core-concepts/security/authorization/posture-checks#mfa",children:"MFA Posture Check"}),", clients still must become fully\nauthenticated according to their authentication policy, however, access to services is determined by their policy and\nposture check access. If a service is granted only through a service policy that has an MFA posture check, they will\nnot be able to connect to that service without enrolling in MFA TOTP."]}),"\n",(0,r.jsx)(n.h2,{id:"enrollment",children:"Enrollment"}),"\n",(0,r.jsx)(n.p,{children:"High level flow:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["A client initiates enrollment via ",(0,r.jsx)(n.code,{children:"POST /edge/client/v1/current-identity/mfa"})]}),"\n",(0,r.jsx)(n.li,{children:"The controller returns recovery codes and a TOTP secret"}),"\n",(0,r.jsx)(n.li,{children:"A client uses the TOTP secret to generate a TOTP code"}),"\n",(0,r.jsxs)(n.li,{children:["A client submits the TOTP code via ",(0,r.jsx)(n.code,{children:"POST /edge/client/v1/current-identity/mfa/verify"})]}),"\n",(0,r.jsx)(n.li,{children:"The controller saves the MFA TOTP configuration, subsequent authentication attempts will require an MFA TOTP code"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"enrollment-status",children:"Enrollment Status"}),"\n",(0,r.jsx)(n.p,{children:"Enrollment status can be checked by the client themselves through the following requests:"}),"\n",(0,r.jsx)(n.h4,{id:"request",children:"Request:"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"GET /edge/client/v1/current-identity/mfa"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"<empty body>\n"})}),"\n",(0,r.jsx)(n.h4,{id:"responses",children:"Responses:"}),"\n",(0,r.jsxs)(n.p,{children:["If enrolled:\n",(0,r.jsx)(n.code,{children:"HTTP 200 ok"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-text",children:'{\n  "isVerified": true\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:["If enrollment started:\n",(0,r.jsx)(n.code,{children:"HTTP 200 ok"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-text",children:'{\n  "isVerified": true,\n  "recoveryCodes": ["code1", "..."],\n  "provisioningUrl": "otpauth://totp/<identity-name>?issuer=ziti.dev&secret=<secret>"\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:["If enrollment has not been started:\n",(0,r.jsx)(n.code,{children:"HTTP 404 Not Found"})]}),"\n",(0,r.jsx)(n.p,{children:"Fields:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"isVerified"})," - true/false status for enrollment. If ",(0,r.jsx)(n.code,{children:"true"})," only this value is returned. If ",(0,r.jsx)(n.code,{children:"false"})," the current enrollment information is provided"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"recoveryCodes"})," - an array of one-time use recovery codes that may be used in place of a TOTP code during authentication, only shown while enrollment has not been completed"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"provisioningUrl"})," - an ",(0,r.jsx)(n.code,{children:"otpauth"})," url used by authenticator applications, normally shown as a QR code"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"restart-enrollment",children:"Restart Enrollment"}),"\n",(0,r.jsxs)(n.p,{children:["If enrollment has been started but not completed a ",(0,r.jsx)(n.code,{children:"DELETE /edge/client/v1/current-identity/mfa"})," should be used to\nabandon the unfinished enrollment and a new enrollment started."]}),"\n",(0,r.jsx)(n.h3,{id:"start-enrollment",children:"Start Enrollment"}),"\n",(0,r.jsxs)(n.p,{children:["Enrollment may be started by performing a ",(0,r.jsx)(n.code,{children:"POST /edge/client/v1/current-identity/mfa"})," with ",(0,r.jsx)(n.code,{children:"{}"})," as the body."]}),"\n",(0,r.jsx)(n.h3,{id:"verify--complete-enrollment",children:"Verify & Complete Enrollment"}),"\n",(0,r.jsx)(n.p,{children:"Enrolment is completed by verifying the secret has been received by providing a currently valid TOTP code. A recovery\ncodes are not treated as a valid value."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"POST /edge/client/v1/current-identity/mfa/verify"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-text",children:'{\n  "code": "<totp-code>"\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"qr-code",children:"QR Code"}),"\n",(0,r.jsxs)(n.p,{children:["To aid in enrollment, the current enrollment's ",(0,r.jsx)(n.code,{children:"provisioningUrl"})," may be retrieved as a QR code. As long as an outstanding\nMFA TOTP enrollment is active an image is available at: ",(0,r.jsx)(n.code,{children:"GET /edge/client/v1/current-identity/mfa/qr-code"})]}),"\n",(0,r.jsx)(n.h3,{id:"removingunenrolling",children:"Removing/Unenrolling"}),"\n",(0,r.jsx)(n.p,{children:"MFA TOTP can be removed by an administrator at any time on behalf of a client. Clients may remove MFA TOTP enrollment\nfrom their account as long as they have access to a recovery code or TOPT code."}),"\n",(0,r.jsx)(n.h4,{id:"client-removal",children:"Client Removal"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"DELETE /edge/client/v1/current-identity/mfa"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-text",children:'{\n  "code": "<totp-or-recovery-code>"\n}\n'})}),"\n",(0,r.jsx)(n.h4,{id:"administrative-removal",children:"Administrative Removal"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"DELETE /edge/management/v1/identities/<id>/mfa"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"<empty body>>\n"})}),"\n",(0,r.jsx)(n.h3,{id:"viewing-recovery-codes",children:"Viewing Recovery Codes"}),"\n",(0,r.jsx)(n.p,{children:"At any time the current valid list of recovery codes may be viewed by the client by issuing the following request:"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"GET /edge/client/v1/current-identity/mfa/recovery-codes"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-text",children:'{\n  "code": "<totp-or-recovery-code>"\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"regenerating-recovery-codes",children:"Regenerating Recovery Codes"}),"\n",(0,r.jsx)(n.p,{children:"At any time the current valid list of recovery codes may be replaced by the client by issuing the following request:"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"POST /edge/client/v1/current-identity/mfa/recovery-codes"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-text",children:'{\n  "code": "<totp-or-recovery-code>"\n}\n'})})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>l});var i=t(96540);const r={},o=i.createContext(r);function c(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);