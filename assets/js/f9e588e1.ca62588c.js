"use strict";(self.webpackChunkdocusaurus_3=self.webpackChunkdocusaurus_3||[]).push([[9328],{39525:(e,n,t)=>{t.d(n,{Ay:()=>s,RM:()=>o});var i=t(74848),r=t(28453);const o=[{value:"For Tunnelers",id:"for-tunnelers",level:4},{value:"For BrowZer",id:"for-browzer",level:4},{value:"For Ziti Admin Console (ZAC)",id:"for-ziti-admin-console-zac",level:4}];function d(e){const n={a:"a",code:"code",h4:"h4",p:"p",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.a,{href:"https://oauth.net/2/pkce/",children:"Authorization Code Flow with PKCE or PKCE flow"})," requires configuring callback URLs the\r\nIdentity Provider (IdP) will allow redirecting to. If the URL for a specific client is not specifically listed, the IdP\r\nwill deny the authentication request. Depending on the technology used to authenticate to the OpenZiti Network,\r\ndifferent URLs need to be specified. More than one URL is allowed to be configured. Decide if you are configuring the\r\nIdP for use with tunnelers, with BrowZer or with both and add the appropriate callback urls."]}),"\n",(0,i.jsx)(n.p,{children:'In the Auth0 dashboard, with the application selected, choose the "Settings" tab and scroll down to the "Application\r\nURIs" section and add the URLs.'}),"\n",(0,i.jsx)(n.h4,{id:"for-tunnelers",children:"For Tunnelers"}),"\n",(0,i.jsxs)(n.p,{children:["Tunnelers require an allowed callback URL of: ",(0,i.jsx)(n.code,{children:"http://localhost:20314/auth/callback"}),"."]}),"\n",(0,i.jsx)(n.h4,{id:"for-browzer",children:"For BrowZer"}),"\n",(0,i.jsxs)(n.p,{children:["The URL to configure for BrowZer will vary depending on the BrowZer configuration. BrowZer requires a wildcard\r\ncertificate in order to be deployed and all services are delivered from this wildcard domain. You will need to add\r\nthe configured ",(0,i.jsx)(n.a,{href:"/docs/learn/quickstarts/browzer/example/#get-a-wildcard-certificate",children:"wildcard domain"})," as the\r\ncallback url."]}),"\n",(0,i.jsx)(n.h4,{id:"for-ziti-admin-console-zac",children:"For Ziti Admin Console (ZAC)"}),"\n",(0,i.jsxs)(n.p,{children:["The URL to configure an IdP for so that ZAC will be able to authenticate will depend on how you deploy your ZAC. The\r\ncurrent method recommended to deploy ZAC will deploy it on the same URL as the controller. For example:\r\n",(0,i.jsx)(n.a,{href:"https://controller.example.com/zac/callback",children:"https://controller.example.com/zac/callback"})]})]})}function s(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},71586:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>h,frontMatter:()=>d,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"guides/external-auth/identity-providers/dex","title":"dex","description":"The dex IdP can be configured to federate identity to other IdPs. Doing so","source":"@site/docs/guides/external-auth/identity-providers/dex.mdx","sourceDirName":"guides/external-auth/identity-providers","slug":"/guides/external-auth/identity-providers/dex","permalink":"/docs/guides/external-auth/identity-providers/dex","draft":false,"unlisted":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/guides/external-auth/identity-providers/dex.mdx","tags":[],"version":"current","lastUpdatedAt":1751143015000,"frontMatter":{"title":"dex","sidebar_label":"dex","hide_table_of_contents":true},"sidebar":"docsSidebar","previous":{"title":"Cognito","permalink":"/docs/guides/external-auth/identity-providers/cognito"},"next":{"title":"Duo","permalink":"/docs/guides/external-auth/identity-providers/duo"}}');var r=t(74848),o=t(28453);t(39525);const d={title:"dex",sidebar_label:"dex",hide_table_of_contents:!0},s="dex",c={},l=[{value:"Configure dex to Federate to GitHub",id:"configure-dex-to-federate-to-github",level:2}];function a(e){const n={a:"a",admonition:"admonition",code:"code",div:"div",h1:"h1",h2:"h2",header:"header",hr:"hr",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"dex",children:"dex"})}),"\n",(0,r.jsx)("img",{src:"/icons/logo-dex.svg",alt:"dex logo",height:"100px"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.a,{href:"https://dexidp.io/docs/configuration/",children:"dex IdP"})," can be configured to federate identity to other IdPs. Doing so\nwill allow you to provide a single identity back to OpenZiti. There is no dashboard need to configure OpenZiti with\ndex. All the values you need to come from the dex config file. For a more detailed guide on enabling dex with OpenZiti,\nsee below. Use these values to configure an external JWT signer with dex."]}),"\n",(0,r.jsx)(n.admonition,{title:"a note about dex",type:"note",children:(0,r.jsx)(n.p,{children:"The dex IdP exclusively is a federating IdP. You must have a client id and secret from another IdP in order to\nauthenticate."})}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Field"}),(0,r.jsx)(n.th,{children:"Where to Find the Value in the dex Configuration"}),(0,r.jsx)(n.th,{children:"Example"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Issuer"})}),(0,r.jsxs)(n.td,{children:["In the dex config.yaml file, key ",(0,r.jsx)(n.strong,{children:"issuer"})," or from the ",(0,r.jsx)(n.code,{children:"jwks_uri"})]}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"https://dex.doc.demo.openziti.org:5556",children:"https://dex.doc.demo.openziti.org:5556"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Client ID"})}),(0,r.jsx)(n.td,{children:"In the dex config.yaml file, key staticClients.id"}),(0,r.jsx)(n.td,{children:"openziti-dex-client"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Audience"})}),(0,r.jsxs)(n.td,{children:["Unless overridden, the same value as the ",(0,r.jsx)(n.strong,{children:"Client ID"})]}),(0,r.jsx)(n.td,{children:"openziti-dex-client"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"External Auth URL"})}),(0,r.jsxs)(n.td,{children:["The same value as the ",(0,r.jsx)(n.strong,{children:"Issuer"})]}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"https://dex.doc.demo.openziti.org:5556",children:"https://dex.doc.demo.openziti.org:5556"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"JWKS Endpoint"})}),(0,r.jsxs)(n.td,{children:["Use the ",(0,r.jsx)(n.code,{children:"jwks_uri"})," field from the './well-known/openid-configuration' endpoint"]}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"https://dex.doc.demo.openziti.org:5556/keys",children:"https://dex.doc.demo.openziti.org:5556/keys"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Claims Property"})}),(0,r.jsxs)(n.td,{children:["Often ",(0,r.jsx)(n.code,{children:"email"}),", but can also be ",(0,r.jsx)(n.code,{children:"sub"})," or any other claim contained in the JWT"]}),(0,r.jsx)(n.td,{children:"email"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Scopes"})}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"openid"})," is always included. Often ",(0,r.jsx)(n.code,{children:"email"})," but ",(0,r.jsx)(n.code,{children:"profile"})," or any standard or custom scope"]}),(0,r.jsx)(n.td,{children:"profile offline_access"})]})]})]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"configure-dex-to-federate-to-github",children:"Configure dex to Federate to GitHub"}),"\n",(0,r.jsxs)(n.p,{children:["Since dex is entirely configured via the dex configuration file all examples will be shown as dex config file. The\n",(0,r.jsx)(n.code,{children:"config.yaml"})," file and ",(0,r.jsx)(n.code,{children:".env"})," file are show along with a sample docker command to run dex. Notice in the docker\ncommand a volume mount containing valid certificates is mounted allowing for dex to serve TLS from a public CA. Also\nworth noting is this configuration federates through to GitHub and requires the user to be part of the ",(0,r.jsx)(n.code,{children:"openziti"})," org."]}),"\n",(0,r.jsx)(n.div,{className:"code-section",children:(0,r.jsxs)(n.div,{className:"code-section-code",children:[(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"dex config.yaml File"})}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:'issuer: https://dex.doc.demo.openziti.org:5556\n\nweb:\n  http: ""  # Disable HTTP\n  https: 0.0.0.0:5556\n  tlsCert: /certs/live/doc.demo.openziti.org/fullchain.pem\n  tlsKey: /certs/live/doc.demo.openziti.org/privkey.pem\nstorage:\n  type: sqlite3\n  config:\n    file: /var/dex/dex.db\n\nstaticClients:\n  - id: openziti-dex-client\n    redirectURIs:\n      - \'http://localhost:20314/auth/callback\'\n    name: \'OpenZiti DEX Integration\'\n    public: true\n\nconnectors:\n- type: github\n  id: github\n  name: GitHub\n  config:\n    clientID: ${GITHUB_CLIENT}\n    clientSecret: ${GITHUB_CLIENTSECRET}\n    redirectURI: https://dex.doc.demo.openziti.org:5556/callback\n\n    # List of org and team names.\n    #  - If specified, a user MUST be a member of at least ONE of these orgs\n    #    and teams (if set) to authenticate with dex.\n    #  - Dex queries the following organizations for group information if the\n    #    "groups" scope is requested. Group claims are formatted as "(org):(team)".\n    #    For example if a user is part of the "engineering" team of the "coreos" org,\n    #    the group claim would include "coreos:engineering".\n    #  - If teams are specified, dex only returns group claims for those teams.\n    orgs:\n    - name: ${GITHUB_REQUIRED_ORG}\n'})})]})}),"\n",(0,r.jsx)(n.div,{className:"code-section",children:(0,r.jsxs)(n.div,{className:"code-section-code",children:[(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Docker .env File"})}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-text",children:"GITHUB_CLIENT=_GITHUB_CLIENT_HERE_\nGITHUB_CLIENTSECRET=_GITHUB_SECRET_HERE_\nGITHUB_REQUIRED_ORG=openziti\n"})})]})}),"\n",(0,r.jsx)(n.p,{children:"Verify the proper volume mount exists and the dex container has access."}),"\n",(0,r.jsx)(n.div,{className:"code-section",children:(0,r.jsxs)(n.div,{className:"code-section-code",children:[(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example Docker Command"})}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-text",children:"docker run --rm \\\n  --name dex \\\n  -v certs:/certs \\\n  --env-file .env \\\n  -v ./config.yaml:/dex-config.yaml \\\n  -p 5556:5556 \\\n  ghcr.io/dexidp/dex:latest dex serve /dex-config.yaml\n"})})]})})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>d,x:()=>s});var i=t(96540);const r={},o=i.createContext(r);function d(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);