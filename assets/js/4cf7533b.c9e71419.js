"use strict";(self.webpackChunkdocusaurus_3=self.webpackChunkdocusaurus_3||[]).push([[6910],{10929:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>u,frontMatter:()=>s,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"reference/tunnelers/windows/add-ids/index","title":"Adding Identities","description":"Adding an identity is often referred to as enrolling an identity. This is the act of bootstrapping trust between","source":"@site/docs/reference/tunnelers/02-windows/add-ids/index.md","sourceDirName":"reference/tunnelers/02-windows/add-ids","slug":"/reference/tunnelers/windows/add-ids/","permalink":"/docs/reference/tunnelers/windows/add-ids/","draft":false,"unlisted":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/reference/tunnelers/02-windows/add-ids/index.md","tags":[],"version":"current","lastUpdatedAt":1744208051000,"frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Windows","permalink":"/docs/reference/tunnelers/windows/"},"next":{"title":"One Time Tokens","permalink":"/docs/reference/tunnelers/windows/add-ids/ott"}}');var i=t(74848),d=t(28453);const s={},o="Adding Identities",a={},l=[{value:"Types of Enrollment Supported",id:"types-of-enrollment-supported",level:2}];function c(e){const n={a:"a",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",ul:"ul",...(0,d.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"adding-identities",children:"Adding Identities"})}),"\n",(0,i.jsx)(n.p,{children:"Adding an identity is often referred to as enrolling an identity. This is the act of bootstrapping trust between\r\nthe computer adding an identity and the OpenZiti Controller."}),"\n",(0,i.jsx)(n.p,{children:"There are numerous mechanisms to bootstrap this trust and enroll an identity to a tunneler. The most common\r\nis probably via a JWT using a one-time token. There are however, other enrollment types. Currently, each type of\r\nenrollment comes in the form of a JWT with one notable exception - the URL."}),"\n",(0,i.jsx)(n.h2,{id:"types-of-enrollment-supported",children:"Types of Enrollment Supported"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"./ott",children:"One-Time Token"})," - Add an identity with a single use token. The most common option"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"./third-party-ca",children:"Third-Party CA"})," - Add an identity using a third-party CA"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"./ext-providers/ext-jwt",children:"External JWT Provider - JWT"})," - Add an identity using the configured provider and network JWT"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"./ext-providers/ext-jwt-url",children:"External JWT Provider - URL"})," - Add an identity using the configured provider and URL"]}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,d.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>o});var r=t(96540);const i={},d=r.createContext(i);function s(e){const n=r.useContext(d);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),r.createElement(d.Provider,{value:n},e.children)}}}]);