"use strict";(self.webpackChunkdocusaurus_3=self.webpackChunkdocusaurus_3||[]).push([[7728],{73607:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>m,frontMatter:()=>d,metadata:()=>i,toc:()=>u});const i=JSON.parse('{"id":"reference/tunnelers/docker/readme","title":"Containers","description":"","source":"@site/docs/reference/tunnelers/70-docker/readme.mdx","sourceDirName":"reference/tunnelers/70-docker","slug":"/reference/tunnelers/docker/","permalink":"/docs/reference/tunnelers/docker/","draft":false,"unlisted":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/reference/tunnelers/70-docker/readme.mdx","tags":[],"version":"current","lastUpdatedAt":1744208051000,"frontMatter":{"title":"Containers","hide_table_of_contents":false},"sidebar":"docsSidebar","previous":{"title":"Troubleshooting","permalink":"/docs/reference/tunnelers/linux/linux-tunnel-troubleshooting"},"next":{"title":"Kubernetes","permalink":"/docs/reference/tunnelers/kubernetes/"}}');var o=t(74848),r=t(28453);function s(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"run-the-openziti-tunneler-with-docker",children:"Run The OpenZiti Tunneler with Docker"})}),"\n",(0,o.jsx)(n.h2,{id:"host-services-with-docker",children:"Host Services with Docker"}),"\n",(0,o.jsx)(n.p,{children:'The most popular way of using the Linux tunneler in Docker is to "host" an OpenZiti service, meaning as a reverse proxy and exit point from the OpenZiti network toward some target server. You can deploy the container before or after you grant it permission to start hosting the service and it will autonomously obey the OpenZiti controller.'}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"openziti/ziti-host"})," image simply runs ",(0,o.jsx)(n.code,{children:"ziti-edge-tunnel run-host"})," with the following helpful conventions for supplying an enrollment token and persisting the identity."]}),"\n",(0,o.jsx)(n.h3,{id:"enroll-and-persist-identity-in-a-volume",children:"Enroll and Persist Identity in a Volume"}),"\n",(0,o.jsxs)(n.p,{children:["Set the enrollment token and run the container. This example saves the identity file in the persistent volume: ",(0,o.jsx)(n.code,{children:"/ziti-edge-tunnel/ziti_id.json"}),"."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"services:\n    ziti-host:\n        image: docker.io/openziti/ziti-host\n        volumes:\n            - ziti-host:/ziti-edge-tunnel\n        environment:\n            - ZITI_ENROLL_TOKEN\nvolumes:\n    ziti-host:\n"})}),"\n",(0,o.jsx)(n.h3,{id:"use-an-enrolled-identity-from-the-environment",children:"Use an Enrolled Identity from the Environment"}),"\n",(0,o.jsx)(n.p,{children:"You may source an existing identity from the environment."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"services:\n    ziti-host:\n        image: docker.io/openziti/ziti-host\n        environment:\n            - ZITI_IDENTITY_JSON\n"})}),"\n",(0,o.jsx)(n.h3,{id:"mount-an-enrolled-identity-file",children:"Mount an Enrolled Identity File"}),"\n",(0,o.jsxs)(n.p,{children:["You may mount an existing identity from the host's filesystem. The default path to find the identity during startup is ",(0,o.jsx)(n.code,{children:"/ziti-edge-tunnel/ziti_id.json"}),". Optionally, set ",(0,o.jsx)(n.code,{children:"ZITI_IDENTITY_BASENAME"})," to change the filename prefix from ",(0,o.jsx)(n.code,{children:"ziti_id"}),"."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"services:\n    ziti-host:\n        image: docker.io/openziti/ziti-host\n        volumes:\n            - ./ziti_id.json:/ziti-edge-tunnel/ziti_id.json\n"})}),"\n",(0,o.jsx)(n.h3,{id:"mount-a-directory-of-enrolled-identity-files",children:"Mount a Directory of Enrolled Identity Files"}),"\n",(0,o.jsxs)(n.p,{children:["You may mount many existing identities from the host's filesystem. The tunneler will load all valid, readable identities at each startup. The tunneler will look for files matching ",(0,o.jsx)(n.code,{children:"/ziti-edge-tunnel/*.json"}),"."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"services:\n    ziti-host:\n        image: docker.io/openziti/ziti-host\n        volumes:\n            - ./identities:/ziti-edge-tunnel\n"})})]})}function l(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(s,{...e})}):s(e)}const d={title:"Containers",hide_table_of_contents:!1},c=void 0,a={},u=[{value:"Host Services with Docker",id:"host-services-with-docker",level:2},{value:"Enroll and Persist Identity in a Volume",id:"enroll-and-persist-identity-in-a-volume",level:3},{value:"Use an Enrolled Identity from the Environment",id:"use-an-enrolled-identity-from-the-environment",level:3},{value:"Mount an Enrolled Identity File",id:"mount-an-enrolled-identity-file",level:3},{value:"Mount a Directory of Enrolled Identity Files",id:"mount-a-directory-of-enrolled-identity-files",level:3}];function h(e){return(0,o.jsx)(l,{})}function m(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(h,{...e})}):h()}},28453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>l});var i=t(96540);const o={},r=i.createContext(o);function s(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);