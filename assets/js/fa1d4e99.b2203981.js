"use strict";(self.webpackChunkdocusaurus_3=self.webpackChunkdocusaurus_3||[]).push([[7328],{60102:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>a,frontMatter:()=>o,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"reference/config-types/index","title":"Builtin Config Types","description":"Overview","source":"@site/docs/reference/config-types/index.md","sourceDirName":"reference/config-types","slug":"/reference/config-types/","permalink":"/docs/reference/config-types/","draft":false,"unlisted":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/reference/config-types/index.md","tags":[],"version":"current","lastUpdatedAt":1746012984000,"sidebarPosition":20,"frontMatter":{"title":"Builtin Config Types","sidebar_position":20},"sidebar":"docsSidebar","previous":{"title":"Logging","permalink":"/docs/reference/logging"},"next":{"title":"host.v1","permalink":"/docs/reference/config-types/host.v1"}}');var r=t(74848),s=t(28453);const o={title:"Builtin Config Types",sidebar_position:20},c=void 0,d={},l=[{value:"Overview",id:"overview",level:2}];function u(e){const n={a:"a",code:"code",h2:"h2",li:"li",p:"p",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,r.jsx)(n.p,{children:"OpenZiti comes with some builtin configuration types. These are used to describe how to intercept or\nhost services."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"intercept.v1"})," - used for configuring tunneler intercepts"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/docs/reference/config-types/host.v2",children:(0,r.jsx)(n.code,{children:"host.v2"})})," - used for configuring a tunneler or edge router/tunneler service\nhosting"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"host.v1"})," - used for configuring a tunneler or edge router/tunneler service hosting, similar to\n",(0,r.jsx)(n.code,{children:"host.v2"}),", but only allows configuration a single service endpoint"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"ziti-tunneler-server.v1"})," - ",(0,r.jsx)(n.strong,{children:"Deprecated"})," used to configure service hosting. Use ",(0,r.jsx)(n.code,{children:"host.v2"})," or\n",(0,r.jsx)(n.code,{children:"host.v1"}),"\ninstead"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"ziti-tunneler-client-v1"})," - ",(0,r.jsx)(n.strong,{children:"Deprecated"})," used to configure tunneler intercepts.\nUse ",(0,r.jsx)(n.code,{children:"intercept.v1"}),"\ninstead."]}),"\n"]})]})}function a(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>c});var i=t(96540);const r={},s=i.createContext(r);function o(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);