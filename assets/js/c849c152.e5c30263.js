"use strict";(self.webpackChunkdocusaurus_3=self.webpackChunkdocusaurus_3||[]).push([[9478],{19858:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>t,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"reference/developer/api/shared-api-capabilities","title":"Shared API Capabilities","description":"API Response Envelopes","source":"@site/docs/reference/developer/api/shared-api-capabilities.md","sourceDirName":"reference/developer/api","slug":"/reference/developer/api/shared-api-capabilities","permalink":"/docs/reference/developer/api/shared-api-capabilities","draft":false,"unlisted":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/reference/developer/api/shared-api-capabilities.md","tags":[],"version":"current","lastUpdatedAt":1745950071000,"frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Fabric API","permalink":"/docs/reference/developer/api/fabric-api"},"next":{"title":"Edge SDKs","permalink":"/docs/reference/developer/sdk/"}}');var r=i(74848),d=i(28453);const t={},l="Shared API Capabilities",c={},o=[{value:"API Response Envelopes",id:"api-response-envelopes",level:2},{value:"Filtering, Sorting, &amp; Pagination",id:"filtering-sorting--pagination",level:2},{value:"Pagination",id:"pagination",level:3},{value:"Sorting",id:"sorting",level:3},{value:"Filtering",id:"filtering",level:3},{value:"Logical Operations",id:"logical-operations",level:4},{value:"Logical Conjunctions",id:"logical-conjunctions",level:4},{value:"Types",id:"types",level:4}];function a(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,d.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"shared-api-capabilities",children:"Shared API Capabilities"})}),"\n",(0,r.jsx)(n.h2,{id:"api-response-envelopes",children:"API Response Envelopes"}),"\n",(0,r.jsx)(n.p,{children:"All responses from APIs have the following outer envelope:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-text",children:'{\n  "data": ...,\n  "meta": {...},\n  "error": {...}\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"data"})," and ",(0,r.jsx)(n.code,{children:"error"})," fields are mutually exclusive. Responses are either a data response or an error. The ",(0,r.jsx)(n.code,{children:"data"}),"\nsection represents the subject or output information of the client's request. The ",(0,r.jsx)(n.code,{children:"meta"})," section contains additional\ninformation about the requested entity that may be useful to clients (e.g. pagination, sortable fields, etc.)."]}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"error"})," section contains errors in the following format:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-text",children:'{\n  "code": "string constant error code",\n  "message": "string human readable value",\n  "cause": ... //[nested error|field error]\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"cause"})," field can either be another nested ",(0,r.jsx)(n.code,{children:"error"})," or a ",(0,r.jsx)(n.code,{children:"field error"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-text",children:'{\n  "field": "the name of the field",\n  "reason": "a message explaining the issue",\n  "value": ... //the provided value\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"filtering-sorting--pagination",children:"Filtering, Sorting, & Pagination"}),"\n",(0,r.jsxs)(n.p,{children:["API support rich filtering, sorting and pagination on queries that return lists/arrays of objects in the ",(0,r.jsx)(n.code,{children:"data"})," fields.\nOn list responses the ",(0,r.jsx)(n.code,{children:"meta"})," section contains a list of ",(0,r.jsx)(n.code,{children:"sortableFields"})," which can filtered and sorted upon.\nAll values are provided in the ",(0,r.jsx)(n.code,{children:"filter"})," URL query field."]}),"\n",(0,r.jsxs)(n.p,{children:["Example: ",(0,r.jsx)(n.code,{children:"https://my-controller/edge/v1/management/identities?filter=<filterValue>"})]}),"\n",(0,r.jsxs)(n.p,{children:["The value of ",(0,r.jsx)(n.code,{children:"filter"})," (denoted by ",(0,r.jsx)(n.code,{children:"<filterValue>"}),") is defined by the ",(0,r.jsx)(n.a,{href:"https://github.com/openziti/storage/blob/main/zitiql/ZitiQl.g4",children:"ZitiQl grammar definition"}),"."]}),"\n",(0,r.jsx)(n.h3,{id:"pagination",children:"Pagination"}),"\n",(0,r.jsxs)(n.p,{children:["Data can be paginated through by providing a ",(0,r.jsx)(n.code,{children:"filter"})," value with ",(0,r.jsx)(n.code,{children:"skip"})," and/or ",(0,r.jsx)(n.code,{children:"limit"})," clauses. For example to show:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["the first page of 10 items:  ",(0,r.jsx)(n.code,{children:"filter=skip 0 limit 10"})]}),"\n",(0,r.jsxs)(n.li,{children:["the second page of 10 items:  ",(0,r.jsx)(n.code,{children:"filter=skip 10 limit 10"})]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"sorting",children:"Sorting"}),"\n",(0,r.jsxs)(n.p,{children:["Data can be sorted on fields by providing a ",(0,r.jsx)(n.code,{children:"sort by"})," clause:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["sort by name ascending: ",(0,r.jsx)(n.code,{children:"filter=sort by name asc"})]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["sort by name descending: ",(0,r.jsx)(n.code,{children:"filter=sort by name dsc"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"filtering",children:"Filtering"}),"\n",(0,r.jsx)(n.h4,{id:"logical-operations",children:"Logical Operations"}),"\n",(0,r.jsx)(n.p,{children:"The following comparisons are allowed:"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Operation"}),(0,r.jsx)(n.th,{children:"Example"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"="}),", ",(0,r.jsx)(n.code,{children:"!="})]}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:'name = "myName"'}),", ",(0,r.jsx)(n.code,{children:'"isOnline" = true'})]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"<"}),", ",(0,r.jsx)(n.code,{children:">"}),", ",(0,r.jsx)(n.code,{children:"<="}),", ",(0,r.jsx)(n.code,{children:">="})]}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"precident > 0"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"contains"}),", ",(0,r.jsx)(n.code,{children:"not contains"})]}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:'name contains "hi"'})})]})]})]}),"\n",(0,r.jsx)(n.h4,{id:"logical-conjunctions",children:"Logical Conjunctions"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Conjunction"}),(0,r.jsx)(n.th,{children:"Example"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"and"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:'firstName = "bob" and lastName = "builder"'})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"or"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:'firstName = "bob" or firstName = "jim"'})})]})]})]}),"\n",(0,r.jsxs)(n.p,{children:["Complex conjunction grouping and nesting is supported via ",(0,r.jsx)(n.code,{children:"("})," and ",(0,r.jsx)(n.code,{children:")"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Example:"})," ",(0,r.jsx)(n.code,{children:'firstName = "bob" or (firstName = "jim" and lastName = "john" or ("isOnline" = false))'})]}),"\n",(0,r.jsx)(n.h4,{id:"types",children:"Types"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Example"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"string"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:'"this is a string"'})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"number"})}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"1"}),", ",(0,r.jsx)(n.code,{children:"1.555"}),", ",(0,r.jsx)(n.code,{children:"2e5"})]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"bool"})}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"true"}),", ",(0,r.jsx)(n.code,{children:"false"})]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"date_time"})," (RFC3339) ("]}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"datetime(2019-10-12T07:20:50.52+07:00)"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"array"})}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:'["str", "str"]'}),", ",(0,r.jsx)(n.code,{children:"[1,2,3.5]"}),", ",(0,r.jsx)(n.code,{children:"[datetime(...), datetime(...)]"})]})]})]})]})]})}function h(e={}){const{wrapper:n}={...(0,d.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>t,x:()=>l});var s=i(96540);const r={},d=s.createContext(r);function t(e){const n=s.useContext(d);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),s.createElement(d.Provider,{value:n},e.children)}}}]);