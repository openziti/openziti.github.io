"use strict";(self.webpackChunkopen_ziti=self.webpackChunkopen_ziti||[]).push([[9285],{26267:e=>{e.exports=JSON.parse('{"docusaurus-plugin-content-docs":{"default":{"loadedVersions":[{"versionName":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","path":"/docs","tagsPath":"/docs/tags","editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs","editUrlLocalized":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/i18n/en/docusaurus-plugin-content-docs/current","isLast":true,"routePriority":-1,"sidebarFilePath":"/home/runner/work/ziti-doc/ziti-doc/docusaurus/sidebars.js","contentPath":"/home/runner/work/ziti-doc/ziti-doc/docusaurus/docs","contentPathLocalized":"/home/runner/work/ziti-doc/ziti-doc/docusaurus/i18n/en/docusaurus-plugin-content-docs/current","docs":[{"unversionedId":"downloads","id":"downloads","title":"Downloads","description":"Install Ziti","source":"@site/docs/downloads.mdx","sourceDirName":".","slug":"/downloads","permalink":"/docs/downloads","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/downloads.mdx","tags":[],"version":"current","frontMatter":{"title":"Downloads","hide_table_of_contents":true,"description":"Install Ziti"}},{"unversionedId":"guides/deployments/cloud/controller","id":"guides/deployments/cloud/controller","title":"Run a Controller in a Public Cloud","description":"1.1 Create a VM to be used as the Controller","source":"@site/docs/guides/deployments/40-cloud/10-controller.mdx","sourceDirName":"guides/deployments/40-cloud","slug":"/guides/deployments/cloud/controller","permalink":"/docs/guides/deployments/cloud/controller","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/guides/deployments/40-cloud/10-controller.mdx","tags":[],"version":"current","sidebarPosition":10,"frontMatter":{"sidebar_label":"Controller","title":"Run a Controller in a Public Cloud"},"sidebar":"docsSidebar","previous":{"title":"Cloud","permalink":"/docs/category/cloud"},"next":{"title":"Router","permalink":"/docs/guides/deployments/cloud/router"}},{"unversionedId":"guides/deployments/cloud/router","id":"guides/deployments/cloud/router","title":"Run a Router in a Public Cloud","description":"2.0 Configure a Router","source":"@site/docs/guides/deployments/40-cloud/20-router.mdx","sourceDirName":"guides/deployments/40-cloud","slug":"/guides/deployments/cloud/router","permalink":"/docs/guides/deployments/cloud/router","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/guides/deployments/40-cloud/20-router.mdx","tags":[],"version":"current","sidebarPosition":20,"frontMatter":{"sidebar_label":"Router","title":"Run a Router in a Public Cloud"},"sidebar":"docsSidebar","previous":{"title":"Controller","permalink":"/docs/guides/deployments/cloud/controller"},"next":{"title":"Hardware Security Modules","permalink":"/docs/guides/hsm/"}},{"unversionedId":"guides/deployments/docker/console","id":"guides/deployments/docker/console","title":"Deploy the Console","description":"This article is about enabling the console on a controller that is running in a container.","source":"@site/docs/guides/deployments/20-docker/30-console.mdx","sourceDirName":"guides/deployments/20-docker","slug":"/guides/deployments/docker/console","permalink":"/docs/guides/deployments/docker/console","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/guides/deployments/20-docker/30-console.mdx","tags":[],"version":"current","sidebarPosition":30,"frontMatter":{"title":"Deploy the Console","sidebar_label":"Console"},"sidebar":"docsSidebar","previous":{"title":"Router","permalink":"/docs/guides/deployments/docker/router"},"next":{"title":"Kubernetes","permalink":"/docs/category/kubernetes"}},{"unversionedId":"guides/deployments/docker/controller","id":"guides/deployments/docker/controller","title":"Deploy the Controller with Docker","description":"","source":"@site/docs/guides/deployments/20-docker/10-controller.mdx","sourceDirName":"guides/deployments/20-docker","slug":"/guides/deployments/docker/controller","permalink":"/docs/guides/deployments/docker/controller","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/guides/deployments/20-docker/10-controller.mdx","tags":[],"version":"current","sidebarPosition":10,"frontMatter":{"title":"Deploy the Controller with Docker","sidebar_label":"Controller"},"sidebar":"docsSidebar","previous":{"title":"Docker","permalink":"/docs/category/docker"},"next":{"title":"Router","permalink":"/docs/guides/deployments/docker/router"}},{"unversionedId":"guides/deployments/docker/router","id":"guides/deployments/docker/router","title":"Deploy the Router with Docker","description":"","source":"@site/docs/guides/deployments/20-docker/20-router.mdx","sourceDirName":"guides/deployments/20-docker","slug":"/guides/deployments/docker/router","permalink":"/docs/guides/deployments/docker/router","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/guides/deployments/20-docker/20-router.mdx","tags":[],"version":"current","sidebarPosition":20,"frontMatter":{"title":"Deploy the Router with Docker","sidebar_label":"Router"},"sidebar":"docsSidebar","previous":{"title":"Controller","permalink":"/docs/guides/deployments/docker/controller"},"next":{"title":"Console","permalink":"/docs/guides/deployments/docker/console"}},{"unversionedId":"guides/deployments/kubernetes/kubernetes-console","id":"guides/deployments/kubernetes/kubernetes-console","title":"Kubernetes Console","description":"Use the console by navigating to the controller\'s address with path /zac/ in a web browser. If you published the controller at ctrl.ziti.example.com//ctrl.ziti.example.com/zac/.","source":"@site/docs/guides/deployments/30-kubernetes/kubernetes-console.mdx","sourceDirName":"guides/deployments/30-kubernetes","slug":"/guides/deployments/kubernetes/kubernetes-console","permalink":"/docs/guides/deployments/kubernetes/kubernetes-console","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/guides/deployments/30-kubernetes/kubernetes-console.mdx","tags":[],"version":"current","sidebarPosition":30,"frontMatter":{"sidebar_position":30,"sidebar_label":"Console","title":"Kubernetes Console"},"sidebar":"docsSidebar","previous":{"title":"Router","permalink":"/docs/guides/deployments/kubernetes/kubernetes-router"},"next":{"title":"Cloud","permalink":"/docs/category/cloud"}},{"unversionedId":"guides/deployments/kubernetes/kubernetes-controller","id":"guides/deployments/kubernetes/kubernetes-controller","title":"Install the Controller in Kubernetes","description":"","source":"@site/docs/guides/deployments/30-kubernetes/kubernetes-controller.mdx","sourceDirName":"guides/deployments/30-kubernetes","slug":"/guides/deployments/kubernetes/kubernetes-controller","permalink":"/docs/guides/deployments/kubernetes/kubernetes-controller","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/guides/deployments/30-kubernetes/kubernetes-controller.mdx","tags":[],"version":"current","sidebarPosition":10,"frontMatter":{"sidebar_position":10,"sidebar_label":"Controller","title":"Install the Controller in Kubernetes"},"sidebar":"docsSidebar","previous":{"title":"Kubernetes","permalink":"/docs/category/kubernetes"},"next":{"title":"Router","permalink":"/docs/guides/deployments/kubernetes/kubernetes-router"}},{"unversionedId":"guides/deployments/kubernetes/kubernetes-router","id":"guides/deployments/kubernetes/kubernetes-router","title":"Install the Router in Kubernetes","description":"","source":"@site/docs/guides/deployments/30-kubernetes/kubernetes-router.mdx","sourceDirName":"guides/deployments/30-kubernetes","slug":"/guides/deployments/kubernetes/kubernetes-router","permalink":"/docs/guides/deployments/kubernetes/kubernetes-router","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/guides/deployments/30-kubernetes/kubernetes-router.mdx","tags":[],"version":"current","sidebarPosition":20,"frontMatter":{"sidebar_position":20,"sidebar_label":"Router","title":"Install the Router in Kubernetes"},"sidebar":"docsSidebar","previous":{"title":"Controller","permalink":"/docs/guides/deployments/kubernetes/kubernetes-controller"},"next":{"title":"Console","permalink":"/docs/guides/deployments/kubernetes/kubernetes-console"}},{"unversionedId":"guides/deployments/linux/console","id":"guides/deployments/linux/console","title":"Console Deployment","description":"Installation","source":"@site/docs/guides/deployments/10-linux/30-console.mdx","sourceDirName":"guides/deployments/10-linux","slug":"/guides/deployments/linux/console","permalink":"/docs/guides/deployments/linux/console","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/guides/deployments/10-linux/30-console.mdx","tags":[],"version":"current","sidebarPosition":30,"frontMatter":{"title":"Console Deployment","sidebar_label":"Console"},"sidebar":"docsSidebar","previous":{"title":"Backup","permalink":"/docs/guides/deployments/linux/router/backup"},"next":{"title":"Docker","permalink":"/docs/category/docker"}},{"unversionedId":"guides/deployments/linux/controller/backup","id":"guides/deployments/linux/controller/backup","title":"Controller Backup and Recovery","description":"Backup","source":"@site/docs/guides/deployments/10-linux/10-controller/60-backup.mdx","sourceDirName":"guides/deployments/10-linux/10-controller","slug":"/guides/deployments/linux/controller/backup","permalink":"/docs/guides/deployments/linux/controller/backup","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/guides/deployments/10-linux/10-controller/60-backup.mdx","tags":[],"version":"current","sidebarPosition":60,"frontMatter":{"title":"Controller Backup and Recovery","sidebar_label":"Backup"},"sidebar":"docsSidebar","previous":{"title":"Migrate","permalink":"/docs/guides/deployments/linux/controller/migrate"},"next":{"title":"Router Deployment","permalink":"/docs/guides/deployments/linux/router/deploy"}},{"unversionedId":"guides/deployments/linux/controller/deploy","id":"guides/deployments/linux/controller/deploy","title":"Controller Deployment","description":"This article is about deploying a controller as a Linux system service. The controller introduction may be helpful to read first.","source":"@site/docs/guides/deployments/10-linux/10-controller/10-deploy.mdx","sourceDirName":"guides/deployments/10-linux/10-controller","slug":"/guides/deployments/linux/controller/deploy","permalink":"/docs/guides/deployments/linux/controller/deploy","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/guides/deployments/10-linux/10-controller/10-deploy.mdx","tags":[],"version":"current","sidebarPosition":10,"frontMatter":{"title":"Controller Deployment","sidebar_label":"Controller","id":"deploy"},"sidebar":"docsSidebar","previous":{"title":"Linux","permalink":"/docs/category/linux"},"next":{"title":"Migrate","permalink":"/docs/guides/deployments/linux/controller/migrate"}},{"unversionedId":"guides/deployments/linux/controller/migrate","id":"guides/deployments/linux/controller/migrate","title":"Migrate a Controller Installation","description":"Here\'s an example of migrating an existing controller\'s configuration to the Linux service\'s working directory.","source":"@site/docs/guides/deployments/10-linux/10-controller/15-migrate.mdx","sourceDirName":"guides/deployments/10-linux/10-controller","slug":"/guides/deployments/linux/controller/migrate","permalink":"/docs/guides/deployments/linux/controller/migrate","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/guides/deployments/10-linux/10-controller/15-migrate.mdx","tags":[],"version":"current","sidebarPosition":15,"frontMatter":{"title":"Migrate a Controller Installation","sidebar_label":"Migrate"},"sidebar":"docsSidebar","previous":{"title":"Controller","permalink":"/docs/guides/deployments/linux/controller/deploy"},"next":{"title":"Backup","permalink":"/docs/guides/deployments/linux/controller/backup"}},{"unversionedId":"guides/deployments/linux/router/backup","id":"guides/deployments/linux/router/backup","title":"Router Backup and Recovery","description":"Recover","source":"@site/docs/guides/deployments/10-linux/20-router/60-backup.mdx","sourceDirName":"guides/deployments/10-linux/20-router","slug":"/guides/deployments/linux/router/backup","permalink":"/docs/guides/deployments/linux/router/backup","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/guides/deployments/10-linux/20-router/60-backup.mdx","tags":[],"version":"current","sidebarPosition":60,"frontMatter":{"title":"Router Backup and Recovery","sidebar_label":"Backup"},"sidebar":"docsSidebar","previous":{"title":"Migrate","permalink":"/docs/guides/deployments/linux/router/migrate"},"next":{"title":"Console","permalink":"/docs/guides/deployments/linux/console"}},{"unversionedId":"guides/deployments/linux/router/cli-mgmt","id":"guides/deployments/linux/router/cli-mgmt","title":"Managing Routers with the CLI","description":"Login","source":"@site/docs/guides/deployments/10-linux/20-router/40-cli-mgmt.md","sourceDirName":"guides/deployments/10-linux/20-router","slug":"/guides/deployments/linux/router/cli-mgmt","permalink":"/docs/guides/deployments/linux/router/cli-mgmt","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/guides/deployments/10-linux/20-router/40-cli-mgmt.md","tags":[],"version":"current","sidebarPosition":40,"frontMatter":{"id":"cli-mgmt","title":"Managing Routers with the CLI","sidebar_label":"CLI Mgmt"},"sidebar":"docsSidebar","previous":{"title":"Configuration","permalink":"/docs/guides/deployments/linux/router/router-configuration"},"next":{"title":"Migrate","permalink":"/docs/guides/deployments/linux/router/migrate"}},{"unversionedId":"guides/deployments/linux/router/deploy","id":"guides/deployments/linux/router/deploy","title":"Router Deployment","description":"This article is about deploying a router as a Linux system service. The router introduction may be helpful to read first.","source":"@site/docs/guides/deployments/10-linux/20-router/10-deploy.mdx","sourceDirName":"guides/deployments/10-linux/20-router","slug":"/guides/deployments/linux/router/deploy","permalink":"/docs/guides/deployments/linux/router/deploy","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/guides/deployments/10-linux/20-router/10-deploy.mdx","tags":[],"version":"current","sidebarPosition":10,"frontMatter":{"title":"Router Deployment"},"sidebar":"docsSidebar","previous":{"title":"Backup","permalink":"/docs/guides/deployments/linux/controller/backup"},"next":{"title":"Configuration","permalink":"/docs/guides/deployments/linux/router/router-configuration"}},{"unversionedId":"guides/deployments/linux/router/migrate","id":"guides/deployments/linux/router/migrate","title":"Migrate a Router Installation","description":"Here\'s an example of migrating an existing router configuration to the Linux service\'s working directory.","source":"@site/docs/guides/deployments/10-linux/20-router/50-migrate.mdx","sourceDirName":"guides/deployments/10-linux/20-router","slug":"/guides/deployments/linux/router/migrate","permalink":"/docs/guides/deployments/linux/router/migrate","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/guides/deployments/10-linux/20-router/50-migrate.mdx","tags":[],"version":"current","sidebarPosition":50,"frontMatter":{"title":"Migrate a Router Installation","sidebar_label":"Migrate"},"sidebar":"docsSidebar","previous":{"title":"CLI Mgmt","permalink":"/docs/guides/deployments/linux/router/cli-mgmt"},"next":{"title":"Backup","permalink":"/docs/guides/deployments/linux/router/backup"}},{"unversionedId":"guides/deployments/linux/router/router-configuration","id":"guides/deployments/linux/router/router-configuration","title":"Router Configuration","description":"This article expands on the Linux router deployment article with configuration concepts and examples.","source":"@site/docs/guides/deployments/10-linux/20-router/30-configuration.md","sourceDirName":"guides/deployments/10-linux/20-router","slug":"/guides/deployments/linux/router/router-configuration","permalink":"/docs/guides/deployments/linux/router/router-configuration","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/guides/deployments/10-linux/20-router/30-configuration.md","tags":[],"version":"current","sidebarPosition":30,"frontMatter":{"id":"router-configuration","title":"Router Configuration","sidebar_label":"Configuration","hide_table_of_contents":false},"sidebar":"docsSidebar","previous":{"title":"Router Deployment","permalink":"/docs/guides/deployments/linux/router/deploy"},"next":{"title":"CLI Mgmt","permalink":"/docs/guides/deployments/linux/router/cli-mgmt"}},{"unversionedId":"guides/hsm/hsmIndex","id":"guides/hsm/hsmIndex","title":"Hardware Security Modules","description":"A hardware security module (HSM) is a physical piece of equipment which is designed specifically to protect cryptographic keys","source":"@site/docs/guides/hsm/index.md","sourceDirName":"guides/hsm","slug":"/guides/hsm/","permalink":"/docs/guides/hsm/","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/guides/hsm/index.md","tags":[],"version":"current","frontMatter":{"id":"hsmIndex","title":"Hardware Security Modules"},"sidebar":"docsSidebar","previous":{"title":"Router","permalink":"/docs/guides/deployments/cloud/router"},"next":{"title":"SoftHSMv2","permalink":"/docs/guides/hsm/softhsm"}},{"unversionedId":"guides/hsm/softhsm","id":"guides/hsm/softhsm","title":"SoftHSMv2","description":"Overview","source":"@site/docs/guides/hsm/softhsm.mdx","sourceDirName":"guides/hsm","slug":"/guides/hsm/softhsm","permalink":"/docs/guides/hsm/softhsm","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/guides/hsm/softhsm.mdx","tags":[],"version":"current","frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Hardware Security Modules","permalink":"/docs/guides/hsm/"},"next":{"title":"YubiKey by Yubico","permalink":"/docs/guides/hsm/yubikey"}},{"unversionedId":"guides/hsm/yubikey","id":"guides/hsm/yubikey","title":"YubiKey by Yubico","description":"Yubico is a manufacturer of HSM devices. A popular line of HSM produced by Yubico is the","source":"@site/docs/guides/hsm/yubikey.mdx","sourceDirName":"guides/hsm","slug":"/guides/hsm/yubikey","permalink":"/docs/guides/hsm/yubikey","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/guides/hsm/yubikey.mdx","tags":[],"version":"current","frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"SoftHSMv2","permalink":"/docs/guides/hsm/softhsm"},"next":{"title":"Topologies","permalink":"/docs/category/topologies"}},{"unversionedId":"guides/Identity_Providers/auth0/index","id":"guides/Identity_Providers/auth0/index","title":"Auth0 for BrowZer","description":"Auth0 for OpenZiti BrowZer","source":"@site/docs/guides/Identity_Providers/auth0/index.md","sourceDirName":"guides/Identity_Providers/auth0","slug":"/identity-providers-for-browZer-auth0","permalink":"/docs/identity-providers-for-browZer-auth0","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/guides/Identity_Providers/auth0/index.md","tags":[],"version":"current","frontMatter":{"title":"Auth0 for BrowZer","sidebar_label":"Auth0","slug":"/identity-providers-for-browZer-auth0"},"sidebar":"docsSidebar","previous":{"title":"Identity Providers for BrowZer","permalink":"/docs/identity-providers-for-browZer"},"next":{"title":"Authelia","permalink":"/docs/identity-providers-for-browZer-authelia"}},{"unversionedId":"guides/Identity_Providers/autheila/index","id":"guides/Identity_Providers/autheila/index","title":"Authelia for BrowZer","description":"Authelia for OpenZiti BrowZer","source":"@site/docs/guides/Identity_Providers/autheila/index.md","sourceDirName":"guides/Identity_Providers/autheila","slug":"/identity-providers-for-browZer-authelia","permalink":"/docs/identity-providers-for-browZer-authelia","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/guides/Identity_Providers/autheila/index.md","tags":[],"version":"current","frontMatter":{"title":"Authelia for BrowZer","sidebar_label":"Authelia","slug":"/identity-providers-for-browZer-authelia"},"sidebar":"docsSidebar","previous":{"title":"Auth0","permalink":"/docs/identity-providers-for-browZer-auth0"},"next":{"title":"Authentik","permalink":"/docs/identity-providers-for-browZer-authentik"}},{"unversionedId":"guides/Identity_Providers/authentik/index","id":"guides/Identity_Providers/authentik/index","title":"Authentik for BrowZer","description":"Authentik for OpenZiti BrowZer","source":"@site/docs/guides/Identity_Providers/authentik/index.md","sourceDirName":"guides/Identity_Providers/authentik","slug":"/identity-providers-for-browZer-authentik","permalink":"/docs/identity-providers-for-browZer-authentik","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/guides/Identity_Providers/authentik/index.md","tags":[],"version":"current","frontMatter":{"title":"Authentik for BrowZer","sidebar_label":"Authentik","slug":"/identity-providers-for-browZer-authentik"},"sidebar":"docsSidebar","previous":{"title":"Authelia","permalink":"/docs/identity-providers-for-browZer-authelia"},"next":{"title":"Cognito","permalink":"/docs/identity-providers-for-browZer-cognito"}},{"unversionedId":"guides/Identity_Providers/cognito/index","id":"guides/Identity_Providers/cognito/index","title":"AWS Cognito for BrowZer","description":"AWS Cognito for OpenZiti BrowZer","source":"@site/docs/guides/Identity_Providers/cognito/index.md","sourceDirName":"guides/Identity_Providers/cognito","slug":"/identity-providers-for-browZer-cognito","permalink":"/docs/identity-providers-for-browZer-cognito","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/guides/Identity_Providers/cognito/index.md","tags":[],"version":"current","frontMatter":{"title":"AWS Cognito for BrowZer","sidebar_label":"Cognito","slug":"/identity-providers-for-browZer-cognito"},"sidebar":"docsSidebar","previous":{"title":"Authentik","permalink":"/docs/identity-providers-for-browZer-authentik"},"next":{"title":"Dex","permalink":"/docs/identity-providers-for-browZer-dex"}},{"unversionedId":"guides/Identity_Providers/dex/index","id":"guides/Identity_Providers/dex/index","title":"Dex for BrowZer","description":"Dex for OpenZiti BrowZer","source":"@site/docs/guides/Identity_Providers/dex/index.md","sourceDirName":"guides/Identity_Providers/dex","slug":"/identity-providers-for-browZer-dex","permalink":"/docs/identity-providers-for-browZer-dex","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/guides/Identity_Providers/dex/index.md","tags":[],"version":"current","frontMatter":{"title":"Dex for BrowZer","sidebar_label":"Dex","slug":"/identity-providers-for-browZer-dex"},"sidebar":"docsSidebar","previous":{"title":"Cognito","permalink":"/docs/identity-providers-for-browZer-cognito"},"next":{"title":"Duo","permalink":"/docs/identity-providers-for-browZer-duo"}},{"unversionedId":"guides/Identity_Providers/duo/index","id":"guides/Identity_Providers/duo/index","title":"Duo for BrowZer","description":"Duo for OpenZiti BrowZer","source":"@site/docs/guides/Identity_Providers/duo/index.md","sourceDirName":"guides/Identity_Providers/duo","slug":"/identity-providers-for-browZer-duo","permalink":"/docs/identity-providers-for-browZer-duo","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/guides/Identity_Providers/duo/index.md","tags":[],"version":"current","frontMatter":{"title":"Duo for BrowZer","sidebar_label":"Duo","slug":"/identity-providers-for-browZer-duo"},"sidebar":"docsSidebar","previous":{"title":"Dex","permalink":"/docs/identity-providers-for-browZer-dex"},"next":{"title":"Microsoft Entra ID","permalink":"/docs/identity-providers-for-browZer-entra"}},{"unversionedId":"guides/Identity_Providers/entra/index","id":"guides/Identity_Providers/entra/index","title":"Microsoft Entra ID for BrowZer","description":"Microsoft Entra ID for OpenZiti BrowZer","source":"@site/docs/guides/Identity_Providers/entra/index.md","sourceDirName":"guides/Identity_Providers/entra","slug":"/identity-providers-for-browZer-entra","permalink":"/docs/identity-providers-for-browZer-entra","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/guides/Identity_Providers/entra/index.md","tags":[],"version":"current","frontMatter":{"title":"Microsoft Entra ID for BrowZer","sidebar_label":"Microsoft Entra ID","slug":"/identity-providers-for-browZer-entra"},"sidebar":"docsSidebar","previous":{"title":"Duo","permalink":"/docs/identity-providers-for-browZer-duo"},"next":{"title":"Google","permalink":"/docs/identity-providers-for-browZer-google"}},{"unversionedId":"guides/Identity_Providers/google/index","id":"guides/Identity_Providers/google/index","title":"Google for BrowZer","description":"Google for OpenZiti BrowZer","source":"@site/docs/guides/Identity_Providers/google/index.md","sourceDirName":"guides/Identity_Providers/google","slug":"/identity-providers-for-browZer-google","permalink":"/docs/identity-providers-for-browZer-google","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/guides/Identity_Providers/google/index.md","tags":[],"version":"current","frontMatter":{"title":"Google for BrowZer","sidebar_label":"Google","slug":"/identity-providers-for-browZer-google"},"sidebar":"docsSidebar","previous":{"title":"Microsoft Entra ID","permalink":"/docs/identity-providers-for-browZer-entra"},"next":{"title":"Keycloak","permalink":"/docs/identity-providers-for-browZer-keycloak"}},{"unversionedId":"guides/Identity_Providers/index","id":"guides/Identity_Providers/index","title":"Identity Providers for BrowZer","description":"Identity Providers for OpenZiti BrowZer","source":"@site/docs/guides/Identity_Providers/index.md","sourceDirName":"guides/Identity_Providers","slug":"/identity-providers-for-browZer","permalink":"/docs/identity-providers-for-browZer","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/guides/Identity_Providers/index.md","tags":[],"version":"current","frontMatter":{"title":"Identity Providers for BrowZer","slug":"/identity-providers-for-browZer"},"sidebar":"docsSidebar","previous":{"title":"Overview","permalink":"/docs/guides/"},"next":{"title":"Auth0","permalink":"/docs/identity-providers-for-browZer-auth0"}},{"unversionedId":"guides/Identity_Providers/keycloak/index","id":"guides/Identity_Providers/keycloak/index","title":"Keycloak for BrowZer","description":"Keycloak for OpenZiti BrowZer","source":"@site/docs/guides/Identity_Providers/keycloak/index.md","sourceDirName":"guides/Identity_Providers/keycloak","slug":"/identity-providers-for-browZer-keycloak","permalink":"/docs/identity-providers-for-browZer-keycloak","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/guides/Identity_Providers/keycloak/index.md","tags":[],"version":"current","frontMatter":{"title":"Keycloak for BrowZer","sidebar_label":"Keycloak","slug":"/identity-providers-for-browZer-keycloak"},"sidebar":"docsSidebar","previous":{"title":"Google","permalink":"/docs/identity-providers-for-browZer-google"},"next":{"title":"Okta","permalink":"/docs/identity-providers-for-browZer-okta"}},{"unversionedId":"guides/Identity_Providers/okta/index","id":"guides/Identity_Providers/okta/index","title":"How to set up Okta for BrowZer","description":"Okta for OpenZiti BrowZer","source":"@site/docs/guides/Identity_Providers/okta/index.md","sourceDirName":"guides/Identity_Providers/okta","slug":"/identity-providers-for-browZer-okta","permalink":"/docs/identity-providers-for-browZer-okta","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/guides/Identity_Providers/okta/index.md","tags":[],"version":"current","frontMatter":{"title":"How to set up Okta for BrowZer","sidebar_label":"Okta","slug":"/identity-providers-for-browZer-okta"},"sidebar":"docsSidebar","previous":{"title":"Keycloak","permalink":"/docs/identity-providers-for-browZer-keycloak"},"next":{"title":"Ory Kratos","permalink":"/docs/identity-providers-for-browZer-ory-kratos"}},{"unversionedId":"guides/Identity_Providers/ory_kratos/index","id":"guides/Identity_Providers/ory_kratos/index","title":"Ory Kratos for BrowZer","description":"Ory Kratos for OpenZiti BrowZer","source":"@site/docs/guides/Identity_Providers/ory_kratos/index.md","sourceDirName":"guides/Identity_Providers/ory_kratos","slug":"/identity-providers-for-browZer-ory-kratos","permalink":"/docs/identity-providers-for-browZer-ory-kratos","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/guides/Identity_Providers/ory_kratos/index.md","tags":[],"version":"current","frontMatter":{"title":"Ory Kratos for BrowZer","sidebar_label":"Ory Kratos","slug":"/identity-providers-for-browZer-ory-kratos"},"sidebar":"docsSidebar","previous":{"title":"Okta","permalink":"/docs/identity-providers-for-browZer-okta"},"next":{"title":"Stytch","permalink":"/docs/identity-providers-for-browZer-stytch"}},{"unversionedId":"guides/Identity_Providers/stytch/index","id":"guides/Identity_Providers/stytch/index","title":"Stytch for BrowZer","description":"Stytch for OpenZiti BrowZer","source":"@site/docs/guides/Identity_Providers/stytch/index.md","sourceDirName":"guides/Identity_Providers/stytch","slug":"/identity-providers-for-browZer-stytch","permalink":"/docs/identity-providers-for-browZer-stytch","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/guides/Identity_Providers/stytch/index.md","tags":[],"version":"current","frontMatter":{"title":"Stytch for BrowZer","sidebar_label":"Stytch","slug":"/identity-providers-for-browZer-stytch"},"sidebar":"docsSidebar","previous":{"title":"Ory Kratos","permalink":"/docs/identity-providers-for-browZer-ory-kratos"},"next":{"title":"Zitadel","permalink":"/docs/identity-providers-for-browZer-zitadel"}},{"unversionedId":"guides/Identity_Providers/zitadel/index","id":"guides/Identity_Providers/zitadel/index","title":"Zitadel for BrowZer","description":"Zitadel for OpenZiti BrowZer","source":"@site/docs/guides/Identity_Providers/zitadel/index.md","sourceDirName":"guides/Identity_Providers/zitadel","slug":"/identity-providers-for-browZer-zitadel","permalink":"/docs/identity-providers-for-browZer-zitadel","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/guides/Identity_Providers/zitadel/index.md","tags":[],"version":"current","frontMatter":{"title":"Zitadel for BrowZer","sidebar_label":"Zitadel","slug":"/identity-providers-for-browZer-zitadel"},"sidebar":"docsSidebar","previous":{"title":"Stytch","permalink":"/docs/identity-providers-for-browZer-stytch"},"next":{"title":"Deployments","permalink":"/docs/category/deployments"}},{"unversionedId":"guides/index","id":"guides/index","title":"Overview","description":"This section contains operational guidance for specific tasks such as deploying a controller with Helm or as a Linux system service, backing up the controller\'s database, and migrating controller or router configurations.","source":"@site/docs/guides/index.md","sourceDirName":"guides","slug":"/guides/","permalink":"/docs/guides/","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/guides/index.md","tags":[],"version":"current","sidebarPosition":10,"frontMatter":{"title":"Overview","sidebar_position":10},"sidebar":"docsSidebar","previous":{"title":"Glossary","permalink":"/docs/reference/glossary"},"next":{"title":"Identity Providers for BrowZer","permalink":"/docs/identity-providers-for-browZer"}},{"unversionedId":"guides/topologies/gateway/router","id":"guides/topologies/gateway/router","title":"Use a Router as a Local Gateway","description":"1.0 Introduction","source":"@site/docs/guides/topologies/20-gateway/router.mdx","sourceDirName":"guides/topologies/20-gateway","slug":"/guides/topologies/gateway/router","permalink":"/docs/guides/topologies/gateway/router","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/guides/topologies/20-gateway/router.mdx","tags":[],"version":"current","sidebarPosition":10,"frontMatter":{"sidebar_position":10,"sidebar_label":"Router","title":"Use a Router as a Local Gateway"},"sidebar":"docsSidebar","previous":{"title":"Gateway","permalink":"/docs/category/gateway"},"next":{"title":"Tunneler","permalink":"/docs/guides/topologies/gateway/tunneler"}},{"unversionedId":"guides/topologies/gateway/tunneler","id":"guides/topologies/gateway/tunneler","title":"Use a Tunneler as a Local Gateway","description":"1.0 Introduction","source":"@site/docs/guides/topologies/20-gateway/tunneler.mdx","sourceDirName":"guides/topologies/20-gateway","slug":"/guides/topologies/gateway/tunneler","permalink":"/docs/guides/topologies/gateway/tunneler","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/guides/topologies/20-gateway/tunneler.mdx","tags":[],"version":"current","sidebarPosition":20,"frontMatter":{"sidebar_position":20,"sidebar_label":"Tunneler","title":"Use a Tunneler as a Local Gateway"},"sidebar":"docsSidebar","previous":{"title":"Router","permalink":"/docs/guides/topologies/gateway/router"},"next":{"title":"Troubleshooting","permalink":"/docs/category/troubleshooting"}},{"unversionedId":"guides/topologies/services","id":"guides/topologies/services","title":"Service Topologies","description":"3.0 Ziti services","source":"@site/docs/guides/topologies/10-services.mdx","sourceDirName":"guides/topologies","slug":"/guides/topologies/services","permalink":"/docs/guides/topologies/services","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/guides/topologies/10-services.mdx","tags":[],"version":"current","sidebarPosition":50,"frontMatter":{"sidebar_position":50,"sidebar_label":"Services","title":"Service Topologies"},"sidebar":"docsSidebar","previous":{"title":"Topologies","permalink":"/docs/category/topologies"},"next":{"title":"Gateway","permalink":"/docs/category/gateway"}},{"unversionedId":"guides/troubleshooting/agent","id":"guides/troubleshooting/agent","title":"Interprocess Communication Agent","description":"The controller and router provide an IPC agent for administration. The agent listens on a Unix domain socket. Here\'s an example for querying the controller\'s agent for statistics.","source":"@site/docs/guides/troubleshooting/15-agent.mdx","sourceDirName":"guides/troubleshooting","slug":"/guides/troubleshooting/agent","permalink":"/docs/guides/troubleshooting/agent","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/guides/troubleshooting/15-agent.mdx","tags":[],"version":"current","sidebarPosition":15,"frontMatter":{"title":"Interprocess Communication Agent","sidebar_label":"Agent"},"sidebar":"docsSidebar","previous":{"title":"Troubleshooting","permalink":"/docs/category/troubleshooting"},"next":{"title":"Circuit Create Error Codes","permalink":"/docs/guides/troubleshooting/circuit-create-error-codes"}},{"unversionedId":"guides/troubleshooting/circuit-create-error-codes","id":"guides/troubleshooting/circuit-create-error-codes","title":"Circuit Create Error Codes","description":"The most fundamental action of a working OpenZiti instance is the dialing of services to create connections and pass data.  This action crosses a few borders, but the central process is the creation of a fabric circuit to carry the traffic between the initiating edge node (SDK embedded application, client, tunneler, etc.) and the terminating edge node.  When this process fails, it is important to understand why it failed, to properly troubleshoot the issue.  Below is a table of the various cause codes emitted by the controller, and a brief description of the context of the error.","source":"@site/docs/guides/troubleshooting/20-circuit-create-error-codes.md","sourceDirName":"guides/troubleshooting","slug":"/guides/troubleshooting/circuit-create-error-codes","permalink":"/docs/guides/troubleshooting/circuit-create-error-codes","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/guides/troubleshooting/20-circuit-create-error-codes.md","tags":[],"version":"current","sidebarPosition":20,"frontMatter":{"hide_table_of_contents":true},"sidebar":"docsSidebar","previous":{"title":"Agent","permalink":"/docs/guides/troubleshooting/agent"},"next":{"title":"PKI Troubleshooting","permalink":"/docs/guides/troubleshooting/pki-troubleshooting/"}},{"unversionedId":"guides/troubleshooting/pki-troubleshooting/index","id":"guides/troubleshooting/pki-troubleshooting/index","title":"PKI Troubleshooting","description":"Configuring a network\'s PKI can be confusing. Validating a single side of a mutual TLS connection is","source":"@site/docs/guides/troubleshooting/pki-troubleshooting/index.mdx","sourceDirName":"guides/troubleshooting/pki-troubleshooting","slug":"/guides/troubleshooting/pki-troubleshooting/","permalink":"/docs/guides/troubleshooting/pki-troubleshooting/","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/guides/troubleshooting/pki-troubleshooting/index.mdx","tags":[],"version":"current","frontMatter":{"title":"PKI Troubleshooting"},"sidebar":"docsSidebar","previous":{"title":"Circuit Create Error Codes","permalink":"/docs/guides/troubleshooting/circuit-create-error-codes"},"next":{"title":"Renewed Certs","permalink":"/docs/guides/troubleshooting/pki-troubleshooting/renew-cert"}},{"unversionedId":"guides/troubleshooting/pki-troubleshooting/renew-cert","id":"guides/troubleshooting/pki-troubleshooting/renew-cert","title":"Renewing Leaf Certificates","description":"The network uses a combination of client, server, and CA certificates in its PKI. The most important certificates to renew are routers\' client and server certificates and identities\' client certificates.","source":"@site/docs/guides/troubleshooting/pki-troubleshooting/renew-cert.md","sourceDirName":"guides/troubleshooting/pki-troubleshooting","slug":"/guides/troubleshooting/pki-troubleshooting/renew-cert","permalink":"/docs/guides/troubleshooting/pki-troubleshooting/renew-cert","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/guides/troubleshooting/pki-troubleshooting/renew-cert.md","tags":[],"version":"current","frontMatter":{"title":"Renewing Leaf Certificates","sidebar_label":"Renewed Certs","id":"renew-cert"},"sidebar":"docsSidebar","previous":{"title":"PKI Troubleshooting","permalink":"/docs/guides/troubleshooting/pki-troubleshooting/"},"next":{"title":"Expired Certs","permalink":"/docs/guides/troubleshooting/pki-troubleshooting/troubleshoot-expired-certs"}},{"unversionedId":"guides/troubleshooting/pki-troubleshooting/troubleshoot-expired-certs","id":"guides/troubleshooting/pki-troubleshooting/troubleshoot-expired-certs","title":"Expired Certs","description":"The following are examples of how an invalid server cert will present itself on a running network. There are certs","source":"@site/docs/guides/troubleshooting/pki-troubleshooting/troubleshoot-expired-certs.md","sourceDirName":"guides/troubleshooting/pki-troubleshooting","slug":"/guides/troubleshooting/pki-troubleshooting/troubleshoot-expired-certs","permalink":"/docs/guides/troubleshooting/pki-troubleshooting/troubleshoot-expired-certs","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/guides/troubleshooting/pki-troubleshooting/troubleshoot-expired-certs.md","tags":[],"version":"current","frontMatter":{"title":"Expired Certs","id":"troubleshoot-expired-certs"},"sidebar":"docsSidebar","previous":{"title":"Renewed Certs","permalink":"/docs/guides/troubleshooting/pki-troubleshooting/renew-cert"}},{"unversionedId":"learn/core-concepts/clients/choose","id":"learn/core-concepts/clients/choose","title":"Choosing a Client","description":"Once you have a network - you are going to require a Ziti-aware client in order to access the network. There are","source":"@site/docs/learn/core-concepts/clients/choose.mdx","sourceDirName":"learn/core-concepts/clients","slug":"/learn/core-concepts/clients/choose","permalink":"/docs/learn/core-concepts/clients/choose","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/core-concepts/clients/choose.mdx","tags":[],"version":"current","sidebarPosition":0,"frontMatter":{"title":"Choosing a Client","id":"choose","sidebar_position":0},"sidebar":"docsSidebar","previous":{"title":"Core Concepts","permalink":"/docs/category/core-concepts"},"next":{"title":"Process Sequences","permalink":"/docs/category/process-sequences"}},{"unversionedId":"learn/core-concepts/clients/process-sequences/EndpointInitialization","id":"learn/core-concepts/clients/process-sequences/EndpointInitialization","title":"Endpoint  Initialization","description":"Steps","source":"@site/docs/learn/core-concepts/clients/process-sequences/EndpointInitialization.md","sourceDirName":"learn/core-concepts/clients/process-sequences","slug":"/learn/core-concepts/clients/process-sequences/EndpointInitialization","permalink":"/docs/learn/core-concepts/clients/process-sequences/EndpointInitialization","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/core-concepts/clients/process-sequences/EndpointInitialization.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Process Sequences","permalink":"/docs/category/process-sequences"},"next":{"title":"Endpoint Registration","permalink":"/docs/learn/core-concepts/clients/process-sequences/EndpointRegistration"}},{"unversionedId":"learn/core-concepts/clients/process-sequences/EndpointRegistration","id":"learn/core-concepts/clients/process-sequences/EndpointRegistration","title":"Endpoint Registration","description":"Steps","source":"@site/docs/learn/core-concepts/clients/process-sequences/EndpointRegistration.md","sourceDirName":"learn/core-concepts/clients/process-sequences","slug":"/learn/core-concepts/clients/process-sequences/EndpointRegistration","permalink":"/docs/learn/core-concepts/clients/process-sequences/EndpointRegistration","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/core-concepts/clients/process-sequences/EndpointRegistration.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Endpoint  Initialization","permalink":"/docs/learn/core-concepts/clients/process-sequences/EndpointInitialization"},"next":{"title":"Service Dial","permalink":"/docs/learn/core-concepts/clients/process-sequences/ServiceDial"}},{"unversionedId":"learn/core-concepts/clients/process-sequences/ServiceDial","id":"learn/core-concepts/clients/process-sequences/ServiceDial","title":"Service Dial","description":"Steps","source":"@site/docs/learn/core-concepts/clients/process-sequences/ServiceDial.md","sourceDirName":"learn/core-concepts/clients/process-sequences","slug":"/learn/core-concepts/clients/process-sequences/ServiceDial","permalink":"/docs/learn/core-concepts/clients/process-sequences/ServiceDial","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/core-concepts/clients/process-sequences/ServiceDial.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Endpoint Registration","permalink":"/docs/learn/core-concepts/clients/process-sequences/EndpointRegistration"},"next":{"title":"Ziti Identities","permalink":"/docs/learn/core-concepts/identities/overview"}},{"unversionedId":"learn/core-concepts/config-store/config-type-host-v1","id":"learn/core-concepts/config-store/config-type-host-v1","title":"Tunneler Config Type host.v1","description":"A Config of Config Type host.v1 configures a hosting Ziti tunneler to forward connections to the destination server for a particular Ziti service.","source":"@site/docs/learn/core-concepts/config-store/config-type-host-v1.md","sourceDirName":"learn/core-concepts/config-store","slug":"/learn/core-concepts/config-store/config-type-host-v1","permalink":"/docs/learn/core-concepts/config-store/config-type-host-v1","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/core-concepts/config-store/config-type-host-v1.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Service Configurations","permalink":"/docs/learn/core-concepts/config-store/overview"},"next":{"title":"Tunneler Config Type intercept.v1","permalink":"/docs/learn/core-concepts/config-store/config-type-intercept-v1"}},{"unversionedId":"learn/core-concepts/config-store/config-type-intercept-v1","id":"learn/core-concepts/config-store/config-type-intercept-v1","title":"Tunneler Config Type intercept.v1","description":"A Config of Config Type intercept.v1 configures an intercepting Ziti tunneler as a proxy for a particular Ziti service.","source":"@site/docs/learn/core-concepts/config-store/config-type-intercept-v1.md","sourceDirName":"learn/core-concepts/config-store","slug":"/learn/core-concepts/config-store/config-type-intercept-v1","permalink":"/docs/learn/core-concepts/config-store/config-type-intercept-v1","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/core-concepts/config-store/config-type-intercept-v1.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Tunneler Config Type host.v1","permalink":"/docs/learn/core-concepts/config-store/config-type-host-v1"},"next":{"title":"Consuming","permalink":"/docs/learn/core-concepts/config-store/consuming"}},{"unversionedId":"learn/core-concepts/config-store/consuming","id":"learn/core-concepts/config-store/consuming","title":"Consuming","description":"Consuming Configuration Data","source":"@site/docs/learn/core-concepts/config-store/consuming.md","sourceDirName":"learn/core-concepts/config-store","slug":"/learn/core-concepts/config-store/consuming","permalink":"/docs/learn/core-concepts/config-store/consuming","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/core-concepts/config-store/consuming.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Tunneler Config Type intercept.v1","permalink":"/docs/learn/core-concepts/config-store/config-type-intercept-v1"},"next":{"title":"Managing","permalink":"/docs/learn/core-concepts/config-store/managing"}},{"unversionedId":"learn/core-concepts/config-store/managing","id":"learn/core-concepts/config-store/managing","title":"Managing","description":"Managing Configurations","source":"@site/docs/learn/core-concepts/config-store/managing.md","sourceDirName":"learn/core-concepts/config-store","slug":"/learn/core-concepts/config-store/managing","permalink":"/docs/learn/core-concepts/config-store/managing","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/core-concepts/config-store/managing.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Consuming","permalink":"/docs/learn/core-concepts/config-store/consuming"},"next":{"title":"Overview","permalink":"/docs/learn/core-concepts/metrics/overview"}},{"unversionedId":"learn/core-concepts/config-store/overview","id":"learn/core-concepts/config-store/overview","title":"Service Configurations","description":"Ziti Service Configurations, henceforth \\"Configs\\", may be associated with a service to provide metadata for the application that is being delivered by that service.","source":"@site/docs/learn/core-concepts/config-store/overview.md","sourceDirName":"learn/core-concepts/config-store","slug":"/learn/core-concepts/config-store/overview","permalink":"/docs/learn/core-concepts/config-store/overview","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/core-concepts/config-store/overview.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Ziti Services","permalink":"/docs/learn/core-concepts/services/overview"},"next":{"title":"Tunneler Config Type host.v1","permalink":"/docs/learn/core-concepts/config-store/config-type-host-v1"}},{"unversionedId":"learn/core-concepts/data-flow-explainer","id":"learn/core-concepts/data-flow-explainer","title":"Data Flow Explainer","description":"This explainer walks through how data flow is established in an OpenZiti network.","source":"@site/docs/learn/core-concepts/data-flow-explainer.md","sourceDirName":"learn/core-concepts","slug":"/learn/core-concepts/data-flow-explainer","permalink":"/docs/learn/core-concepts/data-flow-explainer","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/core-concepts/data-flow-explainer.md","tags":[],"version":"current","sidebarPosition":30,"frontMatter":{"title":"Data Flow Explainer","sidebar_position":30},"sidebar":"docsSidebar","previous":{"title":"Network Access","permalink":"/docs/learn/core-concepts/zero-trust-models/ztna"},"next":{"title":"Ziti Security","permalink":"/docs/learn/core-concepts/security/overview"}},{"unversionedId":"learn/core-concepts/identities/creating","id":"learn/core-concepts/identities/creating","title":"Creating","description":"Creating an Identity","source":"@site/docs/learn/core-concepts/identities/10-creating.mdx","sourceDirName":"learn/core-concepts/identities","slug":"/learn/core-concepts/identities/creating","permalink":"/docs/learn/core-concepts/identities/creating","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/core-concepts/identities/10-creating.mdx","tags":[],"version":"current","sidebarPosition":10,"frontMatter":{"title":"Creating"},"sidebar":"docsSidebar","previous":{"title":"Ziti Identities","permalink":"/docs/learn/core-concepts/identities/overview"},"next":{"title":"Enrolling","permalink":"/docs/learn/core-concepts/identities/enrolling"}},{"unversionedId":"learn/core-concepts/identities/enrolling","id":"learn/core-concepts/identities/enrolling","title":"Enrolling","description":"Enrolling an Identity","source":"@site/docs/learn/core-concepts/identities/20-enrolling.md","sourceDirName":"learn/core-concepts/identities","slug":"/learn/core-concepts/identities/enrolling","permalink":"/docs/learn/core-concepts/identities/enrolling","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/core-concepts/identities/20-enrolling.md","tags":[],"version":"current","sidebarPosition":20,"frontMatter":{"title":"Enrolling"},"sidebar":"docsSidebar","previous":{"title":"Creating","permalink":"/docs/learn/core-concepts/identities/creating"},"next":{"title":"Ziti Services","permalink":"/docs/learn/core-concepts/services/overview"}},{"unversionedId":"learn/core-concepts/identities/overview","id":"learn/core-concepts/identities/overview","title":"Ziti Identities","description":"Ziti is built on the foundation of zero trust. A solid pillar of that foundation requires that all connections in a","source":"@site/docs/learn/core-concepts/identities/overview.mdx","sourceDirName":"learn/core-concepts/identities","slug":"/learn/core-concepts/identities/overview","permalink":"/docs/learn/core-concepts/identities/overview","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/core-concepts/identities/overview.mdx","tags":[],"version":"current","frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Service Dial","permalink":"/docs/learn/core-concepts/clients/process-sequences/ServiceDial"},"next":{"title":"Creating","permalink":"/docs/learn/core-concepts/identities/creating"}},{"unversionedId":"learn/core-concepts/metrics/available-metrics","id":"learn/core-concepts/metrics/available-metrics","title":"Available Metrics","description":"Metrics are reported to the log files, locale in /var/log/ziti by default.  There are 2 primary log files for metrics, utilization-metrics.log and utilization-usage.log.  These logs may be shipped to various reporting systems for easier visibility and monitoring.","source":"@site/docs/learn/core-concepts/metrics/15-available-metrics.md","sourceDirName":"learn/core-concepts/metrics","slug":"/learn/core-concepts/metrics/available-metrics","permalink":"/docs/learn/core-concepts/metrics/available-metrics","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/core-concepts/metrics/15-available-metrics.md","tags":[],"version":"current","sidebarPosition":15,"frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Types","permalink":"/docs/learn/core-concepts/metrics/types"},"next":{"title":"File Reporter","permalink":"/docs/learn/core-concepts/metrics/file"}},{"unversionedId":"learn/core-concepts/metrics/file","id":"learn/core-concepts/metrics/file","title":"File Reporter","description":"The controller event system can write metrics to a file for direct viewing or post-processing into a metrics system of your choice.","source":"@site/docs/learn/core-concepts/metrics/20-file.mdx","sourceDirName":"learn/core-concepts/metrics","slug":"/learn/core-concepts/metrics/file","permalink":"/docs/learn/core-concepts/metrics/file","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/core-concepts/metrics/20-file.mdx","tags":[],"version":"current","sidebarPosition":20,"frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Available Metrics","permalink":"/docs/learn/core-concepts/metrics/available-metrics"},"next":{"title":"On Demand","permalink":"/docs/learn/core-concepts/metrics/inspect"}},{"unversionedId":"learn/core-concepts/metrics/grafana","id":"learn/core-concepts/metrics/grafana","title":"Using Grafana","description":"Grafana has a marvelous datasource type called Infinity.  It is highly flexible in it\'s own right, and the numerous options it provides to configure additional funcitonality makes it a great choice for interacting with APIs for various purposes.  In this case, I am using it to access the OpenZiti management API to retrieve reference information for transforming the zitiIds (Identity, Edge Router, etc.) to their human readable names.","source":"@site/docs/learn/core-concepts/metrics/50-grafana.md","sourceDirName":"learn/core-concepts/metrics","slug":"/learn/core-concepts/metrics/grafana","permalink":"/docs/learn/core-concepts/metrics/grafana","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/core-concepts/metrics/50-grafana.md","tags":[],"version":"current","sidebarPosition":50,"frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Prometheus Endpoint","permalink":"/docs/learn/core-concepts/metrics/prometheus"},"next":{"title":"Sequence Diagram","permalink":"/docs/learn/core-concepts/metrics/sequence-diagram"}},{"unversionedId":"learn/core-concepts/metrics/inspect","id":"learn/core-concepts/metrics/inspect","title":"On Demand","description":"The controller supports pulling metrics on demand via the inspections framework.","source":"@site/docs/learn/core-concepts/metrics/30-inspect.md","sourceDirName":"learn/core-concepts/metrics","slug":"/learn/core-concepts/metrics/inspect","permalink":"/docs/learn/core-concepts/metrics/inspect","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/core-concepts/metrics/30-inspect.md","tags":[],"version":"current","sidebarPosition":30,"frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"File Reporter","permalink":"/docs/learn/core-concepts/metrics/file"},"next":{"title":"Prometheus Endpoint","permalink":"/docs/learn/core-concepts/metrics/prometheus"}},{"unversionedId":"learn/core-concepts/metrics/overview","id":"learn/core-concepts/metrics/overview","title":"Overview","description":"Ziti can report system metrics in a few different ways","source":"@site/docs/learn/core-concepts/metrics/01-overview.md","sourceDirName":"learn/core-concepts/metrics","slug":"/learn/core-concepts/metrics/overview","permalink":"/docs/learn/core-concepts/metrics/overview","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/core-concepts/metrics/01-overview.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Managing","permalink":"/docs/learn/core-concepts/config-store/managing"},"next":{"title":"Types","permalink":"/docs/learn/core-concepts/metrics/types"}},{"unversionedId":"learn/core-concepts/metrics/prometheus","id":"learn/core-concepts/metrics/prometheus","title":"Prometheus Endpoint","description":"The controller can expose a /metrics endpoint that serves network metrics in the Prometheus text exposition format.","source":"@site/docs/learn/core-concepts/metrics/40-prometheus.md","sourceDirName":"learn/core-concepts/metrics","slug":"/learn/core-concepts/metrics/prometheus","permalink":"/docs/learn/core-concepts/metrics/prometheus","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/core-concepts/metrics/40-prometheus.md","tags":[],"version":"current","sidebarPosition":40,"frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"On Demand","permalink":"/docs/learn/core-concepts/metrics/inspect"},"next":{"title":"Using Grafana","permalink":"/docs/learn/core-concepts/metrics/grafana"}},{"unversionedId":"learn/core-concepts/metrics/sequence-diagram","id":"learn/core-concepts/metrics/sequence-diagram","title":"Sequence Diagram","description":"OpenZiti systems provide a wide range of metrics for the monitoring of the network services, endpoints, and processes.  Some of the various metrics are visualized below to understand where they fall and what they measure in a network instance.  The bulk of the remaining metrics are measuring processes within the control plane, rather than network operation.","source":"@site/docs/learn/core-concepts/metrics/80-sequence-diagram.md","sourceDirName":"learn/core-concepts/metrics","slug":"/learn/core-concepts/metrics/sequence-diagram","permalink":"/docs/learn/core-concepts/metrics/sequence-diagram","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/core-concepts/metrics/80-sequence-diagram.md","tags":[],"version":"current","sidebarPosition":80,"frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Using Grafana","permalink":"/docs/learn/core-concepts/metrics/grafana"},"next":{"title":"Zero Trust Models","permalink":"/docs/learn/core-concepts/zero-trust-models/overview"}},{"unversionedId":"learn/core-concepts/metrics/types","id":"learn/core-concepts/metrics/types","title":"Types","description":"OpenZiti is instrumenting more code and adding additional metrics all of the time. This section will describe the different types of metrics that OpenZiti reports, not individual metric names.","source":"@site/docs/learn/core-concepts/metrics/05-types.md","sourceDirName":"learn/core-concepts/metrics","slug":"/learn/core-concepts/metrics/types","permalink":"/docs/learn/core-concepts/metrics/types","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/core-concepts/metrics/05-types.md","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Overview","permalink":"/docs/learn/core-concepts/metrics/overview"},"next":{"title":"Available Metrics","permalink":"/docs/learn/core-concepts/metrics/available-metrics"}},{"unversionedId":"learn/core-concepts/pki","id":"learn/core-concepts/pki","title":"Public Key Infrastructure (PKI)","description":"All networks leverage Public Key Infrastructure (PKI) to","source":"@site/docs/learn/core-concepts/pki.md","sourceDirName":"learn/core-concepts","slug":"/learn/core-concepts/pki","permalink":"/docs/learn/core-concepts/pki","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/core-concepts/pki.md","tags":[],"version":"current","frontMatter":{"id":"pki","title":"Public Key Infrastructure (PKI)","sidebar_label":"PKI"},"sidebar":"docsSidebar","previous":{"title":"Session Types","permalink":"/docs/learn/core-concepts/security/sessions"},"next":{"title":"Builtin Config Types","permalink":"/docs/reference/config-types/"}},{"unversionedId":"learn/core-concepts/security/authentication/api-session-certificates","id":"learn/core-concepts/security/authentication/api-session-certificates","title":"API Session Certificates","description":"API Session Certificates are ephemeral short-lived x509 certificates that can be created through a CSR process after","source":"@site/docs/learn/core-concepts/security/authentication/20-api-session-certificates.md","sourceDirName":"learn/core-concepts/security/authentication","slug":"/learn/core-concepts/security/authentication/api-session-certificates","permalink":"/docs/learn/core-concepts/security/authentication/api-session-certificates","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/core-concepts/security/authentication/20-api-session-certificates.md","tags":[],"version":"current","sidebarPosition":20,"frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"3rd Party CAs","permalink":"/docs/learn/core-concepts/security/authentication/third-party-cas"},"next":{"title":"Authentication Policies","permalink":"/docs/learn/core-concepts/security/authentication/authentication-policies"}},{"unversionedId":"learn/core-concepts/security/authentication/auth","id":"learn/core-concepts/security/authentication/auth","title":"Authentication","description":"Authentication in Ziti Edge occurs when a client wishes to interact with the Ziti Edge Controller. Authentication","source":"@site/docs/learn/core-concepts/security/authentication/auth.md","sourceDirName":"learn/core-concepts/security/authentication","slug":"/learn/core-concepts/security/authentication/auth","permalink":"/docs/learn/core-concepts/security/authentication/auth","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/core-concepts/security/authentication/auth.md","tags":[],"version":"current","frontMatter":{"title":"Authentication"},"sidebar":"docsSidebar","previous":{"title":"Ziti Security","permalink":"/docs/learn/core-concepts/security/overview"},"next":{"title":"Password Management","permalink":"/docs/learn/core-concepts/security/authentication/password-management"}},{"unversionedId":"learn/core-concepts/security/authentication/authentication-policies","id":"learn/core-concepts/security/authentication/authentication-policies","title":"Authentication Policies","description":"Authentication Policies restrict the primary authentication methods available to","source":"@site/docs/learn/core-concepts/security/authentication/30-authentication-policies.md","sourceDirName":"learn/core-concepts/security/authentication","slug":"/learn/core-concepts/security/authentication/authentication-policies","permalink":"/docs/learn/core-concepts/security/authentication/authentication-policies","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/core-concepts/security/authentication/30-authentication-policies.md","tags":[],"version":"current","sidebarPosition":30,"frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"API Session Certificates","permalink":"/docs/learn/core-concepts/security/authentication/api-session-certificates"},"next":{"title":"Certificate Management","permalink":"/docs/learn/core-concepts/security/authentication/certificate-management"}},{"unversionedId":"learn/core-concepts/security/authentication/certificate-management","id":"learn/core-concepts/security/authentication/certificate-management","title":"Certificate Management","description":"Clients, routers, and the controller use x509 client and server certificates. Client authentication","source":"@site/docs/learn/core-concepts/security/authentication/40-certificate-management.md","sourceDirName":"learn/core-concepts/security/authentication","slug":"/learn/core-concepts/security/authentication/certificate-management","permalink":"/docs/learn/core-concepts/security/authentication/certificate-management","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/core-concepts/security/authentication/40-certificate-management.md","tags":[],"version":"current","sidebarPosition":40,"frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Authentication Policies","permalink":"/docs/learn/core-concepts/security/authentication/authentication-policies"},"next":{"title":"External JWT Signers","permalink":"/docs/learn/core-concepts/security/authentication/external-jwt-signers"}},{"unversionedId":"learn/core-concepts/security/authentication/external-jwt-signers","id":"learn/core-concepts/security/authentication/external-jwt-signers","title":"External JWT Signers","description":"External JWT Signers allow external identity providers to facilitate authentication with a Ziti network. External","source":"@site/docs/learn/core-concepts/security/authentication/50-external-jwt-signers.md","sourceDirName":"learn/core-concepts/security/authentication","slug":"/learn/core-concepts/security/authentication/external-jwt-signers","permalink":"/docs/learn/core-concepts/security/authentication/external-jwt-signers","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/core-concepts/security/authentication/50-external-jwt-signers.md","tags":[],"version":"current","sidebarPosition":50,"frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Certificate Management","permalink":"/docs/learn/core-concepts/security/authentication/certificate-management"},"next":{"title":"Identities","permalink":"/docs/learn/core-concepts/security/authentication/identities"}},{"unversionedId":"learn/core-concepts/security/authentication/identities","id":"learn/core-concepts/security/authentication/identities","title":"Identities","description":"Ziti Edge defines a top level entity called an Identity. An Identity is a security principal that can bind (host) or","source":"@site/docs/learn/core-concepts/security/authentication/60-identities.md","sourceDirName":"learn/core-concepts/security/authentication","slug":"/learn/core-concepts/security/authentication/identities","permalink":"/docs/learn/core-concepts/security/authentication/identities","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/core-concepts/security/authentication/60-identities.md","tags":[],"version":"current","sidebarPosition":60,"frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"External JWT Signers","permalink":"/docs/learn/core-concepts/security/authentication/external-jwt-signers"},"next":{"title":"MFA TOTP","permalink":"/docs/learn/core-concepts/security/authentication/totp"}},{"unversionedId":"learn/core-concepts/security/authentication/password-management","id":"learn/core-concepts/security/authentication/password-management","title":"Password Management","description":"For identities using username password (UPDB) authenticators the following actions are supported:","source":"@site/docs/learn/core-concepts/security/authentication/5-password-management.md","sourceDirName":"learn/core-concepts/security/authentication","slug":"/learn/core-concepts/security/authentication/password-management","permalink":"/docs/learn/core-concepts/security/authentication/password-management","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/core-concepts/security/authentication/5-password-management.md","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Authentication","permalink":"/docs/learn/core-concepts/security/authentication/auth"},"next":{"title":"3rd Party CAs","permalink":"/docs/learn/core-concepts/security/authentication/third-party-cas"}},{"unversionedId":"learn/core-concepts/security/authentication/third-party-cas","id":"learn/core-concepts/security/authentication/third-party-cas","title":"3rd Party CAs","description":"3rd Party CAs allow external private key infrastructures (PKIs) to be imported into Ziti and used for client enrollment","source":"@site/docs/learn/core-concepts/security/authentication/10-third-party-cas.md","sourceDirName":"learn/core-concepts/security/authentication","slug":"/learn/core-concepts/security/authentication/third-party-cas","permalink":"/docs/learn/core-concepts/security/authentication/third-party-cas","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/core-concepts/security/authentication/10-third-party-cas.md","tags":[],"version":"current","sidebarPosition":10,"frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Password Management","permalink":"/docs/learn/core-concepts/security/authentication/password-management"},"next":{"title":"API Session Certificates","permalink":"/docs/learn/core-concepts/security/authentication/api-session-certificates"}},{"unversionedId":"learn/core-concepts/security/authentication/totp","id":"learn/core-concepts/security/authentication/totp","title":"MFA TOTP","description":"Ziti authentication allows for n-factors of authentication - meaning that it is possible to support 1FA, 2FA, ...nFA","source":"@site/docs/learn/core-concepts/security/authentication/70-totp.md","sourceDirName":"learn/core-concepts/security/authentication","slug":"/learn/core-concepts/security/authentication/totp","permalink":"/docs/learn/core-concepts/security/authentication/totp","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/core-concepts/security/authentication/70-totp.md","tags":[],"version":"current","sidebarPosition":70,"frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Identities","permalink":"/docs/learn/core-concepts/security/authentication/identities"},"next":{"title":"Authorization","permalink":"/docs/learn/core-concepts/security/authorization/auth"}},{"unversionedId":"learn/core-concepts/security/authorization/auth","id":"learn/core-concepts/security/authorization/auth","title":"Authorization","description":"After becoming fully authenticated, an identity may now","source":"@site/docs/learn/core-concepts/security/authorization/auth.md","sourceDirName":"learn/core-concepts/security/authorization","slug":"/learn/core-concepts/security/authorization/auth","permalink":"/docs/learn/core-concepts/security/authorization/auth","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/core-concepts/security/authorization/auth.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"MFA TOTP","permalink":"/docs/learn/core-concepts/security/authentication/totp"},"next":{"title":"Policies","permalink":"/docs/learn/core-concepts/security/authorization/policies/overview"}},{"unversionedId":"learn/core-concepts/security/authorization/policies/creating-edge-router-policies","id":"learn/core-concepts/security/authorization/policies/creating-edge-router-policies","title":"creating-edge-router-policies","description":"","source":"@site/docs/learn/core-concepts/security/authorization/policies/creating-edge-router-policies.mdx","sourceDirName":"learn/core-concepts/security/authorization/policies","slug":"/learn/core-concepts/security/authorization/policies/creating-edge-router-policies","permalink":"/docs/learn/core-concepts/security/authorization/policies/creating-edge-router-policies","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/core-concepts/security/authorization/policies/creating-edge-router-policies.mdx","tags":[],"version":"current","frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Policies","permalink":"/docs/learn/core-concepts/security/authorization/policies/overview"},"next":{"title":"creating-service-edge-router-policies","permalink":"/docs/learn/core-concepts/security/authorization/policies/creating-service-edge-router-policies"}},{"unversionedId":"learn/core-concepts/security/authorization/policies/creating-service-edge-router-policies","id":"learn/core-concepts/security/authorization/policies/creating-service-edge-router-policies","title":"creating-service-edge-router-policies","description":"","source":"@site/docs/learn/core-concepts/security/authorization/policies/creating-service-edge-router-policies.mdx","sourceDirName":"learn/core-concepts/security/authorization/policies","slug":"/learn/core-concepts/security/authorization/policies/creating-service-edge-router-policies","permalink":"/docs/learn/core-concepts/security/authorization/policies/creating-service-edge-router-policies","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/core-concepts/security/authorization/policies/creating-service-edge-router-policies.mdx","tags":[],"version":"current","frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"creating-edge-router-policies","permalink":"/docs/learn/core-concepts/security/authorization/policies/creating-edge-router-policies"},"next":{"title":"creating-service-policies","permalink":"/docs/learn/core-concepts/security/authorization/policies/creating-service-policies"}},{"unversionedId":"learn/core-concepts/security/authorization/policies/creating-service-policies","id":"learn/core-concepts/security/authorization/policies/creating-service-policies","title":"creating-service-policies","description":"","source":"@site/docs/learn/core-concepts/security/authorization/policies/creating-service-policies.mdx","sourceDirName":"learn/core-concepts/security/authorization/policies","slug":"/learn/core-concepts/security/authorization/policies/creating-service-policies","permalink":"/docs/learn/core-concepts/security/authorization/policies/creating-service-policies","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/core-concepts/security/authorization/policies/creating-service-policies.mdx","tags":[],"version":"current","frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"creating-service-edge-router-policies","permalink":"/docs/learn/core-concepts/security/authorization/policies/creating-service-edge-router-policies"},"next":{"title":"Posture Checks","permalink":"/docs/learn/core-concepts/security/authorization/posture-checks"}},{"unversionedId":"learn/core-concepts/security/authorization/policies/overview","id":"learn/core-concepts/security/authorization/policies/overview","title":"Policies","description":"Ziti policies control which identities can access or host which services","source":"@site/docs/learn/core-concepts/security/authorization/policies/overview.mdx","sourceDirName":"learn/core-concepts/security/authorization/policies","slug":"/learn/core-concepts/security/authorization/policies/overview","permalink":"/docs/learn/core-concepts/security/authorization/policies/overview","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/core-concepts/security/authorization/policies/overview.mdx","tags":[],"version":"current","frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Authorization","permalink":"/docs/learn/core-concepts/security/authorization/auth"},"next":{"title":"creating-edge-router-policies","permalink":"/docs/learn/core-concepts/security/authorization/policies/creating-edge-router-policies"}},{"unversionedId":"learn/core-concepts/security/authorization/posture-checks","id":"learn/core-concepts/security/authorization/posture-checks","title":"Posture Checks","description":"Posture Checks represent environmental state (posture) that an endpoint must be in, in order for a Service Policy to","source":"@site/docs/learn/core-concepts/security/authorization/posture-checks.md","sourceDirName":"learn/core-concepts/security/authorization","slug":"/learn/core-concepts/security/authorization/posture-checks","permalink":"/docs/learn/core-concepts/security/authorization/posture-checks","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/core-concepts/security/authorization/posture-checks.md","tags":[],"version":"current","frontMatter":{"uid":"zitiSecurityPostureChecks"},"sidebar":"docsSidebar","previous":{"title":"creating-service-policies","permalink":"/docs/learn/core-concepts/security/authorization/policies/creating-service-policies"},"next":{"title":"Session Diagram","permalink":"/docs/learn/core-concepts/security/SessionsAndConnections"}},{"unversionedId":"learn/core-concepts/security/connection-security","id":"learn/core-concepts/security/connection-security","title":"Connection Security","description":"Ziti networks use robust modern cryptography and security mechanisms. Each component within a Ziti network uses","source":"@site/docs/learn/core-concepts/security/connection-security.md","sourceDirName":"learn/core-concepts/security","slug":"/learn/core-concepts/security/connection-security","permalink":"/docs/learn/core-concepts/security/connection-security","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/core-concepts/security/connection-security.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Session Diagram","permalink":"/docs/learn/core-concepts/security/SessionsAndConnections"},"next":{"title":"Enrollment","permalink":"/docs/learn/core-concepts/security/enrollment"}},{"unversionedId":"learn/core-concepts/security/enrollment","id":"learn/core-concepts/security/enrollment","title":"Enrollment","description":"Enrollment is the process of some Edge client or edge router associating itself with a Ziti network. Client enrollment","source":"@site/docs/learn/core-concepts/security/enrollment.md","sourceDirName":"learn/core-concepts/security","slug":"/learn/core-concepts/security/enrollment","permalink":"/docs/learn/core-concepts/security/enrollment","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/core-concepts/security/enrollment.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Connection Security","permalink":"/docs/learn/core-concepts/security/connection-security"},"next":{"title":"Session Types","permalink":"/docs/learn/core-concepts/security/sessions"}},{"unversionedId":"learn/core-concepts/security/overview","id":"learn/core-concepts/security/overview","title":"Ziti Security","description":"A network\'s security setup is defined by several entities defined in the edge management API. The following","source":"@site/docs/learn/core-concepts/security/overview.md","sourceDirName":"learn/core-concepts/security","slug":"/learn/core-concepts/security/overview","permalink":"/docs/learn/core-concepts/security/overview","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/core-concepts/security/overview.md","tags":[],"version":"current","frontMatter":{"title":"Ziti Security"},"sidebar":"docsSidebar","previous":{"title":"Data Flow Explainer","permalink":"/docs/learn/core-concepts/data-flow-explainer"},"next":{"title":"Authentication","permalink":"/docs/learn/core-concepts/security/authentication/auth"}},{"unversionedId":"learn/core-concepts/security/sessions","id":"learn/core-concepts/security/sessions","title":"Session Types","description":"Ziti has API Session and Session types.","source":"@site/docs/learn/core-concepts/security/sessions.md","sourceDirName":"learn/core-concepts/security","slug":"/learn/core-concepts/security/sessions","permalink":"/docs/learn/core-concepts/security/sessions","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/core-concepts/security/sessions.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Enrollment","permalink":"/docs/learn/core-concepts/security/enrollment"},"next":{"title":"PKI","permalink":"/docs/learn/core-concepts/pki"}},{"unversionedId":"learn/core-concepts/security/SessionsAndConnections","id":"learn/core-concepts/security/SessionsAndConnections","title":"Sessions and Connections Sequence Diagram","description":"OpenZiti has a number of different connection and session types.  It is important to understand the different scopes and uses of these connections in working with the project, developing, operating, and most importantly, troubleshooting.","source":"@site/docs/learn/core-concepts/security/SessionsAndConnections.md","sourceDirName":"learn/core-concepts/security","slug":"/learn/core-concepts/security/SessionsAndConnections","permalink":"/docs/learn/core-concepts/security/SessionsAndConnections","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/core-concepts/security/SessionsAndConnections.md","tags":[],"version":"current","frontMatter":{"sidebar_label":"Session Diagram"},"sidebar":"docsSidebar","previous":{"title":"Posture Checks","permalink":"/docs/learn/core-concepts/security/authorization/posture-checks"},"next":{"title":"Connection Security","permalink":"/docs/learn/core-concepts/security/connection-security"}},{"unversionedId":"learn/core-concepts/services/overview","id":"learn/core-concepts/services/overview","title":"Ziti Services","description":"The primary strategy assumes that one function of Ziti is providing access to \\"services\\". A service encapsulates the definition of any","source":"@site/docs/learn/core-concepts/services/overview.mdx","sourceDirName":"learn/core-concepts/services","slug":"/learn/core-concepts/services/overview","permalink":"/docs/learn/core-concepts/services/overview","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/core-concepts/services/overview.mdx","tags":[],"version":"current","frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Enrolling","permalink":"/docs/learn/core-concepts/identities/enrolling"},"next":{"title":"Service Configurations","permalink":"/docs/learn/core-concepts/config-store/overview"}},{"unversionedId":"learn/core-concepts/zero-trust-models/overview","id":"learn/core-concepts/zero-trust-models/overview","title":"Zero Trust Models","description":"All OpenZiti deployment architectures can be categorized by three types of Zero Trust Edge Access Security Models. Many of them will be overlapping at least 2 of these initially, especially the brownfield deployments.  That gives customers a great deal of flexibility in terms of deployment options depending on where they are in the journey to eventually reach the ZiTi Application Access Security Model, i.e most secured.","source":"@site/docs/learn/core-concepts/zero-trust-models/01-overview.md","sourceDirName":"learn/core-concepts/zero-trust-models","slug":"/learn/core-concepts/zero-trust-models/overview","permalink":"/docs/learn/core-concepts/zero-trust-models/overview","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/core-concepts/zero-trust-models/01-overview.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"id":"overview","title":"Zero Trust Models","hide_table_of_contents":true},"sidebar":"docsSidebar","previous":{"title":"Sequence Diagram","permalink":"/docs/learn/core-concepts/metrics/sequence-diagram"},"next":{"title":"App Access","permalink":"/docs/learn/core-concepts/zero-trust-models/ztaa"}},{"unversionedId":"learn/core-concepts/zero-trust-models/ztaa","id":"learn/core-concepts/zero-trust-models/ztaa","title":"Application Access Model","description":"This article describes the various edge deployments of ZiTi App Access. In all cases, the Controller and at least 2 Public Edge Routers are to be deployed for redundancy. The Ziti Fabric connections are established between all Edge Routers but not Clients/SDKs. The Public Edge Routers would provide connection between Private Edge Routers and/or Clients/SDKs.","source":"@site/docs/learn/core-concepts/zero-trust-models/02-ztaa.md","sourceDirName":"learn/core-concepts/zero-trust-models","slug":"/learn/core-concepts/zero-trust-models/ztaa","permalink":"/docs/learn/core-concepts/zero-trust-models/ztaa","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/core-concepts/zero-trust-models/02-ztaa.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"title":"Application Access Model","sidebar_label":"App Access","hide_table_of_contents":true},"sidebar":"docsSidebar","previous":{"title":"Zero Trust Models","permalink":"/docs/learn/core-concepts/zero-trust-models/overview"},"next":{"title":"Host Access","permalink":"/docs/learn/core-concepts/zero-trust-models/ztha"}},{"unversionedId":"learn/core-concepts/zero-trust-models/ztha","id":"learn/core-concepts/zero-trust-models/ztha","title":"Host Access Model","description":"This article describes the various edge deployments of ZiTi Host Access. In all cases, the Controller and at least 2 Public Edge Routers are to be deployed for redundancy. The Ziti Fabric connections are established between all Edge Routers but not Clients/SDKs. The Public Edge Routers would provide connection between Private Edge Routers and/or Clients/SDKs.","source":"@site/docs/learn/core-concepts/zero-trust-models/03-ztha.md","sourceDirName":"learn/core-concepts/zero-trust-models","slug":"/learn/core-concepts/zero-trust-models/ztha","permalink":"/docs/learn/core-concepts/zero-trust-models/ztha","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/core-concepts/zero-trust-models/03-ztha.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"title":"Host Access Model","sidebar_label":"Host Access","hide_table_of_contents":true},"sidebar":"docsSidebar","previous":{"title":"App Access","permalink":"/docs/learn/core-concepts/zero-trust-models/ztaa"},"next":{"title":"Network Access","permalink":"/docs/learn/core-concepts/zero-trust-models/ztna"}},{"unversionedId":"learn/core-concepts/zero-trust-models/ztna","id":"learn/core-concepts/zero-trust-models/ztna","title":"Network Access Model","description":"This article describes the various edge deployments of ZiTi Network Access. In all cases, the Controller and at least 2 Public Edge Routers are to be deployed for redundancy. The Ziti Fabric connections are established between all Edge Routers but not Clients/SDKs. The Public Edge Routers would provide connection between Private Edge Routers and/or Clients/SDKs.","source":"@site/docs/learn/core-concepts/zero-trust-models/04-ztna.md","sourceDirName":"learn/core-concepts/zero-trust-models","slug":"/learn/core-concepts/zero-trust-models/ztna","permalink":"/docs/learn/core-concepts/zero-trust-models/ztna","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/core-concepts/zero-trust-models/04-ztna.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"title":"Network Access Model","sidebar_label":"Network Access","hide_table_of_contents":true},"sidebar":"docsSidebar","previous":{"title":"Host Access","permalink":"/docs/learn/core-concepts/zero-trust-models/ztha"},"next":{"title":"Data Flow Explainer","permalink":"/docs/learn/core-concepts/data-flow-explainer"}},{"unversionedId":"learn/introduction/components","id":"learn/introduction/components","title":"Components","description":"","source":"@site/docs/learn/introduction/03-components.md","sourceDirName":"learn/introduction","slug":"/learn/introduction/components","permalink":"/docs/learn/introduction/components","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/introduction/03-components.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"id":"components","title":"Components"},"sidebar":"docsSidebar","previous":{"title":"What is OpenZiti?","permalink":"/docs/learn/introduction/"},"next":{"title":"Key Concepts","permalink":"/docs/learn/introduction/key_concepts"}},{"unversionedId":"learn/introduction/features","id":"learn/introduction/features","title":"Features","description":"OpenZiti superpowers are distinguished between security, performance/reliability, and ease of management.","source":"@site/docs/learn/introduction/20-features.md","sourceDirName":"learn/introduction","slug":"/learn/introduction/features","permalink":"/docs/learn/introduction/features","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/introduction/20-features.md","tags":[],"version":"current","sidebarPosition":20,"frontMatter":{"id":"features","title":"Features"},"sidebar":"docsSidebar","previous":{"title":"Key Concepts","permalink":"/docs/learn/introduction/key_concepts"},"next":{"title":"It\'s All Software","permalink":"/docs/learn/introduction/openziti-is-software"}},{"unversionedId":"learn/introduction/index","id":"learn/introduction/index","title":"What is OpenZiti?","description":"An Example of an OpenZiti Overlay Network","source":"@site/docs/learn/introduction/index.mdx","sourceDirName":"learn/introduction","slug":"/learn/introduction/","permalink":"/docs/learn/introduction/","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/introduction/index.mdx","tags":[],"version":"current","frontMatter":{"title":"What is OpenZiti?","hide_table_of_contents":true},"sidebar":"docsSidebar","next":{"title":"Components","permalink":"/docs/learn/introduction/components"}},{"unversionedId":"learn/introduction/key_concepts","id":"learn/introduction/key_concepts","title":"Key Concepts","description":"","source":"@site/docs/learn/introduction/05-concepts.md","sourceDirName":"learn/introduction","slug":"/learn/introduction/key_concepts","permalink":"/docs/learn/introduction/key_concepts","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/introduction/05-concepts.md","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"id":"key_concepts","title":"Key Concepts"},"sidebar":"docsSidebar","previous":{"title":"Components","permalink":"/docs/learn/introduction/components"},"next":{"title":"Features","permalink":"/docs/learn/introduction/features"}},{"unversionedId":"learn/introduction/openziti-is-software","id":"learn/introduction/openziti-is-software","title":"It\'s All Software","description":"OpenZiti is software first and foremost. Moving at the speed of software is a vital characteristic of any","source":"@site/docs/learn/introduction/30-openziti-is-software.md","sourceDirName":"learn/introduction","slug":"/learn/introduction/openziti-is-software","permalink":"/docs/learn/introduction/openziti-is-software","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/introduction/30-openziti-is-software.md","tags":[],"version":"current","sidebarPosition":30,"frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Features","permalink":"/docs/learn/introduction/features"},"next":{"title":"Start Cooking With Ziti","permalink":"/docs/learn/quickstarts/"}},{"unversionedId":"learn/quickstarts/browzer/chrome-origin-trials","id":"learn/quickstarts/browzer/chrome-origin-trials","title":"Chrome Origin Trials","description":"BrowZer uses JSPI, or WebAssembly JSPI (JavaScript Promise Integration). This is","source":"@site/docs/learn/quickstarts/browzer/chrome-origin-trials.md","sourceDirName":"learn/quickstarts/browzer","slug":"/learn/quickstarts/browzer/chrome-origin-trials","permalink":"/docs/learn/quickstarts/browzer/chrome-origin-trials","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/quickstarts/browzer/chrome-origin-trials.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"BrowZer","permalink":"/docs/learn/quickstarts/browzer/"},"next":{"title":"Example Enabling BrowZer","permalink":"/docs/learn/quickstarts/browzer/example/"}},{"unversionedId":"learn/quickstarts/browzer/example/index","id":"learn/quickstarts/browzer/example/index","title":"Example Enabling BrowZer","description":"This page will demonstrate adding BrowZer to an existing network that was started using the","source":"@site/docs/learn/quickstarts/browzer/example/index.md","sourceDirName":"learn/quickstarts/browzer/example","slug":"/learn/quickstarts/browzer/example/","permalink":"/docs/learn/quickstarts/browzer/example/","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/quickstarts/browzer/example/index.md","tags":[],"version":"current","frontMatter":{"title":"Example Enabling BrowZer"},"sidebar":"docsSidebar","previous":{"title":"Chrome Origin Trials","permalink":"/docs/learn/quickstarts/browzer/chrome-origin-trials"},"next":{"title":"Starting With Services","permalink":"/docs/learn/quickstarts/services/"}},{"unversionedId":"learn/quickstarts/browzer/index","id":"learn/quickstarts/browzer/index","title":"BrowZer","description":"BrowZer is a set of technologies which is capable of bootstrapping zero trust connectivity entirely in a browser,","source":"@site/docs/learn/quickstarts/browzer/index.md","sourceDirName":"learn/quickstarts/browzer","slug":"/learn/quickstarts/browzer/","permalink":"/docs/learn/quickstarts/browzer/","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/quickstarts/browzer/index.md","tags":[],"version":"current","frontMatter":{"title":"BrowZer"},"sidebar":"docsSidebar","previous":{"title":"Console","permalink":"/docs/learn/quickstarts/zac/"},"next":{"title":"Chrome Origin Trials","permalink":"/docs/learn/quickstarts/browzer/chrome-origin-trials"}},{"unversionedId":"learn/quickstarts/network/help/change-admin-password","id":"learn/quickstarts/network/help/change-admin-password","title":"Change Password","description":"Follow these instructions to change your quickstart admin\'s password. A random password was generated for you when you ran expressInstall and saved in your *.env file as ZITIPWD. After changing the password, also change the value of ZITIPWD in ~/.ziti/quickstart/$(hostname -s)/$(hostname -s).env to match. This variable is used by the zitiLogin function.","source":"@site/docs/learn/quickstarts/network/help/change-admin-password.md","sourceDirName":"learn/quickstarts/network/help","slug":"/learn/quickstarts/network/help/change-admin-password","permalink":"/docs/learn/quickstarts/network/help/change-admin-password","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/quickstarts/network/help/change-admin-password.md","tags":[],"version":"current","frontMatter":{"title":"Change Password"},"sidebar":"docsSidebar","previous":{"title":"Help","permalink":"/docs/category/help"},"next":{"title":"Quickstart Walkthrough","permalink":"/docs/learn/quickstarts/network/help/quickstart-walkthrough"}},{"unversionedId":"learn/quickstarts/network/help/quickstart-walkthrough","id":"learn/quickstarts/network/help/quickstart-walkthrough","title":"Quickstart Walkthrough","description":"The following explains the steps that happen automatically when the expressInstall function is executed.","source":"@site/docs/learn/quickstarts/network/help/quickstart-walkthrough.md","sourceDirName":"learn/quickstarts/network/help","slug":"/learn/quickstarts/network/help/quickstart-walkthrough","permalink":"/docs/learn/quickstarts/network/help/quickstart-walkthrough","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/quickstarts/network/help/quickstart-walkthrough.md","tags":[],"version":"current","frontMatter":{"title":"Quickstart Walkthrough","id":"quickstart-walkthrough"},"sidebar":"docsSidebar","previous":{"title":"Change Password","permalink":"/docs/learn/quickstarts/network/help/change-admin-password"},"next":{"title":"Reset the Quickstart","permalink":"/docs/learn/quickstarts/network/help/reset-quickstart"}},{"unversionedId":"learn/quickstarts/network/help/reset-quickstart","id":"learn/quickstarts/network/help/reset-quickstart","title":"Reset the Quickstart","description":"You may want to re-run expressInstall with different parameters or because a readiness check failed. You could run it again with a new ZITI_HOME without changing the current installation or delete the directory and begin again with these steps:","source":"@site/docs/learn/quickstarts/network/help/reset-quickstart.md","sourceDirName":"learn/quickstarts/network/help","slug":"/learn/quickstarts/network/help/reset-quickstart","permalink":"/docs/learn/quickstarts/network/help/reset-quickstart","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/quickstarts/network/help/reset-quickstart.md","tags":[],"version":"current","frontMatter":{"title":"Reset the Quickstart","id":"reset-quickstart"},"sidebar":"docsSidebar","previous":{"title":"Quickstart Walkthrough","permalink":"/docs/learn/quickstarts/network/help/quickstart-walkthrough"},"next":{"title":"Upgrade a Quickstart Network","permalink":"/docs/learn/quickstarts/network/help/upgrade-quickstart-network"}},{"unversionedId":"learn/quickstarts/network/help/upgrade-quickstart-network","id":"learn/quickstarts/network/help/upgrade-quickstart-network","title":"Upgrade a Quickstart Network","description":"This document explains the process for backing up, and upgrading your controller and router(s).","source":"@site/docs/learn/quickstarts/network/help/upgrade-quickstart-network.md","sourceDirName":"learn/quickstarts/network/help","slug":"/learn/quickstarts/network/help/upgrade-quickstart-network","permalink":"/docs/learn/quickstarts/network/help/upgrade-quickstart-network","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/quickstarts/network/help/upgrade-quickstart-network.md","tags":[],"version":"current","frontMatter":{"title":"Upgrade a Quickstart Network","id":"upgrade-quickstart-network"},"sidebar":"docsSidebar","previous":{"title":"Reset the Quickstart","permalink":"/docs/learn/quickstarts/network/help/reset-quickstart"},"next":{"title":"Console","permalink":"/docs/learn/quickstarts/zac/"}},{"unversionedId":"learn/quickstarts/network/hosted","id":"learn/quickstarts/network/hosted","title":"Host OpenZiti Anywhere","description":"You can absolutely choose to host your network anywhere you like.","source":"@site/docs/learn/quickstarts/network/hosted.md","sourceDirName":"learn/quickstarts/network","slug":"/learn/quickstarts/network/hosted","permalink":"/docs/learn/quickstarts/network/hosted","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/quickstarts/network/hosted.md","tags":[],"version":"current","sidebarPosition":60,"frontMatter":{"sidebar_position":60},"sidebar":"docsSidebar","previous":{"title":"Local - Docker Compose","permalink":"/docs/learn/quickstarts/network/local-docker-compose"},"next":{"title":"Kubernetes","permalink":"/docs/learn/quickstarts/network/local-kubernetes"}},{"unversionedId":"learn/quickstarts/network/local-docker-compose","id":"learn/quickstarts/network/local-docker-compose","title":"Local - Docker Compose","description":"If you are not familiar with it, Docker Compose is a tool for defining and running","source":"@site/docs/learn/quickstarts/network/local-docker-compose.md","sourceDirName":"learn/quickstarts/network","slug":"/learn/quickstarts/network/local-docker-compose","permalink":"/docs/learn/quickstarts/network/local-docker-compose","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/quickstarts/network/local-docker-compose.md","tags":[],"version":"current","sidebarPosition":50,"frontMatter":{"sidebar_position":50},"sidebar":"docsSidebar","previous":{"title":"Local - With Docker","permalink":"/docs/learn/quickstarts/network/local-with-docker"},"next":{"title":"Host OpenZiti Anywhere","permalink":"/docs/learn/quickstarts/network/hosted"}},{"unversionedId":"learn/quickstarts/network/local-kubernetes","id":"learn/quickstarts/network/local-kubernetes","title":"Kubernetes Quickstart","description":"minikube quickly sets up a local Kubernetes cluster on macOS, Linux, or Windows (WSL). This quickstart is a great way to explore running your own controller, Router, and Console.","source":"@site/docs/learn/quickstarts/network/local-kubernetes.md","sourceDirName":"learn/quickstarts/network","slug":"/learn/quickstarts/network/local-kubernetes","permalink":"/docs/learn/quickstarts/network/local-kubernetes","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/quickstarts/network/local-kubernetes.md","tags":[],"version":"current","sidebarPosition":60,"frontMatter":{"sidebar_position":60,"hide_table_of_contents":true,"sidebar_label":"Kubernetes","title":"Kubernetes Quickstart"},"sidebar":"docsSidebar","previous":{"title":"Host OpenZiti Anywhere","permalink":"/docs/learn/quickstarts/network/hosted"},"next":{"title":"Help","permalink":"/docs/category/help"}},{"unversionedId":"learn/quickstarts/network/local-no-docker","id":"learn/quickstarts/network/local-no-docker","title":"Local - No Docker","description":"This page will show you how to get your network up and running","source":"@site/docs/learn/quickstarts/network/local-no-docker.md","sourceDirName":"learn/quickstarts/network","slug":"/learn/quickstarts/network/local-no-docker","permalink":"/docs/learn/quickstarts/network/local-no-docker","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/quickstarts/network/local-no-docker.md","tags":[],"version":"current","sidebarPosition":30,"frontMatter":{"sidebar_position":30},"sidebar":"docsSidebar","previous":{"title":"Network","permalink":"/docs/category/network"},"next":{"title":"Local - With Docker","permalink":"/docs/learn/quickstarts/network/local-with-docker"}},{"unversionedId":"learn/quickstarts/network/local-with-docker","id":"learn/quickstarts/network/local-with-docker","title":"Local - With Docker","description":"Docker is a popular container engine, and many developers enjoy using solutions delivered via","source":"@site/docs/learn/quickstarts/network/local-with-docker.md","sourceDirName":"learn/quickstarts/network","slug":"/learn/quickstarts/network/local-with-docker","permalink":"/docs/learn/quickstarts/network/local-with-docker","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/quickstarts/network/local-with-docker.md","tags":[],"version":"current","sidebarPosition":40,"frontMatter":{"sidebar_position":40},"sidebar":"docsSidebar","previous":{"title":"Local - No Docker","permalink":"/docs/learn/quickstarts/network/local-no-docker"},"next":{"title":"Local - Docker Compose","permalink":"/docs/learn/quickstarts/network/local-docker-compose"}},{"unversionedId":"learn/quickstarts/quickstartOverview","id":"learn/quickstarts/quickstartOverview","title":"Start Cooking With Ziti","description":"Learn how to start integrating Zero Trust directly into your application! Explore our quickstarts and learn how to","source":"@site/docs/learn/quickstarts/quickstarts.md","sourceDirName":"learn/quickstarts","slug":"/learn/quickstarts/","permalink":"/docs/learn/quickstarts/","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/quickstarts/quickstarts.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3,"id":"quickstartOverview"},"sidebar":"docsSidebar","previous":{"title":"It\'s All Software","permalink":"/docs/learn/introduction/openziti-is-software"},"next":{"title":"Network","permalink":"/docs/category/network"}},{"unversionedId":"learn/quickstarts/services/index","id":"learn/quickstarts/services/index","title":"Starting With Services","description":"Once you have your zero trust overlay network in place and you want to start using it, you\'ll be wondering where to begin. You can start","source":"@site/docs/learn/quickstarts/services/index.md","sourceDirName":"learn/quickstarts/services","slug":"/learn/quickstarts/services/","permalink":"/docs/learn/quickstarts/services/","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/quickstarts/services/index.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Example Enabling BrowZer","permalink":"/docs/learn/quickstarts/browzer/example/"},"next":{"title":"Kubernetes Service","permalink":"/docs/learn/quickstarts/services/kubernetes-service"}},{"unversionedId":"learn/quickstarts/services/kubernetes-service","id":"learn/quickstarts/services/kubernetes-service","title":"Kubernetes Service","description":"This is a tutorial for tunneling a Kubernetes workload with OpenZiti.","source":"@site/docs/learn/quickstarts/services/kubernetes-service.md","sourceDirName":"learn/quickstarts/services","slug":"/learn/quickstarts/services/kubernetes-service","permalink":"/docs/learn/quickstarts/services/kubernetes-service","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/quickstarts/services/kubernetes-service.md","tags":[],"version":"current","frontMatter":{"title":"Kubernetes Service"},"sidebar":"docsSidebar","previous":{"title":"Starting With Services","permalink":"/docs/learn/quickstarts/services/"},"next":{"title":"Your First Service","permalink":"/docs/learn/quickstarts/services/ztha"}},{"unversionedId":"learn/quickstarts/services/ztha","id":"learn/quickstarts/services/ztha","title":"Your First Service","description":"This document will demonstrate how to successfully deploy and secure an existing, \\"brown field\\" application using OpenZiti. You want to","source":"@site/docs/learn/quickstarts/services/ztha.md","sourceDirName":"learn/quickstarts/services","slug":"/learn/quickstarts/services/ztha","permalink":"/docs/learn/quickstarts/services/ztha","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/quickstarts/services/ztha.md","tags":[],"version":"current","frontMatter":{"title":"Your First Service"},"sidebar":"docsSidebar","previous":{"title":"Kubernetes Service","permalink":"/docs/learn/quickstarts/services/kubernetes-service"},"next":{"title":"Core Concepts","permalink":"/docs/category/core-concepts"}},{"unversionedId":"learn/quickstarts/zac/index","id":"learn/quickstarts/zac/index","title":"Ziti Admin Console","description":"The Ziti Administration Console (ZAC) is a web UI provided by the OpenZiti project which will allow you to configure and","source":"@site/docs/learn/quickstarts/zac/index.md","sourceDirName":"learn/quickstarts/zac","slug":"/learn/quickstarts/zac/","permalink":"/docs/learn/quickstarts/zac/","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/quickstarts/zac/index.md","tags":[],"version":"current","frontMatter":{"title":"Ziti Admin Console","sidebar_label":"Console"},"sidebar":"docsSidebar","previous":{"title":"Upgrade a Quickstart Network","permalink":"/docs/learn/quickstarts/network/help/upgrade-quickstart-network"},"next":{"title":"BrowZer","permalink":"/docs/learn/quickstarts/browzer/"}},{"unversionedId":"reference/config-types/host.v1","id":"reference/config-types/host.v1","title":"The host.v1 Config Type","description":"The host.v1 configuration type defines how edge routers or tunnelers can make outgoing connections","source":"@site/docs/reference/config-types/host.v1.md","sourceDirName":"reference/config-types","slug":"/reference/config-types/host.v1","permalink":"/docs/reference/config-types/host.v1","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/reference/config-types/host.v1.md","tags":[],"version":"current","sidebarPosition":15,"frontMatter":{"sidebar_label":"host.v1","sidebar_position":15},"sidebar":"docsSidebar","previous":{"title":"Builtin Config Types","permalink":"/docs/reference/config-types/"},"next":{"title":"host.v2","permalink":"/docs/reference/config-types/host.v2"}},{"unversionedId":"reference/config-types/host.v2","id":"reference/config-types/host.v2","title":"The host.v2 Config Type","description":"The host.v2 configuration type defines how edge routers or tunnelers can make outgoing connections","source":"@site/docs/reference/config-types/host.v2.md","sourceDirName":"reference/config-types","slug":"/reference/config-types/host.v2","permalink":"/docs/reference/config-types/host.v2","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/reference/config-types/host.v2.md","tags":[],"version":"current","sidebarPosition":20,"frontMatter":{"sidebar_label":"host.v2","sidebar_position":20},"sidebar":"docsSidebar","previous":{"title":"host.v1","permalink":"/docs/reference/config-types/host.v1"},"next":{"title":"Overview","permalink":"/docs/reference/"}},{"unversionedId":"reference/config-types/index","id":"reference/config-types/index","title":"Builtin Config Types","description":"Overview","source":"@site/docs/reference/config-types/index.md","sourceDirName":"reference/config-types","slug":"/reference/config-types/","permalink":"/docs/reference/config-types/","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/reference/config-types/index.md","tags":[],"version":"current","sidebarPosition":10,"frontMatter":{"title":"Builtin Config Types","sidebar_position":10},"sidebar":"docsSidebar","previous":{"title":"PKI","permalink":"/docs/learn/core-concepts/pki"},"next":{"title":"host.v1","permalink":"/docs/reference/config-types/host.v1"}},{"unversionedId":"reference/configuration/controller","id":"reference/configuration/controller","title":"Controller Configuration Reference","description":"OpenZiti uses configuration files for controllers that are in the YAML format.","source":"@site/docs/reference/30-configuration/controller.md","sourceDirName":"reference/30-configuration","slug":"/reference/configuration/controller","permalink":"/docs/reference/configuration/controller","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/reference/30-configuration/controller.md","tags":[],"version":"current","sidebarPosition":20,"frontMatter":{"sidebar_label":"Controller","sidebar_position":20},"sidebar":"docsSidebar","previous":{"title":"Conventions","permalink":"/docs/reference/configuration/conventions"},"next":{"title":"Router","permalink":"/docs/reference/configuration/router"}},{"unversionedId":"reference/configuration/conventions","id":"reference/configuration/conventions","title":"Conventions","description":"The following conventions apply to multiple areas of the configuration files for routers and","source":"@site/docs/reference/30-configuration/conventions.md","sourceDirName":"reference/30-configuration","slug":"/reference/configuration/conventions","permalink":"/docs/reference/configuration/conventions","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/reference/30-configuration/conventions.md","tags":[],"version":"current","sidebarPosition":10,"frontMatter":{"sidebar_label":"Conventions","sidebar_position":10},"sidebar":"docsSidebar","previous":{"title":"NGINX Module","permalink":"/docs/reference/tunnelers/nginx"},"next":{"title":"Controller","permalink":"/docs/reference/configuration/controller"}},{"unversionedId":"reference/configuration/router","id":"reference/configuration/router","title":"Router Configuration Reference","description":"OpenZiti uses configuration files for controllers that are in the YAML format.","source":"@site/docs/reference/30-configuration/router.md","sourceDirName":"reference/30-configuration","slug":"/reference/configuration/router","permalink":"/docs/reference/configuration/router","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/reference/30-configuration/router.md","tags":[],"version":"current","sidebarPosition":30,"frontMatter":{"sidebar_label":"Router","sidebar_position":30},"sidebar":"docsSidebar","previous":{"title":"Controller","permalink":"/docs/reference/configuration/controller"},"next":{"title":"Logging","permalink":"/docs/reference/logging"}},{"unversionedId":"reference/developer/api/edge-client-reference","id":"reference/developer/api/edge-client-reference","title":"Edge Client API Reference","description":"","source":"@site/docs/reference/developer/api/01-edge-client-reference.mdx","sourceDirName":"reference/developer/api","slug":"/reference/developer/api/edge-client-reference","permalink":"/docs/reference/developer/api/edge-client-reference","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/reference/developer/api/01-edge-client-reference.mdx","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"title":"Edge Client API Reference","hide_table_of_contents":true},"sidebar":"docsSidebar","previous":{"title":"Edge APIs","permalink":"/docs/reference/developer/api/"},"next":{"title":"Edge Management API Reference","permalink":"/docs/reference/developer/api/edge-management-reference"}},{"unversionedId":"reference/developer/api/edge-management-reference","id":"reference/developer/api/edge-management-reference","title":"Edge Management API Reference","description":"","source":"@site/docs/reference/developer/api/02-edge-management-reference.mdx","sourceDirName":"reference/developer/api","slug":"/reference/developer/api/edge-management-reference","permalink":"/docs/reference/developer/api/edge-management-reference","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/reference/developer/api/02-edge-management-reference.mdx","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"title":"Edge Management API Reference","hide_table_of_contents":true},"sidebar":"docsSidebar","previous":{"title":"Edge Client API Reference","permalink":"/docs/reference/developer/api/edge-client-reference"},"next":{"title":"Fabric API","permalink":"/docs/reference/developer/api/fabric-api"}},{"unversionedId":"reference/developer/api/fabric-api","id":"reference/developer/api/fabric-api","title":"Fabric API","description":"The fabric management API /fabric/v1 is provided by the controller and consumed by administrative clients like the ziti fabric CLI. The API is enabled in the controller configuration by adding a fabric binding to a web listener. Both fabric and edge-management APIs are commonly bound to the same web listener because they are used together for Ziti network administration.","source":"@site/docs/reference/developer/api/fabric-api.md","sourceDirName":"reference/developer/api","slug":"/reference/developer/api/fabric-api","permalink":"/docs/reference/developer/api/fabric-api","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/reference/developer/api/fabric-api.md","tags":[],"version":"current","frontMatter":{"title":"Fabric API","position":90},"sidebar":"docsSidebar","previous":{"title":"Edge Management API Reference","permalink":"/docs/reference/developer/api/edge-management-reference"},"next":{"title":"Shared API Capabilities","permalink":"/docs/reference/developer/api/shared-api-capabilities"}},{"unversionedId":"reference/developer/api/index","id":"reference/developer/api/index","title":"Edge APIs","description":"Specifications & Documentation","source":"@site/docs/reference/developer/api/index.md","sourceDirName":"reference/developer/api","slug":"/reference/developer/api/","permalink":"/docs/reference/developer/api/","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/reference/developer/api/index.md","tags":[],"version":"current","frontMatter":{"title":"Edge APIs"},"sidebar":"docsSidebar","previous":{"title":"Ziti Developer Resources","permalink":"/docs/reference/developer/"},"next":{"title":"Edge Client API Reference","permalink":"/docs/reference/developer/api/edge-client-reference"}},{"unversionedId":"reference/developer/api/shared-api-capabilities","id":"reference/developer/api/shared-api-capabilities","title":"Shared API Capabilities","description":"API Response Envelopes","source":"@site/docs/reference/developer/api/shared-api-capabilities.md","sourceDirName":"reference/developer/api","slug":"/reference/developer/api/shared-api-capabilities","permalink":"/docs/reference/developer/api/shared-api-capabilities","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/reference/developer/api/shared-api-capabilities.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Fabric API","permalink":"/docs/reference/developer/api/fabric-api"},"next":{"title":"Edge SDKs","permalink":"/docs/reference/developer/sdk/"}},{"unversionedId":"reference/developer/index","id":"reference/developer/index","title":"Ziti Developer Resources","description":"Edge SDKs","source":"@site/docs/reference/developer/index.md","sourceDirName":"reference/developer","slug":"/reference/developer/","permalink":"/docs/reference/developer/","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/reference/developer/index.md","tags":[],"version":"current","frontMatter":{"title":"Ziti Developer Resources"},"sidebar":"docsSidebar","previous":{"title":"Logging","permalink":"/docs/reference/logging"},"next":{"title":"Edge APIs","permalink":"/docs/reference/developer/api/"}},{"unversionedId":"reference/developer/sdk/android","id":"reference/developer/sdk/android","title":"Android","description":"","source":"@site/docs/reference/developer/sdk/android.mdx","sourceDirName":"reference/developer/sdk","slug":"/reference/developer/sdk/android","permalink":"/docs/reference/developer/sdk/android","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/reference/developer/sdk/android.mdx","tags":[],"version":"current","frontMatter":{"hide_title":true,"title":"Android","hide_table_of_contents":false,"toc_min_heading_level":3},"sidebar":"docsSidebar","previous":{"title":"Edge SDKs","permalink":"/docs/reference/developer/sdk/"},"next":{"title":"Ziti C SDK","permalink":"/docs/reference/developer/sdk/ziti-sdk-c"}},{"unversionedId":"reference/developer/sdk/index","id":"reference/developer/sdk/index","title":"Edge SDKs","description":"Getting Started With an SDK","source":"@site/docs/reference/developer/sdk/index.mdx","sourceDirName":"reference/developer/sdk","slug":"/reference/developer/sdk/","permalink":"/docs/reference/developer/sdk/","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/reference/developer/sdk/index.mdx","tags":[],"version":"current","frontMatter":{"title":"Edge SDKs"},"sidebar":"docsSidebar","previous":{"title":"Shared API Capabilities","permalink":"/docs/reference/developer/api/shared-api-capabilities"},"next":{"title":"Android","permalink":"/docs/reference/developer/sdk/android"}},{"unversionedId":"reference/developer/sdk/ziti-sdk-c","id":"reference/developer/sdk/ziti-sdk-c","title":"Ziti C SDK","description":"---","source":"@site/docs/reference/developer/sdk/ziti-sdk-c.mdx","sourceDirName":"reference/developer/sdk","slug":"/reference/developer/sdk/ziti-sdk-c","permalink":"/docs/reference/developer/sdk/ziti-sdk-c","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/reference/developer/sdk/ziti-sdk-c.mdx","tags":[],"version":"current","frontMatter":{"title":"Ziti C SDK","hide_title":true},"sidebar":"docsSidebar","previous":{"title":"Android","permalink":"/docs/reference/developer/sdk/android"},"next":{"title":"OpenZiti .NET SDK","permalink":"/docs/reference/developer/sdk/ziti-sdk-csharp"}},{"unversionedId":"reference/developer/sdk/ziti-sdk-csharp","id":"reference/developer/sdk/ziti-sdk-csharp","title":"OpenZiti .NET SDK","description":"","source":"@site/docs/reference/developer/sdk/ziti-sdk-csharp.mdx","sourceDirName":"reference/developer/sdk","slug":"/reference/developer/sdk/ziti-sdk-csharp","permalink":"/docs/reference/developer/sdk/ziti-sdk-csharp","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/reference/developer/sdk/ziti-sdk-csharp.mdx","tags":[],"version":"current","frontMatter":{"title":"OpenZiti .NET SDK","hide_title":true},"sidebar":"docsSidebar","previous":{"title":"Ziti C SDK","permalink":"/docs/reference/developer/sdk/ziti-sdk-c"},"next":{"title":"Ziti Swift SDK","permalink":"/docs/reference/developer/sdk/ziti-sdk-swift"}},{"unversionedId":"reference/developer/sdk/ziti-sdk-swift","id":"reference/developer/sdk/ziti-sdk-swift","title":"Ziti Swift SDK","description":"---","source":"@site/docs/reference/developer/sdk/ziti-sdk-swift.mdx","sourceDirName":"reference/developer/sdk","slug":"/reference/developer/sdk/ziti-sdk-swift","permalink":"/docs/reference/developer/sdk/ziti-sdk-swift","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/reference/developer/sdk/ziti-sdk-swift.mdx","tags":[],"version":"current","frontMatter":{"title":"Ziti Swift SDK","hide_title":true},"sidebar":"docsSidebar","previous":{"title":"OpenZiti .NET SDK","permalink":"/docs/reference/developer/sdk/ziti-sdk-csharp"},"next":{"title":"Glossary","permalink":"/docs/reference/glossary"}},{"unversionedId":"reference/glossary","id":"reference/glossary","title":"Glossary","description":"Here you will find a list of terms you may come across as you are using Ziti.","source":"@site/docs/reference/glossary.md","sourceDirName":"reference","slug":"/reference/glossary","permalink":"/docs/reference/glossary","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/reference/glossary.md","tags":[],"version":"current","frontMatter":{"id":"glossary","title":"Glossary"},"sidebar":"docsSidebar","previous":{"title":"Ziti Swift SDK","permalink":"/docs/reference/developer/sdk/ziti-sdk-swift"},"next":{"title":"Overview","permalink":"/docs/guides/"}},{"unversionedId":"reference/index","id":"reference/index","title":"Overview","description":"What is a Reference?","source":"@site/docs/reference/index.md","sourceDirName":"reference","slug":"/reference/","permalink":"/docs/reference/","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/reference/index.md","tags":[],"version":"current","sidebarPosition":10,"frontMatter":{"title":"Overview","sidebar_position":10},"sidebar":"docsSidebar","previous":{"title":"host.v2","permalink":"/docs/reference/config-types/host.v2"},"next":{"title":"Tunnelers","permalink":"/docs/reference/tunnelers/"}},{"unversionedId":"reference/logging","id":"reference/logging","title":"Logging","description":"This article is about log messages from the ziti CLI that is used to run the controller and router. See the Linux tunneler reference for details about messages from ziti-edge-tunnel.","source":"@site/docs/reference/40-logging.mdx","sourceDirName":"reference","slug":"/reference/logging","permalink":"/docs/reference/logging","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/reference/40-logging.mdx","tags":[],"version":"current","sidebarPosition":40,"frontMatter":{"title":"Logging"},"sidebar":"docsSidebar","previous":{"title":"Router","permalink":"/docs/reference/configuration/router"},"next":{"title":"Ziti Developer Resources","permalink":"/docs/reference/developer/"}},{"unversionedId":"reference/tunnelers/android","id":"reference/tunnelers/android","title":"Android","description":"The Ziti Mobile Edge for Android is available from the the Play store here. The source code for the Android tunneler is in GitHub and it is based on the SDK for the JVM.","source":"@site/docs/reference/tunnelers/03-android.md","sourceDirName":"reference/tunnelers","slug":"/reference/tunnelers/android","permalink":"/docs/reference/tunnelers/android","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/reference/tunnelers/03-android.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Windows","permalink":"/docs/reference/tunnelers/windows"},"next":{"title":"MacOS","permalink":"/docs/reference/tunnelers/macos"}},{"unversionedId":"reference/tunnelers/docker/readme","id":"reference/tunnelers/docker/readme","title":"Containers","description":"","source":"@site/docs/reference/tunnelers/70-docker/readme.mdx","sourceDirName":"reference/tunnelers/70-docker","slug":"/reference/tunnelers/docker/","permalink":"/docs/reference/tunnelers/docker/","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/reference/tunnelers/70-docker/readme.mdx","tags":[],"version":"current","frontMatter":{"title":"Containers","hide_table_of_contents":false},"sidebar":"docsSidebar","previous":{"title":"Troubleshooting","permalink":"/docs/reference/tunnelers/linux/linux-tunnel-troubleshooting"},"next":{"title":"Kubernetes","permalink":"/docs/reference/tunnelers/kubernetes/"}},{"unversionedId":"reference/tunnelers/index","id":"reference/tunnelers/index","title":"Tunnelers","description":"Each tunneler operates similarly. The goal is to have the tunneler seamlessly intercept traffic destined for Ziti","source":"@site/docs/reference/tunnelers/index.mdx","sourceDirName":"reference/tunnelers","slug":"/reference/tunnelers/","permalink":"/docs/reference/tunnelers/","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/reference/tunnelers/index.mdx","tags":[],"version":"current","frontMatter":{"title":"Tunnelers"},"sidebar":"docsSidebar","previous":{"title":"Overview","permalink":"/docs/reference/"},"next":{"title":"Windows","permalink":"/docs/reference/tunnelers/windows"}},{"unversionedId":"reference/tunnelers/iOS","id":"reference/tunnelers/iOS","title":"iOS","description":"The Ziti Mobile Edge for iOS is available from the Apple store here. The source code for the iOS tunneler is in GitHub and it is based on the SDK for Swift.","source":"@site/docs/reference/tunnelers/05-_iOS.md","sourceDirName":"reference/tunnelers","slug":"/reference/tunnelers/iOS","permalink":"/docs/reference/tunnelers/iOS","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/reference/tunnelers/05-_iOS.md","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"MacOS","permalink":"/docs/reference/tunnelers/macos"},"next":{"title":"Linux Tunneller","permalink":"/docs/reference/tunnelers/linux/"}},{"unversionedId":"reference/tunnelers/kubernetes/index","id":"reference/tunnelers/kubernetes/index","title":"Tunneling Kubernetes Workloads","description":"This guide will help you discover the best strategy and tool for connecting a Kubernetes workload. This overview page links to child pages for each strategy and tool, and a summary of each is provided in the sections below. Click on the chart\'s outcomes to see the corresponding documentation.","source":"@site/docs/reference/tunnelers/80-kubernetes/index.mdx","sourceDirName":"reference/tunnelers/80-kubernetes","slug":"/reference/tunnelers/kubernetes/","permalink":"/docs/reference/tunnelers/kubernetes/","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/reference/tunnelers/80-kubernetes/index.mdx","tags":[],"version":"current","frontMatter":{"title":"Tunneling Kubernetes Workloads","sidebar_label":"Kubernetes"},"sidebar":"docsSidebar","previous":{"title":"Containers","permalink":"/docs/reference/tunnelers/docker/"},"next":{"title":"Reverse Proxy Pod","permalink":"/docs/reference/tunnelers/kubernetes/kubernetes-host"}},{"unversionedId":"reference/tunnelers/kubernetes/kubernetes-daemonset","id":"reference/tunnelers/kubernetes/kubernetes-daemonset","title":"Kubernetes Node Daemonset","description":"","source":"@site/docs/reference/tunnelers/80-kubernetes/kubernetes-daemonset.md","sourceDirName":"reference/tunnelers/80-kubernetes","slug":"/reference/tunnelers/kubernetes/kubernetes-daemonset","permalink":"/docs/reference/tunnelers/kubernetes/kubernetes-daemonset","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/reference/tunnelers/80-kubernetes/kubernetes-daemonset.md","tags":[],"version":"current","sidebarPosition":70,"frontMatter":{"title":"Kubernetes Node Daemonset","sidebar_label":"Node Proxy","sidebar_position":70},"sidebar":"docsSidebar","previous":{"title":"Reverse Proxy Pod","permalink":"/docs/reference/tunnelers/kubernetes/kubernetes-host"},"next":{"title":"Sidecar Proxy","permalink":"/docs/reference/tunnelers/kubernetes/kubernetes-sidecar"}},{"unversionedId":"reference/tunnelers/kubernetes/kubernetes-host","id":"reference/tunnelers/kubernetes/kubernetes-host","title":"Deploy a Hosting Tunneler in Kubernetes","description":"","source":"@site/docs/reference/tunnelers/80-kubernetes/kubernetes-host.mdx","sourceDirName":"reference/tunnelers/80-kubernetes","slug":"/reference/tunnelers/kubernetes/kubernetes-host","permalink":"/docs/reference/tunnelers/kubernetes/kubernetes-host","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/reference/tunnelers/80-kubernetes/kubernetes-host.mdx","tags":[],"version":"current","sidebarPosition":60,"frontMatter":{"sidebar_position":60,"sidebar_label":"Reverse Proxy Pod","title":"Deploy a Hosting Tunneler in Kubernetes"},"sidebar":"docsSidebar","previous":{"title":"Kubernetes","permalink":"/docs/reference/tunnelers/kubernetes/"},"next":{"title":"Node Proxy","permalink":"/docs/reference/tunnelers/kubernetes/kubernetes-daemonset"}},{"unversionedId":"reference/tunnelers/kubernetes/kubernetes-sidecar","id":"reference/tunnelers/kubernetes/kubernetes-sidecar","title":"Kubernetes Sidecar Proxy","description":"Overview","source":"@site/docs/reference/tunnelers/80-kubernetes/kubernetes-sidecar.md","sourceDirName":"reference/tunnelers/80-kubernetes","slug":"/reference/tunnelers/kubernetes/kubernetes-sidecar","permalink":"/docs/reference/tunnelers/kubernetes/kubernetes-sidecar","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/reference/tunnelers/80-kubernetes/kubernetes-sidecar.md","tags":[],"version":"current","sidebarPosition":70,"frontMatter":{"sidebar_position":70,"sidebar_label":"Sidecar Proxy"},"sidebar":"docsSidebar","previous":{"title":"Node Proxy","permalink":"/docs/reference/tunnelers/kubernetes/kubernetes-daemonset"},"next":{"title":"NGINX Module","permalink":"/docs/reference/tunnelers/nginx"}},{"unversionedId":"reference/tunnelers/linux/debian-package","id":"reference/tunnelers/linux/debian-package","title":"Tunneling on Debian GNU/Linux","description":"Installing the Debian Package","source":"@site/docs/reference/tunnelers/60-linux/10-debian-package.mdx","sourceDirName":"reference/tunnelers/60-linux","slug":"/reference/tunnelers/linux/debian-package","permalink":"/docs/reference/tunnelers/linux/debian-package","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/reference/tunnelers/60-linux/10-debian-package.mdx","tags":[],"version":"current","sidebarPosition":10,"frontMatter":{"title":"Tunneling on Debian GNU/Linux","sidebar_label":"Debian"},"sidebar":"docsSidebar","previous":{"title":"Linux Tunneller","permalink":"/docs/reference/tunnelers/linux/"},"next":{"title":"RedHat","permalink":"/docs/reference/tunnelers/linux/redhat-package"}},{"unversionedId":"reference/tunnelers/linux/index","id":"reference/tunnelers/linux/index","title":"Linux Tunneller","description":"The purpose of the tunneller is to configure host access. This means all users and all processes on the host will share","source":"@site/docs/reference/tunnelers/60-linux/index.mdx","sourceDirName":"reference/tunnelers/60-linux","slug":"/reference/tunnelers/linux/","permalink":"/docs/reference/tunnelers/linux/","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/reference/tunnelers/60-linux/index.mdx","tags":[],"version":"current","frontMatter":{"title":"Linux Tunneller"},"sidebar":"docsSidebar","previous":{"title":"iOS","permalink":"/docs/reference/tunnelers/iOS"},"next":{"title":"Debian","permalink":"/docs/reference/tunnelers/linux/debian-package"}},{"unversionedId":"reference/tunnelers/linux/linux-tunnel-options","id":"reference/tunnelers/linux/linux-tunnel-options","title":"Options and Modes","description":"ziti-edge-tunnel Environment Variables","source":"@site/docs/reference/tunnelers/60-linux/40-linux-tunnel-options.mdx","sourceDirName":"reference/tunnelers/60-linux","slug":"/reference/tunnelers/linux/linux-tunnel-options","permalink":"/docs/reference/tunnelers/linux/linux-tunnel-options","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/reference/tunnelers/60-linux/40-linux-tunnel-options.mdx","tags":[],"version":"current","sidebarPosition":40,"frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Manual","permalink":"/docs/reference/tunnelers/linux/manual-installation"},"next":{"title":"Troubleshooting","permalink":"/docs/reference/tunnelers/linux/linux-tunnel-troubleshooting"}},{"unversionedId":"reference/tunnelers/linux/linux-tunnel-troubleshooting","id":"reference/tunnelers/linux/linux-tunnel-troubleshooting","title":"Troubleshooting","description":"Increase Log Level","source":"@site/docs/reference/tunnelers/60-linux/50-linux-tunnel-troubleshooting.mdx","sourceDirName":"reference/tunnelers/60-linux","slug":"/reference/tunnelers/linux/linux-tunnel-troubleshooting","permalink":"/docs/reference/tunnelers/linux/linux-tunnel-troubleshooting","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/reference/tunnelers/60-linux/50-linux-tunnel-troubleshooting.mdx","tags":[],"version":"current","sidebarPosition":50,"frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Options and Modes","permalink":"/docs/reference/tunnelers/linux/linux-tunnel-options"},"next":{"title":"Containers","permalink":"/docs/reference/tunnelers/docker/"}},{"unversionedId":"reference/tunnelers/linux/manual-installation","id":"reference/tunnelers/linux/manual-installation","title":"Manual Installation","description":"Manual Installation","source":"@site/docs/reference/tunnelers/60-linux/30-manual-installation.mdx","sourceDirName":"reference/tunnelers/60-linux","slug":"/reference/tunnelers/linux/manual-installation","permalink":"/docs/reference/tunnelers/linux/manual-installation","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/reference/tunnelers/60-linux/30-manual-installation.mdx","tags":[],"version":"current","sidebarPosition":30,"frontMatter":{"title":"Manual Installation","sidebar_label":"Manual"},"sidebar":"docsSidebar","previous":{"title":"RedHat","permalink":"/docs/reference/tunnelers/linux/redhat-package"},"next":{"title":"Options and Modes","permalink":"/docs/reference/tunnelers/linux/linux-tunnel-options"}},{"unversionedId":"reference/tunnelers/linux/redhat-package","id":"reference/tunnelers/linux/redhat-package","title":"Tunneling on RedHat and Fedora","description":"Installing the RPM Package","source":"@site/docs/reference/tunnelers/60-linux/20-redhat-package.mdx","sourceDirName":"reference/tunnelers/60-linux","slug":"/reference/tunnelers/linux/redhat-package","permalink":"/docs/reference/tunnelers/linux/redhat-package","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/reference/tunnelers/60-linux/20-redhat-package.mdx","tags":[],"version":"current","sidebarPosition":20,"frontMatter":{"title":"Tunneling on RedHat and Fedora","sidebar_label":"RedHat"},"sidebar":"docsSidebar","previous":{"title":"Debian","permalink":"/docs/reference/tunnelers/linux/debian-package"},"next":{"title":"Manual","permalink":"/docs/reference/tunnelers/linux/manual-installation"}},{"unversionedId":"reference/tunnelers/macos","id":"reference/tunnelers/macos","title":"MacOS","description":"Installation","source":"@site/docs/reference/tunnelers/04-macos.md","sourceDirName":"reference/tunnelers","slug":"/reference/tunnelers/macos","permalink":"/docs/reference/tunnelers/macos","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/reference/tunnelers/04-macos.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Android","permalink":"/docs/reference/tunnelers/android"},"next":{"title":"iOS","permalink":"/docs/reference/tunnelers/iOS"}},{"unversionedId":"reference/tunnelers/nginx","id":"reference/tunnelers/nginx","title":"Tunneling to NGINX Upstreams","description":"Ziti\'s NGINX module works like a tunneler for hosting Ziti services, i.e. as a reverse proxy. This means that NGINX listens for particular, pre-configured Ziti services on the Ziti overlay (not on an IP address), and forwards the incoming requests to the NGINX upstream specified for that service in the NGINX config file.","source":"@site/docs/reference/tunnelers/90-nginx.mdx","sourceDirName":"reference/tunnelers","slug":"/reference/tunnelers/nginx","permalink":"/docs/reference/tunnelers/nginx","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/reference/tunnelers/90-nginx.mdx","tags":[],"version":"current","sidebarPosition":90,"frontMatter":{"title":"Tunneling to NGINX Upstreams","sidebar_label":"NGINX Module"},"sidebar":"docsSidebar","previous":{"title":"Sidecar Proxy","permalink":"/docs/reference/tunnelers/kubernetes/kubernetes-sidecar"},"next":{"title":"Conventions","permalink":"/docs/reference/configuration/conventions"}},{"unversionedId":"reference/tunnelers/windows","id":"reference/tunnelers/windows","title":"Windows","description":"Installation","source":"@site/docs/reference/tunnelers/02-windows.md","sourceDirName":"reference/tunnelers","slug":"/reference/tunnelers/windows","permalink":"/docs/reference/tunnelers/windows","draft":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/reference/tunnelers/02-windows.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Tunnelers","permalink":"/docs/reference/tunnelers/"},"next":{"title":"Android","permalink":"/docs/reference/tunnelers/android"}}],"drafts":[],"sidebars":{"docsSidebar":[{"type":"html","value":"<a class=\\"menu__link\\" href=\\"/docs/learn/introduction/\\">LEARN</a>","className":"sidebar-title"},{"type":"category","label":"What is OpenZiti?","collapsible":true,"collapsed":true,"items":[{"type":"doc","id":"learn/introduction/components"},{"type":"doc","id":"learn/introduction/key_concepts"},{"type":"doc","id":"learn/introduction/features"},{"type":"doc","id":"learn/introduction/openziti-is-software"}],"link":{"type":"doc","id":"learn/introduction/index"}},{"type":"category","label":"Quickstarts","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"Network","collapsible":true,"collapsed":true,"items":[{"type":"doc","id":"learn/quickstarts/network/local-no-docker"},{"type":"doc","id":"learn/quickstarts/network/local-with-docker"},{"type":"doc","id":"learn/quickstarts/network/local-docker-compose"},{"type":"doc","id":"learn/quickstarts/network/hosted"},{"type":"doc","id":"learn/quickstarts/network/local-kubernetes","label":"Kubernetes"},{"type":"category","label":"Help","collapsible":true,"collapsed":true,"items":[{"type":"doc","id":"learn/quickstarts/network/help/change-admin-password"},{"type":"doc","id":"learn/quickstarts/network/help/quickstart-walkthrough"},{"type":"doc","id":"learn/quickstarts/network/help/reset-quickstart"},{"type":"doc","id":"learn/quickstarts/network/help/upgrade-quickstart-network"}],"link":{"type":"generated-index","slug":"/category/help","permalink":"/docs/category/help"}}],"link":{"type":"generated-index","slug":"/category/network","permalink":"/docs/category/network"}},{"type":"doc","label":"Console","id":"learn/quickstarts/zac/index"},{"type":"category","label":"BrowZer","collapsible":true,"collapsed":true,"items":[{"type":"doc","id":"learn/quickstarts/browzer/chrome-origin-trials"},{"type":"doc","label":"Example Enabling BrowZer","id":"learn/quickstarts/browzer/example/index"}],"link":{"type":"doc","id":"learn/quickstarts/browzer/index"}},{"type":"category","label":"Services","collapsible":true,"collapsed":true,"items":[{"type":"doc","id":"learn/quickstarts/services/kubernetes-service"},{"type":"doc","id":"learn/quickstarts/services/ztha"}],"link":{"type":"doc","id":"learn/quickstarts/services/index"}}],"link":{"type":"doc","id":"learn/quickstarts/quickstartOverview"}},{"type":"category","label":"Core Concepts","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"Clients","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"Process Sequences","collapsible":true,"collapsed":true,"items":[{"type":"doc","id":"learn/core-concepts/clients/process-sequences/EndpointInitialization"},{"type":"doc","id":"learn/core-concepts/clients/process-sequences/EndpointRegistration"},{"type":"doc","id":"learn/core-concepts/clients/process-sequences/ServiceDial"}],"link":{"type":"generated-index","slug":"/category/process-sequences","permalink":"/docs/category/process-sequences"}}],"link":{"type":"doc","id":"learn/core-concepts/clients/choose"}},{"type":"category","label":"Identities","collapsible":true,"collapsed":true,"items":[{"type":"doc","id":"learn/core-concepts/identities/creating"},{"type":"doc","id":"learn/core-concepts/identities/enrolling"}],"link":{"type":"doc","id":"learn/core-concepts/identities/overview"}},{"type":"doc","label":"Services","id":"learn/core-concepts/services/overview"},{"type":"category","label":"Configuration Store","collapsible":true,"collapsed":true,"items":[{"type":"doc","id":"learn/core-concepts/config-store/config-type-host-v1"},{"type":"doc","id":"learn/core-concepts/config-store/config-type-intercept-v1"},{"type":"doc","id":"learn/core-concepts/config-store/consuming"},{"type":"doc","id":"learn/core-concepts/config-store/managing"}],"link":{"type":"doc","id":"learn/core-concepts/config-store/overview"}},{"type":"category","label":"Metrics","collapsible":true,"collapsed":true,"items":[{"type":"doc","id":"learn/core-concepts/metrics/types"},{"type":"doc","id":"learn/core-concepts/metrics/available-metrics"},{"type":"doc","id":"learn/core-concepts/metrics/file"},{"type":"doc","id":"learn/core-concepts/metrics/inspect"},{"type":"doc","id":"learn/core-concepts/metrics/prometheus"},{"type":"doc","id":"learn/core-concepts/metrics/grafana"},{"type":"doc","id":"learn/core-concepts/metrics/sequence-diagram"}],"link":{"type":"doc","id":"learn/core-concepts/metrics/overview"}},{"type":"category","label":"Zero Trust Models","collapsible":true,"collapsed":true,"items":[{"type":"doc","id":"learn/core-concepts/zero-trust-models/ztaa","label":"App Access"},{"type":"doc","id":"learn/core-concepts/zero-trust-models/ztha","label":"Host Access"},{"type":"doc","id":"learn/core-concepts/zero-trust-models/ztna","label":"Network Access"}],"link":{"type":"doc","id":"learn/core-concepts/zero-trust-models/overview"}},{"type":"doc","id":"learn/core-concepts/data-flow-explainer"},{"type":"category","label":"Security","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"Authentication","collapsible":true,"collapsed":true,"items":[{"type":"doc","id":"learn/core-concepts/security/authentication/password-management"},{"type":"doc","id":"learn/core-concepts/security/authentication/third-party-cas"},{"type":"doc","id":"learn/core-concepts/security/authentication/api-session-certificates"},{"type":"doc","id":"learn/core-concepts/security/authentication/authentication-policies"},{"type":"doc","id":"learn/core-concepts/security/authentication/certificate-management"},{"type":"doc","id":"learn/core-concepts/security/authentication/external-jwt-signers"},{"type":"doc","id":"learn/core-concepts/security/authentication/identities"},{"type":"doc","id":"learn/core-concepts/security/authentication/totp"}],"link":{"type":"doc","id":"learn/core-concepts/security/authentication/auth"}},{"type":"category","label":"Authorization","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"Policies","collapsible":true,"collapsed":true,"items":[{"type":"doc","id":"learn/core-concepts/security/authorization/policies/creating-edge-router-policies"},{"type":"doc","id":"learn/core-concepts/security/authorization/policies/creating-service-edge-router-policies"},{"type":"doc","id":"learn/core-concepts/security/authorization/policies/creating-service-policies"}],"link":{"type":"doc","id":"learn/core-concepts/security/authorization/policies/overview"}},{"type":"doc","id":"learn/core-concepts/security/authorization/posture-checks"}],"link":{"type":"doc","id":"learn/core-concepts/security/authorization/auth"}},{"type":"doc","id":"learn/core-concepts/security/SessionsAndConnections","label":"Session Diagram"},{"type":"doc","id":"learn/core-concepts/security/connection-security"},{"type":"doc","id":"learn/core-concepts/security/enrollment"},{"type":"doc","id":"learn/core-concepts/security/sessions"}],"link":{"type":"doc","id":"learn/core-concepts/security/overview"}},{"type":"doc","id":"learn/core-concepts/pki","label":"PKI"}],"link":{"type":"generated-index","description":"Here you will find the core concepts that are composed to create, use, and maintain an OpenZiti overlay network.","slug":"/category/core-concepts","permalink":"/docs/category/core-concepts"}},{"type":"html","value":"<a class=\\"menu__link\\" href=\\"/docs/reference/\\">REFERENCE</a>","className":"sidebar-title"},{"type":"category","label":"Config Types","collapsible":true,"collapsed":true,"items":[{"type":"doc","id":"reference/config-types/host.v1","label":"host.v1"},{"type":"doc","id":"reference/config-types/host.v2","label":"host.v2"}],"link":{"type":"doc","id":"reference/config-types/index"}},{"type":"doc","id":"reference/index"},{"type":"category","label":"Tunnelers","collapsible":true,"collapsed":true,"items":[{"type":"doc","id":"reference/tunnelers/windows"},{"type":"doc","id":"reference/tunnelers/android"},{"type":"doc","id":"reference/tunnelers/macos"},{"type":"doc","id":"reference/tunnelers/iOS"},{"type":"category","label":"Linux","collapsible":true,"collapsed":true,"items":[{"type":"doc","id":"reference/tunnelers/linux/debian-package","label":"Debian"},{"type":"doc","id":"reference/tunnelers/linux/redhat-package","label":"RedHat"},{"type":"doc","id":"reference/tunnelers/linux/manual-installation","label":"Manual"},{"type":"doc","id":"reference/tunnelers/linux/linux-tunnel-options"},{"type":"doc","id":"reference/tunnelers/linux/linux-tunnel-troubleshooting"}],"link":{"type":"doc","id":"reference/tunnelers/linux/index"}},{"type":"doc","label":"Docker","id":"reference/tunnelers/docker/readme"},{"type":"category","label":"Kubernetes","collapsible":true,"collapsed":true,"items":[{"type":"doc","id":"reference/tunnelers/kubernetes/kubernetes-host","label":"Reverse Proxy Pod"},{"type":"doc","id":"reference/tunnelers/kubernetes/kubernetes-daemonset","label":"Node Proxy"},{"type":"doc","id":"reference/tunnelers/kubernetes/kubernetes-sidecar","label":"Sidecar Proxy"}],"link":{"type":"doc","id":"reference/tunnelers/kubernetes/index"}},{"type":"doc","id":"reference/tunnelers/nginx","label":"NGINX Module"}],"link":{"type":"doc","id":"reference/tunnelers/index"}},{"type":"category","label":"Configuration","collapsible":true,"collapsed":true,"items":[{"type":"doc","id":"reference/configuration/controller","label":"Controller"},{"type":"doc","id":"reference/configuration/router","label":"Router"}],"link":{"type":"doc","id":"reference/configuration/conventions"}},{"type":"doc","id":"reference/logging"},{"type":"category","label":"Developer","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"APIs","collapsible":true,"collapsed":true,"items":[{"type":"doc","id":"reference/developer/api/edge-client-reference"},{"type":"doc","id":"reference/developer/api/edge-management-reference"},{"type":"doc","id":"reference/developer/api/fabric-api"},{"type":"doc","id":"reference/developer/api/shared-api-capabilities"}],"link":{"type":"doc","id":"reference/developer/api/index"}},{"type":"category","label":"SDKs","collapsible":true,"collapsed":true,"items":[{"type":"doc","id":"reference/developer/sdk/android"},{"type":"doc","id":"reference/developer/sdk/ziti-sdk-c"},{"type":"doc","id":"reference/developer/sdk/ziti-sdk-csharp"},{"type":"doc","id":"reference/developer/sdk/ziti-sdk-swift"}],"link":{"type":"doc","id":"reference/developer/sdk/index"}}],"link":{"type":"doc","id":"reference/developer/index"}},{"type":"doc","id":"reference/glossary"},{"type":"html","value":"<a class=\\"menu__link\\" href=\\"/docs/guides/\\">GUIDES</a>","className":"sidebar-title"},{"type":"doc","id":"guides/index"},{"type":"category","label":"BrowZer IdPs","collapsible":true,"collapsed":true,"items":[{"type":"doc","label":"Auth0","id":"guides/Identity_Providers/auth0/index"},{"type":"doc","label":"Authelia","id":"guides/Identity_Providers/autheila/index"},{"type":"doc","label":"Authentik","id":"guides/Identity_Providers/authentik/index"},{"type":"doc","label":"Cognito","id":"guides/Identity_Providers/cognito/index"},{"type":"doc","label":"Dex","id":"guides/Identity_Providers/dex/index"},{"type":"doc","label":"Duo","id":"guides/Identity_Providers/duo/index"},{"type":"doc","label":"Microsoft Entra ID","id":"guides/Identity_Providers/entra/index"},{"type":"doc","label":"Google","id":"guides/Identity_Providers/google/index"},{"type":"doc","label":"Keycloak","id":"guides/Identity_Providers/keycloak/index"},{"type":"doc","label":"Okta","id":"guides/Identity_Providers/okta/index"},{"type":"doc","label":"Ory Kratos","id":"guides/Identity_Providers/ory_kratos/index"},{"type":"doc","label":"Stytch","id":"guides/Identity_Providers/stytch/index"},{"type":"doc","label":"Zitadel","id":"guides/Identity_Providers/zitadel/index"}],"link":{"type":"doc","id":"guides/Identity_Providers/index"}},{"type":"category","label":"Deployments","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"Linux","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"Controller","collapsible":true,"collapsed":true,"items":[{"type":"doc","id":"guides/deployments/linux/controller/migrate","label":"Migrate"},{"type":"doc","id":"guides/deployments/linux/controller/backup","label":"Backup"}],"link":{"type":"doc","id":"guides/deployments/linux/controller/deploy"}},{"type":"category","label":"Router","collapsible":true,"collapsed":true,"items":[{"type":"doc","id":"guides/deployments/linux/router/router-configuration","label":"Configuration"},{"type":"doc","id":"guides/deployments/linux/router/cli-mgmt","label":"CLI Mgmt"},{"type":"doc","id":"guides/deployments/linux/router/migrate","label":"Migrate"},{"type":"doc","id":"guides/deployments/linux/router/backup","label":"Backup"}],"link":{"type":"doc","id":"guides/deployments/linux/router/deploy"}},{"type":"doc","id":"guides/deployments/linux/console","label":"Console"}],"link":{"type":"generated-index","title":"Deploying on Linux","description":"Run a controller or router as a Linux service","slug":"/category/linux","permalink":"/docs/category/linux"}},{"type":"category","label":"Docker","collapsible":true,"collapsed":true,"items":[{"type":"doc","id":"guides/deployments/docker/controller","label":"Controller"},{"type":"doc","id":"guides/deployments/docker/router","label":"Router"},{"type":"doc","id":"guides/deployments/docker/console","label":"Console"}],"link":{"type":"generated-index","title":"Deploying with Docker","description":"Run a controller or router as a Docker container or use the console in the controller container","slug":"/category/docker","permalink":"/docs/category/docker"}},{"type":"category","label":"Kubernetes","collapsible":true,"collapsed":true,"items":[{"type":"doc","id":"guides/deployments/kubernetes/kubernetes-controller","label":"Controller"},{"type":"doc","id":"guides/deployments/kubernetes/kubernetes-router","label":"Router"},{"type":"doc","id":"guides/deployments/kubernetes/kubernetes-console","label":"Console"}],"link":{"type":"generated-index","title":"Running on Kubernetes","description":"Deploy a Ziti stack on Kubernetes or tunnel existing Kubernetes services with Ziti.","slug":"/category/kubernetes","permalink":"/docs/category/kubernetes"}},{"type":"category","label":"Cloud","collapsible":true,"collapsed":true,"items":[{"type":"doc","id":"guides/deployments/cloud/controller","label":"Controller"},{"type":"doc","id":"guides/deployments/cloud/router","label":"Router"}],"link":{"type":"generated-index","title":"Working with Public Clouds","description":"Run a Ziti controller or router on a Linux VM in a public cloud.","slug":"/category/cloud","permalink":"/docs/category/cloud"}}],"link":{"type":"generated-index","title":"Deploying to Production","description":"Run a controller or router as a Linux service, with Docker, or deployed to Kubernetes.","slug":"/category/deployments","permalink":"/docs/category/deployments"}},{"type":"category","label":"Hardware Keys","collapsible":true,"collapsed":true,"items":[{"type":"doc","id":"guides/hsm/softhsm"},{"type":"doc","id":"guides/hsm/yubikey"}],"link":{"type":"doc","id":"guides/hsm/hsmIndex"}},{"type":"category","label":"Topologies","collapsible":true,"collapsed":true,"items":[{"type":"doc","id":"guides/topologies/services","label":"Services"},{"type":"category","label":"Gateway","collapsible":true,"collapsed":true,"items":[{"type":"doc","id":"guides/topologies/gateway/router","label":"Router"},{"type":"doc","id":"guides/topologies/gateway/tunneler","label":"Tunneler"}],"link":{"type":"generated-index","title":"Local Gateway","description":"Use a Router or Tunneler as a Gateway for a Local Area Network","slug":"/category/gateway","permalink":"/docs/category/gateway"}}],"link":{"type":"generated-index","slug":"/category/topologies","permalink":"/docs/category/topologies"}},{"type":"category","label":"Troubleshooting","collapsible":true,"collapsed":true,"items":[{"type":"doc","id":"guides/troubleshooting/agent","label":"Agent"},{"type":"doc","id":"guides/troubleshooting/circuit-create-error-codes"},{"type":"category","label":"PKI Troubleshooting","collapsible":true,"collapsed":true,"items":[{"type":"doc","id":"guides/troubleshooting/pki-troubleshooting/renew-cert","label":"Renewed Certs"},{"type":"doc","id":"guides/troubleshooting/pki-troubleshooting/troubleshoot-expired-certs"}],"link":{"type":"doc","id":"guides/troubleshooting/pki-troubleshooting/index"}}],"link":{"type":"generated-index","title":"Troubleshooting Guides","description":"Solutions for common issues","slug":"/category/troubleshooting","permalink":"/docs/category/troubleshooting"}}]}}]},"docs-policies":{"loadedVersions":[{"versionName":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","path":"/policies","tagsPath":"/policies/tags","isLast":true,"routePriority":-1,"sidebarFilePath":"/home/runner/work/ziti-doc/ziti-doc/docusaurus/sidebar-policies.js","contentPath":"/home/runner/work/ziti-doc/ziti-doc/docusaurus/docs-policies","contentPathLocalized":"/home/runner/work/ziti-doc/ziti-doc/docusaurus/i18n/en/docusaurus-plugin-content-docs-docs-policies/current","docs":[{"unversionedId":"CODE_OF_CONDUCT","id":"CODE_OF_CONDUCT","title":"NetFoundry Contributor Covenant Code of Conduct","description":"Our Pledge","source":"@site/docs-policies/CODE_OF_CONDUCT.md","sourceDirName":".","slug":"/CODE_OF_CONDUCT","permalink":"/policies/CODE_OF_CONDUCT","draft":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"policiesSidebar","next":{"title":"Contributing to NetFoundry Open-Source Projects","permalink":"/policies/CONTRIBUTING"}},{"unversionedId":"CONTRIBUTING","id":"CONTRIBUTING","title":"Contributing to NetFoundry Open-Source Projects","description":"NetFoundry welcomes all contributions large or small from the community. If you want to contribute to a NetFoundry repository this document will serve as a guide. Contributions can come in various forms such as bug reports, engaging with other users by offering help on the the discourse group and of course as code submissions. Please take a moment and read this document to see how you can help out.","source":"@site/docs-policies/CONTRIBUTING.md","sourceDirName":".","slug":"/CONTRIBUTING","permalink":"/policies/CONTRIBUTING","draft":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"policiesSidebar","previous":{"title":"NetFoundry Contributor Covenant Code of Conduct","permalink":"/policies/CODE_OF_CONDUCT"},"next":{"title":"Code of Conduct","permalink":"/policies/new-project-template/CODE_OF_CONDUCT"}},{"unversionedId":"new-project-template/CODE_OF_CONDUCT","id":"new-project-template/CODE_OF_CONDUCT","title":"Code of Conduct","description":"All open source projects managed by NetFoundry share a common [code of","source":"@site/docs-policies/new-project-template/CODE_OF_CONDUCT.md","sourceDirName":"new-project-template","slug":"/new-project-template/CODE_OF_CONDUCT","permalink":"/policies/new-project-template/CODE_OF_CONDUCT","draft":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"policiesSidebar","previous":{"title":"Contributing to NetFoundry Open-Source Projects","permalink":"/policies/CONTRIBUTING"},"next":{"title":"Contributing","permalink":"/policies/new-project-template/CONTRIBUTING"}},{"unversionedId":"new-project-template/CONTRIBUTING","id":"new-project-template/CONTRIBUTING","title":"Contributing","description":"NetFoundry welcomes all and any contributions. All open source projects managed by NetFoundry share a common","source":"@site/docs-policies/new-project-template/CONTRIBUTING.md","sourceDirName":"new-project-template","slug":"/new-project-template/CONTRIBUTING","permalink":"/policies/new-project-template/CONTRIBUTING","draft":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"policiesSidebar","previous":{"title":"Code of Conduct","permalink":"/policies/new-project-template/CODE_OF_CONDUCT"},"next":{"title":"NetFoundry End User License Agreement","permalink":"/policies/new-project-template/NF_EULA"}},{"unversionedId":"new-project-template/NF_EULA","id":"new-project-template/NF_EULA","title":"NetFoundry End User License Agreement","description":"This End User License Agreement (&quot; Agreement&quot;) is between NetFoundry, Inc. (&quot; NetFoundry&quot;),","source":"@site/docs-policies/new-project-template/NF_EULA.md","sourceDirName":"new-project-template","slug":"/new-project-template/NF_EULA","permalink":"/policies/new-project-template/NF_EULA","draft":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"policiesSidebar","previous":{"title":"Contributing","permalink":"/policies/new-project-template/CONTRIBUTING"}}],"drafts":[],"sidebars":{"policiesSidebar":[{"type":"doc","id":"CODE_OF_CONDUCT"},{"type":"doc","id":"CONTRIBUTING"},{"type":"category","label":"new-project-template","collapsible":true,"collapsed":true,"items":[{"type":"doc","id":"new-project-template/CODE_OF_CONDUCT"},{"type":"doc","id":"new-project-template/CONTRIBUTING"},{"type":"doc","id":"new-project-template/NF_EULA"}]}]}}]}},"docusaurus-plugin-content-blog":{"default":{"blogSidebarTitle":"Recent posts","blogPosts":[],"blogListPaginated":[],"blogTags":{},"blogTagsListPath":"/blog/tags","blogTagsPaginated":[]}},"docusaurus-plugin-content-pages":{"default":[{"type":"jsx","permalink":"/","source":"@site/src/pages/index.js"},{"type":"jsx","permalink":"/appetizer/","source":"@site/src/pages/appetizer/index.js"},{"type":"jsx","permalink":"/blog/","source":"@site/src/pages/blog/index.js"},{"type":"mdx","permalink":"/comparisons/overview","source":"@site/src/pages/comparisons/overview.md","title":"OpenZiti Comparison Overview","description":"This is the landing page for comparisons.","frontMatter":{}},{"type":"mdx","permalink":"/comparisons/service-mesh","source":"@site/src/pages/comparisons/service-mesh.md","title":"OpenZiti Compared to Service Mesh","description":"Words here...","frontMatter":{}},{"type":"jsx","permalink":"/stargazers/","source":"@site/src/pages/stargazers/index.js"}]},"docusaurus-plugin-debug":{},"docusaurus-plugin-google-tag-manager":{},"docusaurus-plugin-sitemap":{},"docusaurus-plugin-redoc":{"edge-client":{"converted":{"openapi":"3.0.0","info":{"description":"OpenZiti Edge Client API","title":"Ziti Edge Client","contact":{"name":"OpenZiti","url":"https://openziti.discourse.group","email":"help@openziti.org"},"license":{"name":"Apache 2.0","url":"https://www.apache.org/licenses/LICENSE-2.0.html"},"version":"0.26.35"},"paths":{"/":{"get":{"security":[],"tags":["Informational"],"summary":"Returns version information","operationId":"listRoot","responses":{"200":{"description":"Version information for the controller","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listVersionEnvelope"}}}}}}},"/.well-known/est/cacerts":{"get":{"security":[],"description":"This endpoint is used during enrollments to bootstrap trust between enrolling clients and the Ziti Edge API.\\nThis endpoint returns a base64 encoded PKCS7 store. The content can be base64 decoded and parsed by any library\\nthat supports parsing PKCS7 stores.\\n","tags":["Well Known"],"summary":"Get CA Cert Store","operationId":"listWellKnownCas","responses":{"200":{"description":"A base64 encoded PKCS7 store","content":{"application/pkcs7-mime":{"schema":{"type":"string","example":"MIIMUQYJKoZIhvcNAQcCoIIMQjCCDD4CAQExADALBgkqhkiG9w0BBwGgggwkMIIG\\nBjCCA+6gAwIBAgICEAAwDQYJKoZIhvcNAQELBQAwgZcxCzAJBgNVBAYTAlVTMRcw\\nFQYDVQQIDA5Ob3J0aCBDYXJvbGluYTESMBAGA1UEBwwJQ2hhcmxvdHRlMRMwEQYD\\nVQQKDApOZXRGb3VuZHJ5MSkwJwYDVQQLDCBOZXRGb3VuZHJ5IENlcnRpZmljYXRl\\nIEF1dGhvcml0eTEbMBkGA1UEAwwSTmV0Rm91bmRyeSBSb290IENBMB4XDTE4MDUx\\nODE2NTcyM1oXDTI4MDUxNTE2NTcyM1owgYsxCzAJBgNVBAYTAlVTMRcwFQYDVQQI\\nDA5Ob3J0aCBDYXJvbGluYTETMBEGA1UECgwKTmV0Rm91bmRyeTEpMCcGA1UECwwg\\nTmV0Rm91bmRyeSBDZXJ0aWZpY2F0ZSBBdXRob3JpdHkxIzAhBgNVBAMMGk5ldEZv\\ndW5kcnkgSW50ZXJtZWRpYXRlIENBMIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIIC\\nCgKCAgEAsb1EPhMUweS9WpjT7L54xAOmZqugJ6fhSrFfLUwNUy172q+ASvZTpT1z\\nKIPcZpGmPB3TX2bHaAR67BbRkUR11JgWE3U8+FsGrYmPZtaKM6fg8Mh0WZ41oMYQ\\nNJyQixOktrgqfybyJoT5PeT5AA7QQmd8mku2X9nkAu6gWPf2nHNc7SeQdijmyQQa\\nVK3oqyaxOzWzsU/XbfMEz/ObkefUxgt5Z6jlK0xcW0Q+QgtawMKLUiuo6obWRPcl\\n7Hm9Sze8XJS5pbvS5JkUszxoRZuDVHZylrlHIpA/IL+BnvS+M7SP28UWe9skrv/s\\n6ACpJtuPJ1EYf5fakugOpY7i+hq7YNi//csbc49Qjn2OtttrR7JcTaHUEU1I/tQb\\nQGAtNkI4pJjRVUdDawQFQlWHZD1COixNLErs2HzAI00DhLrY6SKITI/kjN0Xx010\\nXdMcdfay0PLWm6RwxiRmMQFL4GNIC895NF1q6xV4W4rWgqUNlcvKpy+i1chWpRbU\\nHe16ul0qh10fcESrRvAbXn5YrQJLrwbSr+85ubN8lYdNLE0qg2cIXZlUilarZZzW\\nghtCe+KkUpjfRuAi/CqfSwNK3QXEfeVEK6S49mHeSekOizFIw7fmDhCz9vXwMOnb\\nryRSLEJks0gIRcSDVChXheAqC98y4kcQdniNWFnqJXoqA+rrSokCAwEAAaNmMGQw\\nHQYDVR0OBBYEFK8UXC/sq6dGVFAqEXHsQDzqzwuUMB8GA1UdIwQYMBaAFEHz6RRu\\nOuXj2mwAzOeUinfWeivpMBIGA1UdEwEB/wQIMAYBAf8CAQAwDgYDVR0PAQH/BAQD\\nAgGGMA0GCSqGSIb3DQEBCwUAA4ICAQBDAAaOE2Nbb49eOjyTNxIeOB+ZKQjJ1hUE\\ngRrootAA8NYbtKW/vyxTWnNi5XOGXd4DFS9OKZ0mL/7NyLc0mbTwPH2ZT8KTPUTS\\nCpo6yktZ/7TMjyAtWZiOMg2EH+6m/nlNSXk/v5fb8+JQLdZfpxoA017dHh3tc8l7\\nKOskCZNwQHgF/YMXrPXUNbsGkXRuJLtpjPw5O9GvPys7p+a1aJH1WCTly9zfB6j+\\nrMF+UGCPDT30sxitVlohik83j6pKLgEAP/gi8nJbILlTP7ce+gJeHR2tfDvmK91X\\n6QgCF2STUFBU7/9H1/pPRRykOxQpAd8xqSgqGEyp9Ie4tysZjwoUEnG8IVJ5ykrI\\nFximvnb4B+LABV9WEo08n8m1R8wEryrISi8fBPn3Pr5nuayOfFLa15CLTkZF40FN\\n8ika1qNZy8bWRDwTZJQUUb7VCheRWcMwdZdNmhl3J+VZLpQ+ruW7b2ajwacHz5Nw\\nBHKNcmxXb/4vHq/BnlcayHnSqT6036+OZQ+owDegcYmWV6LaM7xLErjHz2EE38M2\\nYSiW5SU1zluDe+iHb6l3Gd3Fj/X1gkMWFgYh0XPMSUSyimLNYzy4THKzmWlcQNFo\\nLLiIDbLrMt+vk+vBkIsNTTPXRJOFPBhmIF6uIUj+2YhzNotX/pQtqMKms3pPlmHq\\ndH6biwygETCCBhYwggP+oAMCAQICCQDquKpymLJ5WzANBgkqhkiG9w0BAQsFADCB\\nlzELMAkGA1UEBhMCVVMxFzAVBgNVBAgMDk5vcnRoIENhcm9saW5hMRIwEAYDVQQH\\nDAlDaGFybG90dGUxEzARBgNVBAoMCk5ldEZvdW5kcnkxKTAnBgNVBAsMIE5ldEZv\\ndW5kcnkgQ2VydGlmaWNhdGUgQXV0aG9yaXR5MRswGQYDVQQDDBJOZXRGb3VuZHJ5\\nIFJvb3QgQ0EwHhcNMTgwNTE4MTY1NDQ3WhcNMzgwNTEzMTY1NDQ3WjCBlzELMAkG\\nA1UEBhMCVVMxFzAVBgNVBAgMDk5vcnRoIENhcm9saW5hMRIwEAYDVQQHDAlDaGFy\\nbG90dGUxEzARBgNVBAoMCk5ldEZvdW5kcnkxKTAnBgNVBAsMIE5ldEZvdW5kcnkg\\nQ2VydGlmaWNhdGUgQXV0aG9yaXR5MRswGQYDVQQDDBJOZXRGb3VuZHJ5IFJvb3Qg\\nQ0EwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQDKq/Xa+749Cr3WJGYD\\nDIEtNKIRnTFc6TeiRSm/O7hG2+1Nrh/dObjZJuDjsopWP8NFA/DwlNyEphYKAeSw\\nHDmu+4nFd6ifoeDE2lYq6bNhLcgN+A3MlN5Phb2rnO32YYZwHXGWov+jtd2gaK0f\\nWsH8CQxn6n2v7qvPMTeYFP8p4jqTZw2bvZWw+LMYTFCy541DFqQLQasMg10mXRAV\\nXO7Oa9y+D1re1zLq4wS6u8ItJoKzfmvZkMvD90C/tQ4u0iJaL7GB2SE9MOPDeGVv\\npnoSAIkSVmvRDUAj2x9PuukykzoL1OAWzc5Cg+5LxRmLejVE7PvPcHaTtNag2tRD\\nw2vbMeFKN8NvQH1QYcaPWZe4Vl9b6DAuTaH5RN919H/F+ZHyjZybVPwC14lflneI\\nKyNy8JEV/YMIbEADWnuiedzDehk2Opn+0+9Zr2X/xfjCo8iWHFbNaVnQX7wdRaOo\\n783lEouncqe46FDBLBpyAuDKHQpIT3MK8rkC/1yBNxsH44vMweUZuK0u7PC9KHtm\\npQfuflYGfxA34kY6WU3jzyQHetoLYjoxTqNEEjuGpwy2o1j7RaCBEFIbYlnlbhpE\\nWFTaQf96z2GQ6m1U3y7JyDflHSu9Fo1JNkG3qXsjDwda/6W7NRJRgdFrhnOwrm7F\\n6L9X4P1HnzU/VJL66LwPmiHVjQIDAQABo2MwYTAdBgNVHQ4EFgQUQfPpFG465ePa\\nbADM55SKd9Z6K+kwHwYDVR0jBBgwFoAUQfPpFG465ePabADM55SKd9Z6K+kwDwYD\\nVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAYYwDQYJKoZIhvcNAQELBQADggIB\\nACfU74aKWROaxnue8tZb5PFkEbnDRcRrKXRhnptA0vrgB4ydnYxX9hEBZD8o6PBy\\n3rewvl5meSOBE6zyb4JD80lHdzHSVFIwbzsNOeEjCslv/PA/3Y+J7DCt6gPNMDeY\\nuEssdqeSiMoYz2gnven4flSMKgTAJd3/SpVrn35HzXiU9MkmFVpPEMnTctOjw+Jn\\ncCkG5+D9N14dxtgZ/tUfbH+GUfhyGVxRdPrX5KQqAyapMfEaMXXa8KNs7PG+sDiS\\nWI+Sg9jUGtxgkfKdVNtFW+QMXyy7eT3iXPA+1r2hFAhgfIaGtBJUhxPHMhKtjbAg\\nAX+6+2D3GAbaD1+lcQHhKry3hygQ3OX79FJW6zyPS0tiV/LfovHqX/3x9q5PTVBO\\nwEOS2/LCc4R2M7S+HIPf4eSJ+nH4uCIdJ42WCror/mRsuL7geCksi70GHuCynP4y\\nqQFszu/UtbBEsN8loTnLpOInxaGB1Y8UPm14b2Lo1/3HkoMVh0/UaHJ0TmnZ1r7m\\nfGhfRyAZYRdvT1sB+Eb4b5A2zEZqsTc9IwFOhnI4ZilPoZ5s2xejqrVw3GSvovEh\\ndprrQmvxuh+VQ23y/+/4z9b2xWyDu2zVveB4whqPe2rkgxJrEl4GfLk2DW+dN6j8\\n3Zl4lPoUZYwzkC6raCaHyFlAoaTbqz0H6rvVJYxJPS6UoQAxAA==\\n"}}}}}}},"/authenticate":{"post":{"security":[],"description":"Allowed authentication methods include \\"password\\", \\"cert\\", and \\"ext-jwt\\"\\n","tags":["Authentication"],"summary":"Authenticate via a method supplied via a query string parameter","operationId":"authenticate","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/authenticate"}}}},"responses":{"200":{"description":"The API session associated with the session used to issue the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/currentApiSessionDetailEnvelope"}},"default":{"examples":{"response":{"value":{"data":{"_links":{"self":{"href":"./current-api-session"}},"configTypes":[],"createdAt":"2020-03-09T19:03:49.1883693Z","expiresAt":"2020-03-09T19:34:21.5600897Z","id":"27343114-b44f-406e-9981-f3c4f2f28d54","identity":{"_links":{"self":{"href":"./identities/66352d7b-a6b2-4ce9-85bb-9f18e318704d"}},"id":"66352d7b-a6b2-4ce9-85bb-9f18e318704d","name":"Default Admin","urlName":"identities"},"tags":[{"userField1":123},{"userField2":"asdf"}],"token":"28bb0ed2-0577-4632-ae70-d17106b92871","updatedAt":"2020-03-09T19:04:21.5600897Z"},"meta":{}}}}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The authentication request could not be processed as the credentials are invalid","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"INVALID_AUTH","message":"The authentication request failed","requestId":"5952ed10-3091-474f-a691-47ebab6990dc"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"name":"method","in":"query","required":true,"schema":{"type":"string","enum":["password","cert","ext-jwt"]}}]},"/authenticate/mfa":{"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Completes MFA authentication by submitting a MFA time based one time token or backup code.","tags":["Authentication","MFA"],"summary":"Complete MFA authentication","operationId":"authenticateMfa","requestBody":{"$ref":"#/components/requestBodies/mfaCode"},"responses":{"200":{"description":"Base empty response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"401":{"description":"Base empty response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}}},"/controllers":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of controllers","tags":["Controllers"],"summary":"List controllers","operationId":"listControllers","parameters":[{"name":"limit","in":"query","schema":{"type":"integer"}},{"name":"offset","in":"query","schema":{"type":"integer"}},{"name":"filter","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"A list of controllers","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listControllersEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}}},"/current-api-session":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves the API session that was used to issue the current request","tags":["Current API Session"],"summary":"Return the current API session","operationId":"getCurrentAPISession","responses":{"200":{"description":"The API session associated with the session used to issue the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/currentApiSessionDetailEnvelope"}},"default":{"examples":{"response":{"value":{"data":{"_links":{"self":{"href":"./current-api-session"}},"configTypes":[],"createdAt":"2020-03-09T19:03:49.1883693Z","expiresAt":"2020-03-09T19:34:21.5600897Z","id":"27343114-b44f-406e-9981-f3c4f2f28d54","identity":{"_links":{"self":{"href":"./identities/66352d7b-a6b2-4ce9-85bb-9f18e318704d"}},"id":"66352d7b-a6b2-4ce9-85bb-9f18e318704d","name":"Default Admin","urlName":"identities"},"tags":[{"userField1":123},{"userField2":"asdf"}],"token":"28bb0ed2-0577-4632-ae70-d17106b92871","updatedAt":"2020-03-09T19:04:21.5600897Z"},"meta":{}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"delete":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Terminates the current API session","tags":["Current API Session"],"summary":"Logout","responses":{"200":{"description":"Base empty response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}}},"/current-api-session/certificates":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of certificate resources for the current API session; supports filtering, sorting, and pagination","tags":["Current API Session"],"summary":"List the ephemeral certificates available for the current API Session","operationId":"listCurrentApiSessionCertificates","parameters":[{"name":"limit","in":"query","schema":{"type":"integer"}},{"name":"offset","in":"query","schema":{"type":"integer"}},{"name":"filter","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"A list of the current API Session\'s certificate","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listCurrentApiSessionCertificatesEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Creates an ephemeral certificate for the current API Session. This endpoint expects a PEM encoded CSRs to be provided for fulfillment as a property of a JSON payload. It is up to the client to manage the private key backing the CSR request.","tags":["Current API Session"],"summary":"Creates an ephemeral certificate for the current API Session","operationId":"createCurrentApiSessionCertificate","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/currentApiSessionCertificateCreate"}}},"description":"The payload describing the CSR used to create a session certificate","required":true},"responses":{"201":{"description":"A response of a create API Session certificate","content":{"application/json":{"schema":{"$ref":"#/components/schemas/createCurrentApiSessionCertificateEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}}},"/current-api-session/certificates/{id}":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a single ephemeral certificate by id","tags":["Current API Session"],"summary":"Retrieves an ephemeral certificate","operationId":"detailCurrentApiSessionCertificate","responses":{"200":{"description":"A response containing a single API Session certificate","content":{"application/json":{"schema":{"$ref":"#/components/schemas/detailCurrentApiSessionCertificateEnvelope"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"delete":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Delete an ephemeral certificateby id\\n","tags":["Current API Session"],"summary":"Delete an ephemeral certificate","operationId":"deleteCurrentApiSessionCertificate","responses":{"200":{"description":"The delete request was successful and the resource has been removed","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/current-api-session/service-updates":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves data indicating the last time data relevant to this API Session was altered that would necessitate\\nservice refreshes.\\n","tags":["Current API Session","Services"],"summary":"Returns data indicating whether a client should updates it service list","operationId":"listServiceUpdates","responses":{"200":{"description":"Data indicating necessary service updates","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listCurrentApiSessionServiceUpdatesEnvelope"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}}},"/current-identity":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Returns the identity associated with the API sessions used to issue the current request","tags":["Current Identity"],"summary":"Return the current identity","operationId":"getCurrentIdentity","responses":{"200":{"description":"The identity associated with the API Session used to issue the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/currentIdentityDetailEnvelope"}},"default":{"examples":{"response":{"value":{"data":{"_links":{"edge-router-policies":{"href":"./identities/66352d7b-a6b2-4ce9-85bb-9f18e318704d/edge-routers"},"self":{"href":"./identities/66352d7b-a6b2-4ce9-85bb-9f18e318704d"},"service-policies":{"href":"./identities/66352d7b-a6b2-4ce9-85bb-9f18e318704d/identities"}},"authenticators":{"updb":{"username":"admin"}},"createdAt":"2020-01-13T16:38:13.6854788Z","enrollment":{},"id":"66352d7b-a6b2-4ce9-85bb-9f18e318704d","isAdmin":true,"isDefaultAdmin":true,"name":"Default Admin","roleAttributes":[],"tags":{},"type":{"_links":{"self":{"href":"./identity-types/User"}},"id":"User","name":"User","urlName":"identity-types"},"updatedAt":"2020-01-13T16:38:13.6854788Z"},"meta":{}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}}},"/current-identity/authenticators":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of authenticators assigned to the current API session\'s identity; supports filtering, sorting, and pagination.","tags":["Current API Session"],"summary":"List authenticators for the current identity","operationId":"listCurrentIdentityAuthenticators","parameters":[{"name":"limit","in":"query","schema":{"type":"integer"}},{"name":"offset","in":"query","schema":{"type":"integer"}},{"name":"filter","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"A list of authenticators","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listAuthenticatorsEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}}},"/current-identity/authenticators/{id}":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a single authenticator by id. Will only show authenticators assigned to the API session\'s identity.","tags":["Current API Session"],"summary":"Retrieve an authenticator for the current identity","operationId":"detailCurrentIdentityAuthenticator","responses":{"200":{"description":"A singular authenticator resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/detailAuthenticatorEnvelope"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"put":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update all fields on an authenticator by id.  Will only update authenticators assigned to the API session\'s\\nidentity.\\n","tags":["Current API Session"],"summary":"Update all fields on an authenticator of this identity","operationId":"updateCurrentIdentityAuthenticator","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/authenticatorUpdateWithCurrent"}}},"description":"An authenticator put object","required":true},"responses":{"200":{"description":"The update request was successful and the resource has been altered","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"patch":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update the supplied fields on an authenticator by id. Will only update authenticators assigned to the API\\nsession\'s identity.\\n","tags":["Current API Session"],"summary":"Update the supplied fields on an authenticator of this identity","operationId":"patchCurrentIdentityAuthenticator","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/authenticatorPatchWithCurrent"}}},"description":"An authenticator patch object","required":true},"responses":{"200":{"description":"The patch request was successful and the resource has been altered","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/current-identity/authenticators/{id}/extend":{"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"This endpoint only functions for certificates issued by the controller. 3rd party certificates are not handled.\\nAllows an identity to extend its certificate\'s expiration date by using its current and valid client certificate to submit a CSR. This CSR may be passed in using a new private key, thus allowing private key rotation.\\nThe response from this endpoint is a new client certificate which the client must  be verified via the /authenticators/{id}/extend-verify endpoint.\\nAfter verification is completion any new connections must be made with new certificate. Prior to verification the old client certificate remains active.","tags":["Current API Session","Enroll","Extend Enrollment"],"summary":"Allows the current identity to recieve a new certificate associated with a certificate based authenticator","operationId":"extendCurrentIdentityAuthenticator","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/identityExtendEnrollmentRequest"}}},"required":true},"responses":{"200":{"description":"A response containg the identity\'s new certificate","content":{"application/json":{"schema":{"$ref":"#/components/schemas/identityExtendEnrollmentEnvelope"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/current-identity/authenticators/{id}/extend-verify":{"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"After submitting a CSR for a new client certificate the resulting public certificate must be re-submitted to this endpoint to verify receipt.\\nAfter receipt, the new client certificate must be used for new authentication requests.","tags":["Current API Session","Enroll","Extend Enrollment"],"summary":"Allows the current identity to validate reciept of a new client certificate","operationId":"extendVerifyCurrentIdentityAuthenticator","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/identityExtendValidateEnrollmentRequest"}}},"required":true},"responses":{"200":{"description":"Base empty response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/current-identity/edge-routers":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Lists the Edge Routers that the current identity has access to via policies. The data returned\\nincludes their address and online status\\n","tags":["Current Identity","Edge Router"],"summary":"Return this list of Edge Routers the identity has access to","operationId":"getCurrentIdentityEdgeRouters","responses":{"200":{"description":"A list of edge routers","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listCurrentIdentityEdgeRoutersEnvelope"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}}},"/current-identity/mfa":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Returns details about the current MFA enrollment. If enrollment has not been completed it will return the current MFA configuration details necessary to complete a `POST /current-identity/mfa/verify`.\\n","tags":["Current Identity","MFA"],"summary":"Returns the current status of MFA enrollment","operationId":"detailMfa","responses":{"200":{"description":"The details of an MFA enrollment","content":{"application/json":{"schema":{"$ref":"#/components/schemas/detailMfaEnvelope"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Allows authenticator based MFA enrollment. If enrollment has already been completed, it must be disabled before attempting to re-enroll. Subsequent enrollment request is completed via `POST /current-identity/mfa/verify`\\n","tags":["Current Identity","MFA"],"summary":"Initiate MFA enrollment","operationId":"enrollMfa","responses":{"201":{"description":"The create request was successful and the resource has been added at the following location","content":{"application/json":{"schema":{"$ref":"#/components/schemas/createEnvelope"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"409":{"description":"The identity is already enrolled in MFA","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":null,"cause":null,"causeMessage":"","code":"ALREADY_MFA_ENROLLED","message":"The identity is already enrolled in MFA","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"delete":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Disable MFA for the current identity. Requires a current valid time based one time password if MFA enrollment has been completed. If not, code should be an empty string. If one time passwords are not available and admin account can be used to remove MFA from the identity via `DELETE /identities/<id>/mfa`.\\n","tags":["Current Identity","MFA"],"summary":"Disable MFA for the current identity","operationId":"deleteMfa","parameters":[{"name":"mfa-validation-code","in":"header","schema":{"type":"string"}}],"responses":{"200":{"description":"Base empty response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}}},"/current-identity/mfa/qr-code":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Shows an QR code image for unverified MFA enrollments. 404s if the MFA enrollment has been completed or not started.\\n","tags":["Current Identity","MFA"],"summary":"Show a QR code for unverified MFA enrollments","operationId":"detailMfaQrCode","responses":{"200":{"description":"OK"},"404":{"description":"No MFA enrollment or MFA enrollment is completed"}}}},"/current-identity/mfa/recovery-codes":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Allows the viewing of recovery codes of an MFA enrollment. Requires a current valid time based one time password to interact with. Available after a completed MFA enrollment.\\n","tags":["Current Identity","MFA"],"summary":"For a completed MFA enrollment view the current recovery codes","operationId":"detailMfaRecoveryCodes","parameters":[{"name":"mfa-validation-code","in":"header","schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/mfaCode"}}},"description":"An MFA validation request"},"responses":{"200":{"description":"The recovery codes of an MFA enrollment","content":{"application/json":{"schema":{"$ref":"#/components/schemas/detailMfaRecoveryCodesEnvelope"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Allows regeneration of recovery codes of an MFA enrollment. Requires a current valid time based one time password to interact with. Available after a completed MFA enrollment. This replaces all existing recovery codes.\\n","tags":["Current Identity","MFA"],"summary":"For a completed MFA enrollment regenerate the recovery codes","operationId":"createMfaRecoveryCodes","requestBody":{"$ref":"#/components/requestBodies/mfaCode"},"responses":{"200":{"description":"Base empty response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}}},"/current-identity/mfa/verify":{"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Completes MFA enrollment by accepting a time based one time password as verification. Called after MFA enrollment has been initiated via `POST /current-identity/mfa`.\\n","tags":["Current Identity","MFA"],"summary":"Complete MFA enrollment by verifying a time based one time token","operationId":"verifyMfa","requestBody":{"$ref":"#/components/requestBodies/mfaCode"},"responses":{"200":{"description":"Base empty response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}}},"/enroll":{"post":{"description":"present a OTT and CSR to receive a long-lived client certificate","tags":["Enroll"],"summary":"Enroll an identity via one-time-token","operationId":"enroll","responses":{"200":{"description":"A response for multi-format legacy enrollment.","content":{"application/x-pem-file":{"schema":{"type":"string"}},"application/json":{"schema":{"type":"string"}}}},"404":{"description":"The requested resource does not exist","content":{"application/x-pem-file":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"}},"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/x-pem-file":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"}},"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"name":"token","in":"query","schema":{"type":"string","format":"uuid"}},{"name":"method","in":"query","schema":{"type":"string"}}]},"/enroll/ca":{"post":{"description":"For CA auto enrollment, an identity is not created beforehand.\\nInstead one will be created during enrollment. The client will present a client certificate that is signed by a\\nCertificate Authority that has been added and verified (See POST /cas and POST /cas/{id}/verify).\\n\\nDuring this process no CSRs are requires as the client should already be in possession of a valid certificate.\\n","tags":["Enroll"],"summary":"Enroll an identity with a pre-exchanged certificate","operationId":"enrollCa","responses":{"200":{"description":"Base empty response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}}},"/enroll/challenge":{"post":{"description":"A caller may submit a nonce and a key id (kid) from the enrollment JWKS endpoint or enrollment JWT that will\\nbe used to sign the nonce. The resulting signature may be validated with the associated public key in order\\nto verify a networks identity during enrollment. The nonce must be a valid formatted UUID.\\n","tags":["Enroll"],"summary":"Allows verification of a controller or cluster of controllers as being the valid target for enrollment.","operationId":"enrollmentChallenge","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/nonceChallenge"}}},"required":true},"responses":{"200":{"description":"A nonce challenge response. The contents will be the signature of the nonce, the key id used, and algorithm used to produce the signature.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/nonceSignature"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}}},"/enroll/erott":{"post":{"description":"Enrolls an edge-router via a one-time-token to establish a certificate based identity.\\n","tags":["Enroll"],"summary":"Enroll an edge-router","operationId":"enrollErOtt","responses":{"200":{"description":"A response containing the edge routers signed certificates (server chain, server cert, CAs).","content":{"application/json":{"schema":{"$ref":"#/components/schemas/enrollmentCertsEnvelope"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[]},"/enroll/extend/router":{"post":{"description":"Allows a router to extend its certificates\' expiration date by\\nusing its current and valid client certificate to submit a CSR. This CSR may\\nbe passed in using a new private key, thus allowing private key rotation or swapping.\\n\\nAfter completion any new connections must be made with certificates returned from a 200 OK\\nresponse. The previous client certificate is rendered invalid for use with the controller even if it\\nhas not expired.\\n\\nThis request must be made using the existing, valid, client certificate.\\n","tags":["Enroll","Extend Enrollment"],"summary":"Extend the life of a currently enrolled router\'s certificates","operationId":"extendRouterEnrollment","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/routerExtendEnrollmentRequest"}}},"required":true},"responses":{"200":{"description":"A response containing the edge routers new signed certificates (server chain, server cert, CAs).","content":{"application/json":{"schema":{"$ref":"#/components/schemas/enrollmentCertsEnvelope"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}}},"/enroll/jwks":{"get":{"description":"Returns a list of JSON Web Keys (JWKS) that are used for enrollment signing. The keys listed here are used\\nto sign and co-sign enrollment JWTs. They can be verified through a challenge endpoint, using the public keys\\nfrom this endpoint to verify the target machine has possession of the related private key.\\n","tags":["Enroll"],"summary":"List JSON Web Keys associated with enrollment","operationId":"getEnrollmentJwks","responses":{"200":{"description":"A JWKS response for enrollment.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/jwks"}}}}}}},"/enroll/ott":{"post":{"description":"Enroll an identity via a one-time-token which is supplied via a query string parameter. This enrollment method\\nexpects a PEM encoded CSRs to be provided for fulfillment. It is up to the enrolling identity to manage the\\nprivate key backing the CSR request.\\n","tags":["Enroll"],"summary":"Enroll an identity via one-time-token","operationId":"enrollOtt","responses":{"200":{"description":"A response containing and identities client certificate chains","content":{"application/json":{"schema":{"$ref":"#/components/schemas/enrollmentCertsEnvelope"}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[]},"/enroll/ottca":{"post":{"description":"Enroll an identity via a one-time-token that also requires a pre-exchanged client certificate to match a\\nCertificate Authority that has been added and verified (See POST /cas and POST /cas{id}/verify). The client\\nmust present a client certificate signed by CA associated with the enrollment. This enrollment is similar to\\nCA auto enrollment except that is required the identity to be pre-created.\\n\\nAs the client certificate has been pre-exchanged there is no CSR input to this enrollment method.\\n","tags":["Enroll"],"summary":"Enroll an identity via one-time-token with a pre-exchanged client certificate","operationId":"enrollOttCa","responses":{"200":{"description":"Base empty response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[]},"/enroll/updb":{"post":{"description":"Enrolls an identity via a one-time-token to establish an initial username and password combination\\n","tags":["Enroll"],"summary":"Enroll an identity via one-time-token","operationId":"enrollUpdb","responses":{"200":{"description":"Base empty response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"name":"token","in":"query","required":true,"schema":{"type":"string","format":"uuid"}}]},"/enumerated-capabilities":{"get":{"security":[],"tags":["Informational"],"summary":"Returns all capabilities this version of the controller is aware of, enabled or not.","operationId":"listEnumeratedCapabilities","responses":{"200":{"description":"A typed and enumerated list of capabilities","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listEnumeratedCapabilitiesEnvelope"}}}}}}},"/external-jwt-signers":{"get":{"description":"Retrieves a list of external JWT signers for authentication","tags":["External JWT Signer"],"summary":"List Client Authentication External JWT","operationId":"listExternalJwtSigners","parameters":[{"name":"limit","in":"query","schema":{"type":"integer"}},{"name":"offset","in":"query","schema":{"type":"integer"}},{"name":"filter","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"A list of External JWT Signers","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listClientExternalJwtSignersEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}}},"/network-jwts":{"get":{"description":"Returns a list of JWTs for trusting a network","tags":["Enrollment"],"summary":"Returns a list of JWTs suitable for bootstrapping network trust.","operationId":"listNetworkJWTs","responses":{"200":{"description":"A list of network JWTs","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listNetworkJWTsEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}}},"/posture-response":{"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Submits posture responses","tags":["Posture Checks"],"summary":"Submit a posture response to a posture query","operationId":"createPostureResponse","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/postureResponseCreate"}}},"description":"A Posture Response","required":true},"responses":{"201":{"description":"Contains a list of services that have had their timers altered","content":{"application/json":{"schema":{"$ref":"#/components/schemas/postureResponseEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}}},"/posture-response-bulk":{"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Submits posture responses","tags":["Posture Checks"],"summary":"Submit multiple posture responses","operationId":"createPostureResponseBulk","requestBody":{"content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/postureResponseCreate"}}}},"description":"A Posture Response","required":true},"responses":{"200":{"description":"Contains a list of services that have had their timers altered","content":{"application/json":{"schema":{"$ref":"#/components/schemas/postureResponseEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}}},"/protocols":{"get":{"security":[],"tags":["Informational"],"summary":"Return a list of the listening Edge protocols","operationId":"listProtocols","responses":{"200":{"description":"A list of supported Edge protocols","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listProtocolsEnvelope"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}}},"/services":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of config resources; supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Service"],"summary":"List services","operationId":"listServices","parameters":[{"name":"limit","in":"query","schema":{"type":"integer"}},{"name":"offset","in":"query","schema":{"type":"integer"}},{"name":"filter","in":"query","schema":{"type":"string"}},{"name":"configTypes","in":"query","explode":true,"schema":{"type":"array","items":{"type":"string"}}},{"name":"roleFilter","in":"query","explode":true,"schema":{"type":"array","items":{"type":"string"}}},{"name":"roleSemantic","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"A list of services","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listServicesEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}}},"/services/{id}":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a single service by id. Requires admin access.","tags":["Service"],"summary":"Retrieves a single service","operationId":"detailService","responses":{"200":{"description":"A single service","content":{"application/json":{"schema":{"$ref":"#/components/schemas/detailServiceEnvelope"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"put":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update all fields on a service by id. Requires admin access.","tags":["Service"],"summary":"Update all fields on a service","operationId":"updateService","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/serviceUpdate"}}},"description":"A service update object","required":true},"responses":{"200":{"description":"The update request was successful and the resource has been altered","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"delete":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Delete a service by id. Requires admin access.","tags":["Service"],"summary":"Delete a service","operationId":"deleteService","responses":{"200":{"description":"The delete request was successful and the resource has been removed","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"409":{"description":"The resource requested to be removed/altered cannot be as it is referenced by another object.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"causeMessage":"referenced by /some-resource/05f4f710-c155-4a74-86d5-77558eb9cb42","code":"CONFLICT_CANNOT_MODIFY_REFERENCED","message":"The resource cannot be deleted/modified. Remove all referencing resources first.","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"patch":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update the supplied fields on a service. Requires admin access.","tags":["Service"],"summary":"Update the supplied fields on a service","operationId":"patchService","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/servicePatch"}}},"description":"A service patch object","required":true},"responses":{"200":{"description":"The patch request was successful and the resource has been altered","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/services/{id}/edge-routers":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves the list of edge routers permitted to handle traffic for the specified service\\n","tags":["Service"],"summary":"List of edge routers permitted to handle traffic for the specified service","operationId":"listServiceEdgeRouters","parameters":[{"name":"limit","in":"query","schema":{"type":"integer"}},{"name":"offset","in":"query","schema":{"type":"integer"}},{"name":"filter","in":"query","schema":{"type":"string"}},{"description":"an optional JWT token use to authenticate the request. If provided, the token must be valid else a not authorized response is returned.","name":"session-token","in":"header","schema":{"type":"string"}}],"responses":{"200":{"description":"A list of edge routers suitable for dialing or binding the specified service by the authenticated identity","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listServiceEdgeRoutersEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/services/{id}/terminators":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of terminator resources that are assigned specific service; supports filtering, sorting, and pagination.\\n","tags":["Service"],"summary":"List of terminators assigned to a service","operationId":"listServiceTerminators","parameters":[{"name":"limit","in":"query","schema":{"type":"integer"}},{"name":"offset","in":"query","schema":{"type":"integer"}},{"name":"filter","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"A list of terminators","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listClientTerminatorsEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/sessions":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of active sessions resources; supports filtering, sorting, and pagination.\\n\\nSessions are tied to an API session and are moved when an API session times out or logs out. Active sessions\\n(i.e. Ziti SDK connected to an edge router) will keep the session and API session marked as active.\\n","tags":["Session"],"summary":"List sessions","operationId":"listSessions","parameters":[{"name":"limit","in":"query","schema":{"type":"integer"}},{"name":"offset","in":"query","schema":{"type":"integer"}},{"name":"filter","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"A list of sessions","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listSessionsEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Create a session resource.","tags":["Session"],"summary":"Create a session resource","operationId":"createSession","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/sessionCreate"}}},"description":"A session to create","required":true},"responses":{"201":{"description":"The create request was successful and the resource has been added at the following location","content":{"application/json":{"schema":{"$ref":"#/components/schemas/sessionCreateEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}}},"/sessions/{id}":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a single session by id.","tags":["Session"],"summary":"Retrieves a single session","operationId":"detailSession","responses":{"200":{"description":"A single session","content":{"application/json":{"schema":{"$ref":"#/components/schemas/detailSessionEnvelope"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"delete":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Delete a session by id.","tags":["Session"],"summary":"Delete a session","operationId":"deleteSession","responses":{"200":{"description":"The delete request was successful and the resource has been removed","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"409":{"description":"The resource requested to be removed/altered cannot be as it is referenced by another object.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"causeMessage":"referenced by /some-resource/05f4f710-c155-4a74-86d5-77558eb9cb42","code":"CONFLICT_CANNOT_MODIFY_REFERENCED","message":"The resource cannot be deleted/modified. Remove all referencing resources first.","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/specs":{"get":{"security":[],"description":"Returns a list of spec files embedded within the controller for consumption/documentation/code geneartion","tags":["Informational"],"summary":"Returns a list of API specs","operationId":"listSpecs","responses":{"200":{"description":"A list of specifications","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listSpecsEnvelope"}}}}}}},"/specs/{id}":{"get":{"security":[],"description":"Returns single spec resource embedded within the controller for consumption/documentation/code geneartion","tags":["Informational"],"summary":"Return a single spec resource","operationId":"detailSpec","responses":{"200":{"description":"A single specification","content":{"application/json":{"schema":{"$ref":"#/components/schemas/detailSpecEnvelope"}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/specs/{id}/spec":{"get":{"security":[],"description":"Return the body of the specification (i.e. Swagger, OpenAPI 2.0, 3.0, etc).","tags":["Informational"],"summary":"Returns the spec\'s file","operationId":"detailSpecBody","responses":{"200":{"description":"Returns the document that represents the specification","content":{"text/yaml":{"schema":{"$ref":"#/components/schemas/detailSpecBodyEnvelope"}},"application/json":{"schema":{"$ref":"#/components/schemas/detailSpecBodyEnvelope"}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/version":{"get":{"security":[],"tags":["Informational"],"summary":"Returns version information","operationId":"listVersion","responses":{"200":{"description":"Version information for the controller","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listVersionEnvelope"}}}}}}}},"servers":[{"url":"https://demo.ziti.dev/edge/client/v1"}],"components":{"requestBodies":{"mfaCode":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/mfaCode"}}},"description":"An MFA validation request","required":true}},"securitySchemes":{"oauth2":{"type":"oauth2","flows":{"authorizationCode":{"authorizationUrl":"/oidc/authorize","tokenUrl":"/oidc/token","scopes":{"openid":"openid"}}}},"ztSession":{"description":"An API Key that is provided post authentication","type":"apiKey","name":"zt-session","in":"header"}},"schemas":{"apiAddress":{"type":"object","properties":{"url":{"type":"string"},"version":{"type":"string"}}},"apiAddressArray":{"type":"array","items":{"$ref":"#/components/schemas/apiAddress"}},"apiAddressList":{"type":"object","additionalProperties":{"$ref":"#/components/schemas/apiAddressArray"}},"apiError":{"type":"object","properties":{"args":{"$ref":"#/components/schemas/apiErrorArgs"},"cause":{"$ref":"#/components/schemas/apiErrorCause"},"causeMessage":{"type":"string"},"code":{"type":"string"},"data":{"type":"object","additionalProperties":true},"message":{"type":"string"},"requestId":{"type":"string"}}},"apiErrorArgs":{"type":"object","properties":{"urlVars":{"type":"object","additionalProperties":{"type":"string"}}}},"apiErrorCause":{"allOf":[{"$ref":"#/components/schemas/apiFieldError"},{"$ref":"#/components/schemas/apiError"}]},"apiErrorEnvelope":{"type":"object","required":["meta","error"],"properties":{"error":{"$ref":"#/components/schemas/apiError"},"meta":{"$ref":"#/components/schemas/meta"}}},"apiFieldError":{"type":"object","properties":{"field":{"type":"string"},"reason":{"type":"string"},"value":{"description":"can be any value - string, number, boolean, array or object"}}},"apiSessionDetail":{"description":"An API Session object","type":"object","allOf":[{"$ref":"#/components/schemas/baseEntity"},{"type":"object","required":["token","identity","identityId","configTypes","ipAddress","authQueries","cachedUpdatedAt","isMfaRequired","isMfaComplete","authenticatorId","isCertExtendable"],"properties":{"authQueries":{"$ref":"#/components/schemas/authQueryList"},"authenticatorId":{"type":"string"},"cachedLastActivityAt":{"type":"string","format":"date-time"},"configTypes":{"type":"array","items":{"type":"string"}},"identity":{"$ref":"#/components/schemas/entityRef"},"identityId":{"type":"string"},"ipAddress":{"type":"string"},"isCertExtendable":{"type":"boolean"},"isMfaComplete":{"type":"boolean"},"isMfaRequired":{"type":"boolean"},"lastActivityAt":{"type":"string","format":"date-time"},"token":{"type":"string"}}}]},"apiVersion":{"type":"object","required":["path"],"properties":{"apiBaseUrls":{"type":"array","items":{"type":"string"}},"path":{"type":"string"},"version":{"type":"string"}}},"attributes":{"description":"A set of strings used to loosly couple this resource to policies","type":"array","items":{"type":"string"},"x-omitempty":true,"nullable":true},"authQueryDetail":{"type":"object","required":["provider"],"properties":{"clientId":{"type":"string"},"format":{"$ref":"#/components/schemas/mfaFormats"},"httpMethod":{"type":"string"},"httpUrl":{"type":"string"},"id":{"type":"string"},"maxLength":{"type":"integer"},"minLength":{"type":"integer"},"provider":{"$ref":"#/components/schemas/mfaProviders"},"scopes":{"type":"array","items":{"type":"string"}},"typeId":{"$ref":"#/components/schemas/authQueryType"}}},"authQueryList":{"type":"array","items":{"$ref":"#/components/schemas/authQueryDetail"}},"authQueryType":{"type":"string","enum":["MFA","TOTP","EXT-JWT"]},"authenticate":{"description":"A generic authenticate object meant for use with the /authenticate path. Required fields depend on authentication method.","type":"object","properties":{"configTypes":{"$ref":"#/components/schemas/configTypes"},"envInfo":{"$ref":"#/components/schemas/envInfo"},"password":{"$ref":"#/components/schemas/password"},"sdkInfo":{"$ref":"#/components/schemas/sdkInfo"},"username":{"$ref":"#/components/schemas/username"}}},"authenticatorDetail":{"description":"A singular authenticator resource","type":"object","allOf":[{"$ref":"#/components/schemas/baseEntity"},{"type":"object","required":["method","identityId","identity"],"properties":{"certPem":{"type":"string"},"fingerprint":{"type":"string"},"identity":{"$ref":"#/components/schemas/entityRef"},"identityId":{"type":"string"},"isIssuedByNetwork":{"type":"boolean"},"method":{"type":"string"},"username":{"type":"string"}}}]},"authenticatorList":{"description":"An array of authenticator resources","type":"array","items":{"$ref":"#/components/schemas/authenticatorDetail"}},"authenticatorPatch":{"description":"All of the fields on an authenticator that may be updated","type":"object","properties":{"password":{"$ref":"#/components/schemas/passwordNullable"},"tags":{"$ref":"#/components/schemas/tags"},"username":{"$ref":"#/components/schemas/usernameNullable"}}},"authenticatorPatchWithCurrent":{"description":"All of the fields on an authenticator that may be updated","type":"object","allOf":[{"$ref":"#/components/schemas/authenticatorPatch"},{"type":"object","required":["currentPassword"],"properties":{"currentPassword":{"$ref":"#/components/schemas/password"}}}]},"authenticatorUpdate":{"description":"All of the fields on an authenticator that will be updated","type":"object","required":["username","password"],"properties":{"password":{"$ref":"#/components/schemas/password"},"tags":{"$ref":"#/components/schemas/tags"},"username":{"$ref":"#/components/schemas/username"}}},"authenticatorUpdateWithCurrent":{"description":"All of the fields on an authenticator that will be updated","type":"object","allOf":[{"$ref":"#/components/schemas/authenticatorUpdate"},{"type":"object","required":["currentPassword"],"properties":{"currentPassword":{"$ref":"#/components/schemas/password"}}}]},"baseEntity":{"description":"Fields shared by all Edge API entities","type":"object","required":["id","createdAt","updatedAt","_links"],"properties":{"_links":{"$ref":"#/components/schemas/links"},"createdAt":{"type":"string","format":"date-time"},"id":{"type":"string"},"tags":{"$ref":"#/components/schemas/tags"},"updatedAt":{"type":"string","format":"date-time"}}},"capabilities":{"type":"string","enum":["OIDC_AUTH","HA_CONTROLLER"]},"clientExternalJwtSignerDetail":{"description":"A External JWT Signer resource","type":"object","allOf":[{"$ref":"#/components/schemas/baseEntity"},{"type":"object","required":["name","externalAuthUrl"],"properties":{"clientId":{"type":"string","nullable":true},"externalAuthUrl":{"type":"string","format":"url"},"name":{"type":"string","example":"MyApps Signer"},"scopes":{"type":"array","items":{"type":"string"}}}}]},"clientExternalJwtSignerList":{"description":"An array of External JWT Signers resources","type":"array","items":{"$ref":"#/components/schemas/clientExternalJwtSignerDetail"}},"commonEdgeRouterProperties":{"type":"object","required":["hostname","name","supportedProtocols","syncStatus","isOnline","cost","noTraversal","disabled"],"properties":{"appData":{"$ref":"#/components/schemas/tags"},"cost":{"type":"integer","maximum":65535,"minimum":0,"nullable":true},"disabled":{"type":"boolean"},"hostname":{"type":"string"},"isOnline":{"type":"boolean"},"name":{"type":"string"},"noTraversal":{"type":"boolean","nullable":true},"supportedProtocols":{"type":"object","additionalProperties":{"type":"string"}},"syncStatus":{"type":"string"}}},"configTypes":{"description":"Specific configuration types that should be returned","type":"array","items":{"type":"string"}},"controllerDetail":{"description":"A controller resource","type":"object","allOf":[{"$ref":"#/components/schemas/baseEntity"},{"type":"object","required":["name","certPem","fingerprint","isOnline","lastJoinedAt"],"properties":{"apiAddresses":{"$ref":"#/components/schemas/apiAddressList"},"certPem":{"type":"string"},"ctrlAddress":{"type":"string","nullable":true},"fingerprint":{"type":"string"},"isOnline":{"type":"boolean"},"lastJoinedAt":{"type":"string","format":"date-time"},"name":{"type":"string"}}}]},"controllersList":{"description":"An array of controller resources","type":"array","items":{"$ref":"#/components/schemas/controllerDetail"}},"createCurrentApiSessionCertificateEnvelope":{"required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/currentApiSessionCertificateCreateResponse"},"meta":{"$ref":"#/components/schemas/meta"}}},"createEnvelope":{"type":"object","properties":{"data":{"$ref":"#/components/schemas/createLocation"},"meta":{"$ref":"#/components/schemas/meta"}}},"createLocation":{"type":"object","properties":{"_links":{"$ref":"#/components/schemas/links"},"id":{"type":"string"}}},"currentApiSessionCertificateCreate":{"type":"object","required":["csr"],"properties":{"csr":{"type":"string"}}},"currentApiSessionCertificateCreateResponse":{"allOf":[{"$ref":"#/components/schemas/createLocation"},{"type":"object","required":["certificate"],"properties":{"cas":{"type":"string"},"certificate":{"type":"string"}}}]},"currentApiSessionCertificateDetail":{"type":"object","allOf":[{"$ref":"#/components/schemas/baseEntity"},{"type":"object","required":["subject","fingerprint","validFrom","validTo","certificate"],"properties":{"certificate":{"type":"string"},"fingerprint":{"type":"string"},"subject":{"type":"string"},"validFrom":{"type":"string","format":"date-time"},"validTo":{"type":"string","format":"date-time"}}}]},"currentApiSessionCertificateList":{"type":"array","items":{"$ref":"#/components/schemas/currentApiSessionCertificateDetail"}},"currentApiSessionDetail":{"description":"An API Session object for the current API session","type":"object","allOf":[{"$ref":"#/components/schemas/apiSessionDetail"},{"type":"object","required":["expiresAt","expirationSeconds"],"properties":{"expirationSeconds":{"type":"integer"},"expiresAt":{"type":"string","format":"date-time"}}}]},"currentApiSessionDetailEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/currentApiSessionDetail"},"meta":{"$ref":"#/components/schemas/meta"}}},"currentApiSessionServiceUpdateList":{"type":"object","required":["lastChangeAt"],"properties":{"lastChangeAt":{"type":"string","format":"date-time"}}},"currentIdentityDetailEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/identityDetail"},"meta":{"$ref":"#/components/schemas/meta"}}},"currentIdentityEdgeRouterDetail":{"description":"A detail edge router resource","type":"object","allOf":[{"$ref":"#/components/schemas/baseEntity"},{"$ref":"#/components/schemas/commonEdgeRouterProperties"}]},"currentIdentityEdgeRouterList":{"description":"A list of edge router resources","type":"array","items":{"$ref":"#/components/schemas/currentIdentityEdgeRouterDetail"}},"detailAuthenticatorEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/authenticatorDetail"},"meta":{"$ref":"#/components/schemas/meta"}}},"detailCurrentApiSessionCertificateEnvelope":{"required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/currentApiSessionCertificateDetail"},"meta":{"$ref":"#/components/schemas/meta"}}},"detailMfa":{"type":"object","allOf":[{"$ref":"#/components/schemas/baseEntity"},{"required":["isVerified"],"properties":{"isVerified":{"type":"boolean"},"provisioningUrl":{"description":"Not provided if MFA verification has been completed","type":"string"},"recoveryCodes":{"description":"Not provided if MFA verification has been completed","type":"array","items":{"type":"string"}}}}]},"detailMfaEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/detailMfa"},"meta":{"$ref":"#/components/schemas/meta"}}},"detailMfaRecoveryCodes":{"type":"object","allOf":[{"$ref":"#/components/schemas/baseEntity"},{"required":["recoveryCodes"],"properties":{"recoveryCodes":{"type":"array","items":{"type":"string"}}}}]},"detailMfaRecoveryCodesEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/detailMfaRecoveryCodes"},"meta":{"$ref":"#/components/schemas/meta"}}},"detailServiceEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/serviceDetail"},"meta":{"$ref":"#/components/schemas/meta"}}},"detailSessionEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/sessionDetail"},"meta":{"$ref":"#/components/schemas/meta"}}},"detailSpecBodyEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/specBodyDetail"},"meta":{"$ref":"#/components/schemas/meta"}}},"detailSpecEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/specDetail"},"meta":{"$ref":"#/components/schemas/meta"}}},"dialBind":{"type":"string","enum":["Dial","Bind","Invalid"]},"dialBindArray":{"type":"array","items":{"$ref":"#/components/schemas/dialBind"}},"empty":{"type":"object","required":["meta","data"],"properties":{"data":{"type":"object","example":{}},"meta":{"$ref":"#/components/schemas/meta"}}},"enrollmentCerts":{"type":"object","properties":{"ca":{"description":"A PEM encoded set of CA certificates to trust","type":"string"},"cert":{"description":"A PEM encoded set of certificates to use as the client chain","type":"string"},"serverCert":{"description":"A PEM encoded set of certificates to use as the servers chain","type":"string"}}},"enrollmentCertsEnvelope":{"type":"object","properties":{"data":{"$ref":"#/components/schemas/enrollmentCerts"},"meta":{"$ref":"#/components/schemas/meta"}}},"entityRef":{"description":"A reference to another resource and links to interact with it","type":"object","properties":{"_links":{"$ref":"#/components/schemas/links"},"entity":{"type":"string"},"id":{"type":"string"},"name":{"type":"string"}}},"envInfo":{"description":"Environment information an authenticating client may provide","type":"object","properties":{"arch":{"type":"string","maxLength":255},"domain":{"type":"string","maxLength":253},"hostname":{"type":"string","maxLength":253},"os":{"type":"string","maxLength":255},"osRelease":{"type":"string","maxLength":255},"osVersion":{"type":"string","maxLength":255}}},"erOttEnrollmentRequest":{"type":"object","properties":{"clientCsr":{"type":"string"},"serverCsr":{"type":"string"},"token":{"type":"string"}}},"identityAuthenticators":{"type":"object","properties":{"cert":{"type":"object","properties":{"fingerprint":{"type":"string"},"id":{"type":"string"}}},"updb":{"type":"object","properties":{"id":{"type":"string"},"username":{"type":"string"}}}}},"identityDetail":{"description":"Detail of a specific identity","type":"object","allOf":[{"$ref":"#/components/schemas/baseEntity"},{"type":"object","required":["name","type","typeId","isDefaultAdmin","isAdmin","authenticators","enrollment","envInfo","sdkInfo","roleAttributes","hasEdgeRouterConnection","edgeRouterConnectionStatus","hasApiSession","isMfaEnabled","serviceHostingPrecedences","serviceHostingCosts","defaultHostingCost","authPolicyId","authPolicy","externalId","disabled"],"properties":{"appData":{"$ref":"#/components/schemas/tags"},"authPolicy":{"$ref":"#/components/schemas/entityRef"},"authPolicyId":{"type":"string"},"authenticators":{"$ref":"#/components/schemas/identityAuthenticators"},"defaultHostingCost":{"$ref":"#/components/schemas/terminatorCost"},"defaultHostingPrecedence":{"$ref":"#/components/schemas/terminatorPrecedence"},"disabled":{"type":"boolean"},"disabledAt":{"type":"string","format":"date-time","nullable":true},"disabledUntil":{"type":"string","format":"date-time","nullable":true},"edgeRouterConnectionStatus":{"type":"string","enum":["online","offline","unknown"]},"enrollment":{"$ref":"#/components/schemas/identityEnrollments"},"envInfo":{"$ref":"#/components/schemas/envInfo"},"externalId":{"type":"string","nullable":true},"hasApiSession":{"type":"boolean"},"hasEdgeRouterConnection":{"type":"boolean"},"isAdmin":{"type":"boolean"},"isDefaultAdmin":{"type":"boolean"},"isMfaEnabled":{"type":"boolean"},"name":{"type":"string"},"roleAttributes":{"$ref":"#/components/schemas/attributes"},"sdkInfo":{"$ref":"#/components/schemas/sdkInfo"},"serviceHostingCosts":{"$ref":"#/components/schemas/terminatorCostMap"},"serviceHostingPrecedences":{"$ref":"#/components/schemas/terminatorPrecedenceMap"},"type":{"$ref":"#/components/schemas/entityRef"},"typeId":{"type":"string"}}}]},"identityEnrollments":{"type":"object","properties":{"ott":{"type":"object","properties":{"expiresAt":{"type":"string","format":"date-time"},"id":{"type":"string"},"jwt":{"type":"string"},"token":{"type":"string"}}},"ottca":{"type":"object","properties":{"ca":{"$ref":"#/components/schemas/entityRef"},"caId":{"type":"string"},"expiresAt":{"type":"string","format":"date-time"},"id":{"type":"string"},"jwt":{"type":"string"},"token":{"type":"string"}}},"updb":{"type":"object","properties":{"expiresAt":{"type":"string","format":"date-time"},"id":{"type":"string"},"jwt":{"type":"string"},"token":{"type":"string"}}}}},"identityExtendCerts":{"type":"object","properties":{"ca":{"description":"A PEM encoded set of CA certificates","type":"string"},"clientCert":{"description":"A PEM encoded client certificate","type":"string"}}},"identityExtendEnrollmentEnvelope":{"type":"object","properties":{"data":{"$ref":"#/components/schemas/identityExtendCerts"},"meta":{"$ref":"#/components/schemas/meta"}}},"identityExtendEnrollmentRequest":{"type":"object","required":["clientCertCsr"],"properties":{"clientCertCsr":{"type":"string"}}},"identityExtendValidateEnrollmentRequest":{"type":"object","required":["clientCert"],"properties":{"clientCert":{"description":"A PEM encoded client certificate previously returned after an extension request","type":"string"}}},"jwk":{"type":"object","required":["kty"],"properties":{"alg":{"description":"Algorithm intended for use with the key.","type":"string"},"crv":{"description":"Curve for ECC Public Keys.","type":"string"},"d":{"description":"ECC Private Key or RSA Private Exponent.","type":"string"},"dp":{"description":"First Factor CRT Exponent for RSA.","type":"string"},"dq":{"description":"Second Factor CRT Exponent for RSA.","type":"string"},"e":{"description":"Exponent for RSA Public Key.","type":"string"},"key_ops":{"description":"Intended key operations, e.g., sign, verify.","type":"array","items":{"type":"string"}},"kid":{"description":"Key ID.","type":"string"},"kty":{"description":"Key Type.","type":"string"},"n":{"description":"Modulus for RSA Public Key.","type":"string"},"oth":{"description":"Other Primes Info not represented by the first two primes.","type":"array","items":{"$ref":"#/components/schemas/otherPrime"}},"p":{"description":"First Prime Factor for RSA.","type":"string"},"q":{"description":"Second Prime Factor for RSA.","type":"string"},"qi":{"description":"First CRT Coefficient for RSA.","type":"string"},"use":{"description":"Public key use, e.g., sig (signature) or enc (encryption).","type":"string"},"x":{"description":"X Coordinate for ECC Public Keys.","type":"string"},"x5c":{"description":"X.509 Certificate Chain.","type":"array","items":{"type":"string"}},"x5t":{"description":"X.509 Certificate SHA-1 Thumbprint.","type":"string"},"x5t#S256":{"description":"X.509 Certificate SHA-256 Thumbprint.","type":"string"},"x5u":{"description":"X.509 URL.","type":"string"},"y":{"description":"Y Coordinate for ECC Public Keys.","type":"string"}}},"jwks":{"type":"object","properties":{"keys":{"type":"array","items":{"$ref":"#/components/schemas/jwk"}}}},"link":{"description":"A link to another resource","type":"object","required":["href"],"properties":{"comment":{"type":"string"},"href":{"type":"string","format":"uri"},"method":{"type":"string"}}},"links":{"description":"A map of named links","type":"object","additionalProperties":{"$ref":"#/components/schemas/link"},"x-omitempty":false},"listAuthenticatorsEnvelope":{"type":"object","properties":{"data":{"$ref":"#/components/schemas/authenticatorList"},"meta":{"$ref":"#/components/schemas/meta"}}},"listClientExternalJwtSignersEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/clientExternalJwtSignerList"},"meta":{"$ref":"#/components/schemas/meta"}}},"listClientTerminatorsEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/terminatorClientList"},"meta":{"$ref":"#/components/schemas/meta"}}},"listControllersEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/controllersList"},"meta":{"$ref":"#/components/schemas/meta"}}},"listCurrentApiSessionCertificatesEnvelope":{"required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/currentApiSessionCertificateList"},"meta":{"$ref":"#/components/schemas/meta"}}},"listCurrentApiSessionServiceUpdatesEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/currentApiSessionServiceUpdateList"},"meta":{"$ref":"#/components/schemas/meta"}}},"listCurrentIdentityEdgeRoutersEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/currentIdentityEdgeRouterList"},"meta":{"$ref":"#/components/schemas/meta"}}},"listEnumeratedCapabilitiesEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"type":"array","items":{"$ref":"#/components/schemas/capabilities"}},"meta":{"$ref":"#/components/schemas/meta"}}},"listNetworkJWTsEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/networkJWTList"},"meta":{"$ref":"#/components/schemas/meta"}}},"listProtocols":{"type":"object","additionalProperties":{"$ref":"#/components/schemas/protocol"}},"listProtocolsEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/listProtocols"},"meta":{"$ref":"#/components/schemas/meta"}}},"listServiceEdgeRoutersEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/serviceEdgeRouters"},"meta":{"$ref":"#/components/schemas/meta"}}},"listServicesEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/serviceList"},"meta":{"$ref":"#/components/schemas/meta"}}},"listSessionsEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/sessionList"},"meta":{"$ref":"#/components/schemas/meta"}}},"listSpecsEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/specList"},"meta":{"$ref":"#/components/schemas/meta"}}},"listVersionEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/version"},"meta":{"$ref":"#/components/schemas/meta"}}},"meta":{"type":"object","properties":{"apiEnrollmentVersion":{"type":"string"},"apiVersion":{"type":"string"},"filterableFields":{"type":"array","items":{"type":"string"},"x-omitempty":true},"pagination":{"$ref":"#/components/schemas/pagination"}}},"mfaCode":{"type":"object","required":["code"],"properties":{"code":{"type":"string"}}},"mfaFormats":{"type":"string","enum":["numeric","alpha","alphaNumeric"]},"mfaProviders":{"type":"string","enum":["ziti","url"]},"networkJWT":{"description":"A network JWT","type":"object","allOf":[{"type":"object","required":["name","token"],"properties":{"name":{"type":"string"},"token":{"type":"string"}}}]},"networkJWTList":{"description":"An array of network JWTs","type":"array","items":{"$ref":"#/components/schemas/networkJWT"}},"nonceChallenge":{"type":"object","required":["nonce","keyId"],"properties":{"keyId":{"type":"string"},"nonce":{"type":"string","format":"uuid"}}},"nonceSignature":{"type":"object","required":["signature","algorithm","kid","caPool"],"properties":{"algorithm":{"type":"string"},"caPool":{"type":"string"},"kid":{"type":"string"},"signature":{"type":"string"}}},"osType":{"type":"string","enum":["Windows","WindowsServer","Android","iOS","Linux","macOS"]},"otherPrime":{"type":"object","properties":{"d":{"description":"Factor CRT exponent.","type":"string"},"r":{"description":"Prime factor.","type":"string"},"t":{"description":"Factor CRT coefficient.","type":"string"}}},"ottEnrollmentRequest":{"type":"object","properties":{"clientCsr":{"type":"string"},"token":{"type":"string"}}},"pagination":{"type":"object","required":["limit","offset","totalCount"],"properties":{"limit":{"type":"number","format":"int64"},"offset":{"type":"number","format":"int64"},"totalCount":{"type":"number","format":"int64"}}},"password":{"type":"string","maxLength":100,"minLength":5},"passwordNullable":{"type":"string","maxLength":100,"minLength":5,"nullable":true},"postureCheckType":{"type":"string","enum":["OS","PROCESS","DOMAIN","MAC","MFA","PROCESS_MULTI"]},"postureQueries":{"type":"object","required":["policyId","isPassing","postureQueries"],"properties":{"isPassing":{"type":"boolean"},"policyId":{"type":"string"},"policyType":{"$ref":"#/components/schemas/dialBind"},"postureQueries":{"type":"array","items":{"$ref":"#/components/schemas/postureQuery"}}}},"postureQuery":{"type":"object","allOf":[{"$ref":"#/components/schemas/baseEntity"},{"type":"object","required":["queryType","isPassing","timeout","timeoutRemaining"],"properties":{"isPassing":{"type":"boolean"},"process":{"$ref":"#/components/schemas/postureQueryProcess"},"processes":{"type":"array","items":{"$ref":"#/components/schemas/postureQueryProcess"}},"queryType":{"$ref":"#/components/schemas/postureCheckType"},"timeout":{"type":"integer"},"timeoutRemaining":{"type":"integer"}}}]},"postureQueryProcess":{"type":"object","properties":{"osType":{"$ref":"#/components/schemas/osType"},"path":{"type":"string"}}},"postureResponse":{"type":"object","required":["services"],"properties":{"services":{"type":"array","items":{"$ref":"#/components/schemas/postureResponseService"}}}},"postureResponseCreate":{"type":"object","required":["id","typeId"],"properties":{"id":{"type":"string"},"typeId":{"$ref":"#/components/schemas/postureCheckType"}},"discriminator":{"propertyName":"typeId"}},"postureResponseDomainCreate":{"allOf":[{"$ref":"#/components/schemas/postureResponseCreate"},{"type":"object","required":["domain"],"properties":{"domain":{"type":"string"}}}],"x-class":"DOMAIN"},"postureResponseEndpointStateCreate":{"allOf":[{"$ref":"#/components/schemas/postureResponseCreate"},{"type":"object","properties":{"unlocked":{"type":"boolean"},"woken":{"type":"boolean"}}}],"x-class":"ENDPOINT_STATE"},"postureResponseEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/postureResponse"},"meta":{"$ref":"#/components/schemas/meta"}}},"postureResponseMacAddressCreate":{"allOf":[{"$ref":"#/components/schemas/postureResponseCreate"},{"type":"object","required":["macAddresses"],"properties":{"macAddresses":{"type":"array","items":{"type":"string"}}}}],"x-class":"MAC"},"postureResponseOperatingSystemCreate":{"allOf":[{"$ref":"#/components/schemas/postureResponseCreate"},{"type":"object","required":["type","version"],"properties":{"build":{"type":"string"},"type":{"type":"string"},"version":{"type":"string"}}}],"x-class":"OS"},"postureResponseProcessCreate":{"allOf":[{"$ref":"#/components/schemas/postureResponseCreate"},{"type":"object","required":["process"],"properties":{"hash":{"type":"string"},"isRunning":{"type":"boolean"},"path":{"type":"string"},"signerFingerprints":{"type":"array","items":{"type":"string"}}}}],"x-class":"PROCESS"},"postureResponseService":{"type":"object","required":["id","name","postureQueryType","timeout","timeoutRemaining"],"properties":{"id":{"type":"string"},"name":{"type":"string"},"postureQueryType":{"type":"string"},"timeout":{"type":"integer"},"timeoutRemaining":{"type":"integer"}}},"protocol":{"type":"object","required":["address"],"properties":{"address":{"type":"string"}}},"routerExtendEnrollmentRequest":{"type":"object","required":["serverCertCsr","certCsr"],"properties":{"certCsr":{"type":"string"},"serverCertCsr":{"type":"string"}}},"sdkInfo":{"description":"SDK information an authenticating client may provide","type":"object","properties":{"appId":{"type":"string","maxLength":255},"appVersion":{"type":"string","maxLength":255},"branch":{"type":"string","maxLength":255},"revision":{"type":"string","maxLength":255},"type":{"type":"string","maxLength":255},"version":{"type":"string","maxLength":255}}},"serviceDetail":{"type":"object","allOf":[{"$ref":"#/components/schemas/baseEntity"},{"type":"object","required":["name","maxIdleTimeMillis","terminatorStrategy","roleAttributes","permissions","configs","config","encryptionRequired","postureQueries"],"properties":{"config":{"description":"map of config data for this service keyed by the config type name. Only configs of the types requested will be returned.","type":"object","additionalProperties":{"type":"object","additionalProperties":{"type":"object"}}},"configs":{"type":"array","items":{"type":"string"}},"encryptionRequired":{"description":"Describes whether connections must support end-to-end encryption on both sides of the connection. Read-only property, set at create.","type":"boolean"},"maxIdleTimeMillis":{"type":"integer"},"name":{"type":"string"},"permissions":{"$ref":"#/components/schemas/dialBindArray"},"postureQueries":{"type":"array","items":{"$ref":"#/components/schemas/postureQueries"}},"roleAttributes":{"$ref":"#/components/schemas/attributes"},"terminatorStrategy":{"type":"string"}}}]},"serviceEdgeRouters":{"type":"object","properties":{"edgeRouters":{"type":"array","items":{"$ref":"#/components/schemas/commonEdgeRouterProperties"}}}},"serviceList":{"type":"array","items":{"$ref":"#/components/schemas/serviceDetail"}},"servicePatch":{"type":"object","properties":{"configs":{"type":"array","items":{"type":"string"}},"encryptionRequired":{"description":"Describes whether connections must support end-to-end encryption on both sides of the connection. Read-only property, set at create.","type":"boolean"},"maxIdleTimeMillis":{"type":"integer"},"name":{"type":"string"},"roleAttributes":{"type":"array","items":{"type":"string"}},"tags":{"$ref":"#/components/schemas/tags"},"terminatorStrategy":{"type":"string"}}},"serviceUpdate":{"type":"object","required":["name"],"properties":{"configs":{"type":"array","items":{"type":"string"}},"encryptionRequired":{"description":"Describes whether connections must support end-to-end encryption on both sides of the connection. Read-only property, set at create.","type":"boolean"},"maxIdleTimeMillis":{"type":"integer"},"name":{"type":"string"},"roleAttributes":{"type":"array","items":{"type":"string"}},"tags":{"$ref":"#/components/schemas/tags"},"terminatorStrategy":{"type":"string"}}},"sessionCreate":{"type":"object","properties":{"serviceId":{"type":"string"},"tags":{"$ref":"#/components/schemas/tags"},"type":{"$ref":"#/components/schemas/dialBind"}}},"sessionCreateEnvelope":{"type":"object","properties":{"data":{"$ref":"#/components/schemas/sessionDetail"},"meta":{"$ref":"#/components/schemas/meta"}}},"sessionDetail":{"type":"object","allOf":[{"$ref":"#/components/schemas/baseEntity"},{"type":"object","required":["type","apiSessionId","apiSession","serviceId","service","token","edgeRouters","identityId"],"properties":{"apiSession":{"$ref":"#/components/schemas/entityRef"},"apiSessionId":{"type":"string"},"edgeRouters":{"type":"array","items":{"$ref":"#/components/schemas/sessionEdgeRouter"}},"identityId":{"type":"string"},"service":{"$ref":"#/components/schemas/entityRef"},"serviceId":{"type":"string"},"token":{"type":"string"},"type":{"$ref":"#/components/schemas/dialBind"}}}]},"sessionEdgeRouter":{"allOf":[{"$ref":"#/components/schemas/commonEdgeRouterProperties"},{"type":"object","required":["urls"],"properties":{"urls":{"type":"object","additionalProperties":{"type":"string"}}}}]},"sessionList":{"type":"array","items":{"$ref":"#/components/schemas/sessionDetail"}},"specBodyDetail":{"type":"string"},"specDetail":{"type":"object","allOf":[{"$ref":"#/components/schemas/baseEntity"},{"type":"object","required":["name"],"properties":{"name":{"type":"string"}}}]},"specList":{"type":"array","items":{"$ref":"#/components/schemas/specDetail"}},"subTags":{"type":"object","additionalProperties":{"type":"object"}},"tags":{"description":"A map of user defined fields and values. The values are limited to the following types/values: null, string, boolean","allOf":[{"$ref":"#/components/schemas/subTags"}],"nullable":true},"terminatorClientDetail":{"type":"object","allOf":[{"$ref":"#/components/schemas/baseEntity"},{"type":"object","required":["serviceId","service","routerId","identity"],"properties":{"identity":{"type":"string"},"routerId":{"type":"string"},"service":{"$ref":"#/components/schemas/entityRef"},"serviceId":{"type":"string"}}}]},"terminatorClientList":{"type":"array","items":{"$ref":"#/components/schemas/terminatorClientDetail"}},"terminatorCost":{"type":"integer","maximum":65535,"minimum":0},"terminatorCostMap":{"type":"object","additionalProperties":{"$ref":"#/components/schemas/terminatorCost"}},"terminatorPrecedence":{"type":"string","enum":["default","required","failed"]},"terminatorPrecedenceMap":{"type":"object","additionalProperties":{"$ref":"#/components/schemas/terminatorPrecedence"}},"username":{"type":"string","maxLength":100,"minLength":4},"usernameNullable":{"type":"string","maxLength":100,"minLength":4,"nullable":true},"version":{"type":"object","properties":{"apiVersions":{"type":"object","additionalProperties":{"type":"object","additionalProperties":{"$ref":"#/components/schemas/apiVersion"}}},"buildDate":{"type":"string","example":"2020-02-11 16:09:08"},"capabilities":{"type":"array","items":{"type":"string"}},"revision":{"type":"string","example":"ea556fc18740"},"runtimeVersion":{"type":"string","example":"go1.13.5"},"version":{"type":"string","example":"v0.9.0"}}}}}},"bundle":{"consumes":["application/json"],"produces":["application/json"],"schemes":["https"],"swagger":"2.0","info":{"description":"OpenZiti Edge Client API","title":"Ziti Edge Client","contact":{"name":"OpenZiti","url":"https://openziti.discourse.group","email":"help@openziti.org"},"license":{"name":"Apache 2.0","url":"https://www.apache.org/licenses/LICENSE-2.0.html"},"version":"0.26.35"},"host":"demo.ziti.dev","basePath":"/edge/client/v1","paths":{"/":{"get":{"security":[],"tags":["Informational"],"summary":"Returns version information","operationId":"listRoot","responses":{"200":{"description":"Version information for the controller","schema":{"$ref":"#/definitions/listVersionEnvelope"}}}}},"/.well-known/est/cacerts":{"get":{"security":[],"description":"This endpoint is used during enrollments to bootstrap trust between enrolling clients and the Ziti Edge API.\\nThis endpoint returns a base64 encoded PKCS7 store. The content can be base64 decoded and parsed by any library\\nthat supports parsing PKCS7 stores.\\n","produces":["application/pkcs7-mime"],"tags":["Well Known"],"summary":"Get CA Cert Store","operationId":"listWellKnownCas","responses":{"200":{"description":"A base64 encoded PKCS7 store","schema":{"type":"string","example":"MIIMUQYJKoZIhvcNAQcCoIIMQjCCDD4CAQExADALBgkqhkiG9w0BBwGgggwkMIIG\\nBjCCA+6gAwIBAgICEAAwDQYJKoZIhvcNAQELBQAwgZcxCzAJBgNVBAYTAlVTMRcw\\nFQYDVQQIDA5Ob3J0aCBDYXJvbGluYTESMBAGA1UEBwwJQ2hhcmxvdHRlMRMwEQYD\\nVQQKDApOZXRGb3VuZHJ5MSkwJwYDVQQLDCBOZXRGb3VuZHJ5IENlcnRpZmljYXRl\\nIEF1dGhvcml0eTEbMBkGA1UEAwwSTmV0Rm91bmRyeSBSb290IENBMB4XDTE4MDUx\\nODE2NTcyM1oXDTI4MDUxNTE2NTcyM1owgYsxCzAJBgNVBAYTAlVTMRcwFQYDVQQI\\nDA5Ob3J0aCBDYXJvbGluYTETMBEGA1UECgwKTmV0Rm91bmRyeTEpMCcGA1UECwwg\\nTmV0Rm91bmRyeSBDZXJ0aWZpY2F0ZSBBdXRob3JpdHkxIzAhBgNVBAMMGk5ldEZv\\ndW5kcnkgSW50ZXJtZWRpYXRlIENBMIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIIC\\nCgKCAgEAsb1EPhMUweS9WpjT7L54xAOmZqugJ6fhSrFfLUwNUy172q+ASvZTpT1z\\nKIPcZpGmPB3TX2bHaAR67BbRkUR11JgWE3U8+FsGrYmPZtaKM6fg8Mh0WZ41oMYQ\\nNJyQixOktrgqfybyJoT5PeT5AA7QQmd8mku2X9nkAu6gWPf2nHNc7SeQdijmyQQa\\nVK3oqyaxOzWzsU/XbfMEz/ObkefUxgt5Z6jlK0xcW0Q+QgtawMKLUiuo6obWRPcl\\n7Hm9Sze8XJS5pbvS5JkUszxoRZuDVHZylrlHIpA/IL+BnvS+M7SP28UWe9skrv/s\\n6ACpJtuPJ1EYf5fakugOpY7i+hq7YNi//csbc49Qjn2OtttrR7JcTaHUEU1I/tQb\\nQGAtNkI4pJjRVUdDawQFQlWHZD1COixNLErs2HzAI00DhLrY6SKITI/kjN0Xx010\\nXdMcdfay0PLWm6RwxiRmMQFL4GNIC895NF1q6xV4W4rWgqUNlcvKpy+i1chWpRbU\\nHe16ul0qh10fcESrRvAbXn5YrQJLrwbSr+85ubN8lYdNLE0qg2cIXZlUilarZZzW\\nghtCe+KkUpjfRuAi/CqfSwNK3QXEfeVEK6S49mHeSekOizFIw7fmDhCz9vXwMOnb\\nryRSLEJks0gIRcSDVChXheAqC98y4kcQdniNWFnqJXoqA+rrSokCAwEAAaNmMGQw\\nHQYDVR0OBBYEFK8UXC/sq6dGVFAqEXHsQDzqzwuUMB8GA1UdIwQYMBaAFEHz6RRu\\nOuXj2mwAzOeUinfWeivpMBIGA1UdEwEB/wQIMAYBAf8CAQAwDgYDVR0PAQH/BAQD\\nAgGGMA0GCSqGSIb3DQEBCwUAA4ICAQBDAAaOE2Nbb49eOjyTNxIeOB+ZKQjJ1hUE\\ngRrootAA8NYbtKW/vyxTWnNi5XOGXd4DFS9OKZ0mL/7NyLc0mbTwPH2ZT8KTPUTS\\nCpo6yktZ/7TMjyAtWZiOMg2EH+6m/nlNSXk/v5fb8+JQLdZfpxoA017dHh3tc8l7\\nKOskCZNwQHgF/YMXrPXUNbsGkXRuJLtpjPw5O9GvPys7p+a1aJH1WCTly9zfB6j+\\nrMF+UGCPDT30sxitVlohik83j6pKLgEAP/gi8nJbILlTP7ce+gJeHR2tfDvmK91X\\n6QgCF2STUFBU7/9H1/pPRRykOxQpAd8xqSgqGEyp9Ie4tysZjwoUEnG8IVJ5ykrI\\nFximvnb4B+LABV9WEo08n8m1R8wEryrISi8fBPn3Pr5nuayOfFLa15CLTkZF40FN\\n8ika1qNZy8bWRDwTZJQUUb7VCheRWcMwdZdNmhl3J+VZLpQ+ruW7b2ajwacHz5Nw\\nBHKNcmxXb/4vHq/BnlcayHnSqT6036+OZQ+owDegcYmWV6LaM7xLErjHz2EE38M2\\nYSiW5SU1zluDe+iHb6l3Gd3Fj/X1gkMWFgYh0XPMSUSyimLNYzy4THKzmWlcQNFo\\nLLiIDbLrMt+vk+vBkIsNTTPXRJOFPBhmIF6uIUj+2YhzNotX/pQtqMKms3pPlmHq\\ndH6biwygETCCBhYwggP+oAMCAQICCQDquKpymLJ5WzANBgkqhkiG9w0BAQsFADCB\\nlzELMAkGA1UEBhMCVVMxFzAVBgNVBAgMDk5vcnRoIENhcm9saW5hMRIwEAYDVQQH\\nDAlDaGFybG90dGUxEzARBgNVBAoMCk5ldEZvdW5kcnkxKTAnBgNVBAsMIE5ldEZv\\ndW5kcnkgQ2VydGlmaWNhdGUgQXV0aG9yaXR5MRswGQYDVQQDDBJOZXRGb3VuZHJ5\\nIFJvb3QgQ0EwHhcNMTgwNTE4MTY1NDQ3WhcNMzgwNTEzMTY1NDQ3WjCBlzELMAkG\\nA1UEBhMCVVMxFzAVBgNVBAgMDk5vcnRoIENhcm9saW5hMRIwEAYDVQQHDAlDaGFy\\nbG90dGUxEzARBgNVBAoMCk5ldEZvdW5kcnkxKTAnBgNVBAsMIE5ldEZvdW5kcnkg\\nQ2VydGlmaWNhdGUgQXV0aG9yaXR5MRswGQYDVQQDDBJOZXRGb3VuZHJ5IFJvb3Qg\\nQ0EwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQDKq/Xa+749Cr3WJGYD\\nDIEtNKIRnTFc6TeiRSm/O7hG2+1Nrh/dObjZJuDjsopWP8NFA/DwlNyEphYKAeSw\\nHDmu+4nFd6ifoeDE2lYq6bNhLcgN+A3MlN5Phb2rnO32YYZwHXGWov+jtd2gaK0f\\nWsH8CQxn6n2v7qvPMTeYFP8p4jqTZw2bvZWw+LMYTFCy541DFqQLQasMg10mXRAV\\nXO7Oa9y+D1re1zLq4wS6u8ItJoKzfmvZkMvD90C/tQ4u0iJaL7GB2SE9MOPDeGVv\\npnoSAIkSVmvRDUAj2x9PuukykzoL1OAWzc5Cg+5LxRmLejVE7PvPcHaTtNag2tRD\\nw2vbMeFKN8NvQH1QYcaPWZe4Vl9b6DAuTaH5RN919H/F+ZHyjZybVPwC14lflneI\\nKyNy8JEV/YMIbEADWnuiedzDehk2Opn+0+9Zr2X/xfjCo8iWHFbNaVnQX7wdRaOo\\n783lEouncqe46FDBLBpyAuDKHQpIT3MK8rkC/1yBNxsH44vMweUZuK0u7PC9KHtm\\npQfuflYGfxA34kY6WU3jzyQHetoLYjoxTqNEEjuGpwy2o1j7RaCBEFIbYlnlbhpE\\nWFTaQf96z2GQ6m1U3y7JyDflHSu9Fo1JNkG3qXsjDwda/6W7NRJRgdFrhnOwrm7F\\n6L9X4P1HnzU/VJL66LwPmiHVjQIDAQABo2MwYTAdBgNVHQ4EFgQUQfPpFG465ePa\\nbADM55SKd9Z6K+kwHwYDVR0jBBgwFoAUQfPpFG465ePabADM55SKd9Z6K+kwDwYD\\nVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAYYwDQYJKoZIhvcNAQELBQADggIB\\nACfU74aKWROaxnue8tZb5PFkEbnDRcRrKXRhnptA0vrgB4ydnYxX9hEBZD8o6PBy\\n3rewvl5meSOBE6zyb4JD80lHdzHSVFIwbzsNOeEjCslv/PA/3Y+J7DCt6gPNMDeY\\nuEssdqeSiMoYz2gnven4flSMKgTAJd3/SpVrn35HzXiU9MkmFVpPEMnTctOjw+Jn\\ncCkG5+D9N14dxtgZ/tUfbH+GUfhyGVxRdPrX5KQqAyapMfEaMXXa8KNs7PG+sDiS\\nWI+Sg9jUGtxgkfKdVNtFW+QMXyy7eT3iXPA+1r2hFAhgfIaGtBJUhxPHMhKtjbAg\\nAX+6+2D3GAbaD1+lcQHhKry3hygQ3OX79FJW6zyPS0tiV/LfovHqX/3x9q5PTVBO\\nwEOS2/LCc4R2M7S+HIPf4eSJ+nH4uCIdJ42WCror/mRsuL7geCksi70GHuCynP4y\\nqQFszu/UtbBEsN8loTnLpOInxaGB1Y8UPm14b2Lo1/3HkoMVh0/UaHJ0TmnZ1r7m\\nfGhfRyAZYRdvT1sB+Eb4b5A2zEZqsTc9IwFOhnI4ZilPoZ5s2xejqrVw3GSvovEh\\ndprrQmvxuh+VQ23y/+/4z9b2xWyDu2zVveB4whqPe2rkgxJrEl4GfLk2DW+dN6j8\\n3Zl4lPoUZYwzkC6raCaHyFlAoaTbqz0H6rvVJYxJPS6UoQAxAA==\\n"}}}}},"/authenticate":{"post":{"security":[],"description":"Allowed authentication methods include \\"password\\", \\"cert\\", and \\"ext-jwt\\"\\n","tags":["Authentication"],"summary":"Authenticate via a method supplied via a query string parameter","operationId":"authenticate","parameters":[{"name":"auth","in":"body","schema":{"$ref":"#/definitions/authenticate"}}],"responses":{"200":{"description":"The API session associated with the session used to issue the request","schema":{"$ref":"#/definitions/currentApiSessionDetailEnvelope"},"examples":{"default":{"data":{"_links":{"self":{"href":"./current-api-session"}},"configTypes":[],"createdAt":"2020-03-09T19:03:49.1883693Z","expiresAt":"2020-03-09T19:34:21.5600897Z","id":"27343114-b44f-406e-9981-f3c4f2f28d54","identity":{"_links":{"self":{"href":"./identities/66352d7b-a6b2-4ce9-85bb-9f18e318704d"}},"id":"66352d7b-a6b2-4ce9-85bb-9f18e318704d","name":"Default Admin","urlName":"identities"},"tags":[{"userField1":123},{"userField2":"asdf"}],"token":"28bb0ed2-0577-4632-ae70-d17106b92871","updatedAt":"2020-03-09T19:04:21.5600897Z"},"meta":{}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The authentication request could not be processed as the credentials are invalid","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"INVALID_AUTH","message":"The authentication request failed","requestId":"5952ed10-3091-474f-a691-47ebab6990dc"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"enum":["password","cert","ext-jwt"],"type":"string","name":"method","in":"query","required":true}]},"/authenticate/mfa":{"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Completes MFA authentication by submitting a MFA time based one time token or backup code.","tags":["Authentication","MFA"],"summary":"Complete MFA authentication","operationId":"authenticateMfa","parameters":[{"description":"An MFA validation request","name":"mfaAuth","in":"body","required":true,"schema":{"$ref":"#/definitions/mfaCode"}}],"responses":{"200":{"description":"Base empty response","schema":{"$ref":"#/definitions/empty"}},"401":{"description":"Base empty response","schema":{"$ref":"#/definitions/empty"}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"/controllers":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of controllers","tags":["Controllers"],"summary":"List controllers","operationId":"listControllers","parameters":[{"type":"integer","name":"limit","in":"query"},{"type":"integer","name":"offset","in":"query"},{"type":"string","name":"filter","in":"query"}],"responses":{"200":{"description":"A list of controllers","schema":{"$ref":"#/definitions/listControllersEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"/current-api-session":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves the API session that was used to issue the current request","tags":["Current API Session"],"summary":"Return the current API session","operationId":"getCurrentAPISession","responses":{"200":{"description":"The API session associated with the session used to issue the request","schema":{"$ref":"#/definitions/currentApiSessionDetailEnvelope"},"examples":{"default":{"data":{"_links":{"self":{"href":"./current-api-session"}},"configTypes":[],"createdAt":"2020-03-09T19:03:49.1883693Z","expiresAt":"2020-03-09T19:34:21.5600897Z","id":"27343114-b44f-406e-9981-f3c4f2f28d54","identity":{"_links":{"self":{"href":"./identities/66352d7b-a6b2-4ce9-85bb-9f18e318704d"}},"id":"66352d7b-a6b2-4ce9-85bb-9f18e318704d","name":"Default Admin","urlName":"identities"},"tags":[{"userField1":123},{"userField2":"asdf"}],"token":"28bb0ed2-0577-4632-ae70-d17106b92871","updatedAt":"2020-03-09T19:04:21.5600897Z"},"meta":{}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"delete":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Terminates the current API session","tags":["Current API Session"],"summary":"Logout","responses":{"200":{"description":"Base empty response","schema":{"$ref":"#/definitions/empty"}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"/current-api-session/certificates":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of certificate resources for the current API session; supports filtering, sorting, and pagination","tags":["Current API Session"],"summary":"List the ephemeral certificates available for the current API Session","operationId":"listCurrentApiSessionCertificates","parameters":[{"type":"integer","name":"limit","in":"query"},{"type":"integer","name":"offset","in":"query"},{"type":"string","name":"filter","in":"query"}],"responses":{"200":{"description":"A list of the current API Session\'s certificate","schema":{"$ref":"#/definitions/listCurrentApiSessionCertificatesEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Creates an ephemeral certificate for the current API Session. This endpoint expects a PEM encoded CSRs to be provided for fulfillment as a property of a JSON payload. It is up to the client to manage the private key backing the CSR request.","tags":["Current API Session"],"summary":"Creates an ephemeral certificate for the current API Session","operationId":"createCurrentApiSessionCertificate","parameters":[{"description":"The payload describing the CSR used to create a session certificate","name":"sessionCertificate","in":"body","required":true,"schema":{"$ref":"#/definitions/currentApiSessionCertificateCreate"}}],"responses":{"201":{"description":"A response of a create API Session certificate","schema":{"$ref":"#/definitions/createCurrentApiSessionCertificateEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"/current-api-session/certificates/{id}":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a single ephemeral certificate by id","tags":["Current API Session"],"summary":"Retrieves an ephemeral certificate","operationId":"detailCurrentApiSessionCertificate","responses":{"200":{"description":"A response containing a single API Session certificate","schema":{"$ref":"#/definitions/detailCurrentApiSessionCertificateEnvelope"}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"delete":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Delete an ephemeral certificateby id\\n","tags":["Current API Session"],"summary":"Delete an ephemeral certificate","operationId":"deleteCurrentApiSessionCertificate","responses":{"200":{"description":"The delete request was successful and the resource has been removed","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/current-api-session/service-updates":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves data indicating the last time data relevant to this API Session was altered that would necessitate\\nservice refreshes.\\n","tags":["Current API Session","Services"],"summary":"Returns data indicating whether a client should updates it service list","operationId":"listServiceUpdates","responses":{"200":{"description":"Data indicating necessary service updates","schema":{"$ref":"#/definitions/listCurrentApiSessionServiceUpdatesEnvelope"}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"/current-identity":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Returns the identity associated with the API sessions used to issue the current request","tags":["Current Identity"],"summary":"Return the current identity","operationId":"getCurrentIdentity","responses":{"200":{"description":"The identity associated with the API Session used to issue the request","schema":{"$ref":"#/definitions/currentIdentityDetailEnvelope"},"examples":{"default":{"data":{"_links":{"edge-router-policies":{"href":"./identities/66352d7b-a6b2-4ce9-85bb-9f18e318704d/edge-routers"},"self":{"href":"./identities/66352d7b-a6b2-4ce9-85bb-9f18e318704d"},"service-policies":{"href":"./identities/66352d7b-a6b2-4ce9-85bb-9f18e318704d/identities"}},"authenticators":{"updb":{"username":"admin"}},"createdAt":"2020-01-13T16:38:13.6854788Z","enrollment":{},"id":"66352d7b-a6b2-4ce9-85bb-9f18e318704d","isAdmin":true,"isDefaultAdmin":true,"name":"Default Admin","roleAttributes":[],"tags":{},"type":{"_links":{"self":{"href":"./identity-types/User"}},"id":"User","name":"User","urlName":"identity-types"},"updatedAt":"2020-01-13T16:38:13.6854788Z"},"meta":{}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"/current-identity/authenticators":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of authenticators assigned to the current API session\'s identity; supports filtering, sorting, and pagination.","tags":["Current API Session"],"summary":"List authenticators for the current identity","operationId":"listCurrentIdentityAuthenticators","parameters":[{"type":"integer","name":"limit","in":"query"},{"type":"integer","name":"offset","in":"query"},{"type":"string","name":"filter","in":"query"}],"responses":{"200":{"description":"A list of authenticators","schema":{"$ref":"#/definitions/listAuthenticatorsEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"/current-identity/authenticators/{id}":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a single authenticator by id. Will only show authenticators assigned to the API session\'s identity.","tags":["Current API Session"],"summary":"Retrieve an authenticator for the current identity","operationId":"detailCurrentIdentityAuthenticator","responses":{"200":{"description":"A singular authenticator resource","schema":{"$ref":"#/definitions/detailAuthenticatorEnvelope"}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"put":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update all fields on an authenticator by id.  Will only update authenticators assigned to the API session\'s\\nidentity.\\n","tags":["Current API Session"],"summary":"Update all fields on an authenticator of this identity","operationId":"updateCurrentIdentityAuthenticator","parameters":[{"description":"An authenticator put object","name":"authenticator","in":"body","required":true,"schema":{"$ref":"#/definitions/authenticatorUpdateWithCurrent"}}],"responses":{"200":{"description":"The update request was successful and the resource has been altered","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"patch":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update the supplied fields on an authenticator by id. Will only update authenticators assigned to the API\\nsession\'s identity.\\n","tags":["Current API Session"],"summary":"Update the supplied fields on an authenticator of this identity","operationId":"patchCurrentIdentityAuthenticator","parameters":[{"description":"An authenticator patch object","name":"authenticator","in":"body","required":true,"schema":{"$ref":"#/definitions/authenticatorPatchWithCurrent"}}],"responses":{"200":{"description":"The patch request was successful and the resource has been altered","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/current-identity/authenticators/{id}/extend":{"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"This endpoint only functions for certificates issued by the controller. 3rd party certificates are not handled.\\nAllows an identity to extend its certificate\'s expiration date by using its current and valid client certificate to submit a CSR. This CSR may be passed in using a new private key, thus allowing private key rotation.\\nThe response from this endpoint is a new client certificate which the client must  be verified via the /authenticators/{id}/extend-verify endpoint.\\nAfter verification is completion any new connections must be made with new certificate. Prior to verification the old client certificate remains active.","tags":["Current API Session","Enroll","Extend Enrollment"],"summary":"Allows the current identity to recieve a new certificate associated with a certificate based authenticator","operationId":"extendCurrentIdentityAuthenticator","parameters":[{"name":"extend","in":"body","required":true,"schema":{"$ref":"#/definitions/identityExtendEnrollmentRequest"}}],"responses":{"200":{"description":"A response containg the identity\'s new certificate","schema":{"$ref":"#/definitions/identityExtendEnrollmentEnvelope"}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/current-identity/authenticators/{id}/extend-verify":{"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"After submitting a CSR for a new client certificate the resulting public certificate must be re-submitted to this endpoint to verify receipt.\\nAfter receipt, the new client certificate must be used for new authentication requests.","tags":["Current API Session","Enroll","Extend Enrollment"],"summary":"Allows the current identity to validate reciept of a new client certificate","operationId":"extendVerifyCurrentIdentityAuthenticator","parameters":[{"name":"extend","in":"body","required":true,"schema":{"$ref":"#/definitions/identityExtendValidateEnrollmentRequest"}}],"responses":{"200":{"description":"Base empty response","schema":{"$ref":"#/definitions/empty"}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/current-identity/edge-routers":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Lists the Edge Routers that the current identity has access to via policies. The data returned\\nincludes their address and online status\\n","tags":["Current Identity","Edge Router"],"summary":"Return this list of Edge Routers the identity has access to","operationId":"getCurrentIdentityEdgeRouters","responses":{"200":{"description":"A list of edge routers","schema":{"$ref":"#/definitions/listCurrentIdentityEdgeRoutersEnvelope"}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"/current-identity/mfa":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Returns details about the current MFA enrollment. If enrollment has not been completed it will return the current MFA configuration details necessary to complete a `POST /current-identity/mfa/verify`.\\n","tags":["Current Identity","MFA"],"summary":"Returns the current status of MFA enrollment","operationId":"detailMfa","responses":{"200":{"description":"The details of an MFA enrollment","schema":{"$ref":"#/definitions/detailMfaEnvelope"}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Allows authenticator based MFA enrollment. If enrollment has already been completed, it must be disabled before attempting to re-enroll. Subsequent enrollment request is completed via `POST /current-identity/mfa/verify`\\n","tags":["Current Identity","MFA"],"summary":"Initiate MFA enrollment","operationId":"enrollMfa","responses":{"201":{"description":"The create request was successful and the resource has been added at the following location","schema":{"$ref":"#/definitions/createEnvelope"}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"409":{"description":"The identity is already enrolled in MFA","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":null,"cause":null,"causeMessage":"","code":"ALREADY_MFA_ENROLLED","message":"The identity is already enrolled in MFA","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"delete":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Disable MFA for the current identity. Requires a current valid time based one time password if MFA enrollment has been completed. If not, code should be an empty string. If one time passwords are not available and admin account can be used to remove MFA from the identity via `DELETE /identities/<id>/mfa`.\\n","tags":["Current Identity","MFA"],"summary":"Disable MFA for the current identity","operationId":"deleteMfa","parameters":[{"type":"string","name":"mfa-validation-code","in":"header"}],"responses":{"200":{"description":"Base empty response","schema":{"$ref":"#/definitions/empty"}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"/current-identity/mfa/qr-code":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Shows an QR code image for unverified MFA enrollments. 404s if the MFA enrollment has been completed or not started.\\n","produces":["image/png","application/json"],"tags":["Current Identity","MFA"],"summary":"Show a QR code for unverified MFA enrollments","operationId":"detailMfaQrCode","responses":{"200":{"description":"OK"},"404":{"description":"No MFA enrollment or MFA enrollment is completed"}}}},"/current-identity/mfa/recovery-codes":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Allows the viewing of recovery codes of an MFA enrollment. Requires a current valid time based one time password to interact with. Available after a completed MFA enrollment.\\n","tags":["Current Identity","MFA"],"summary":"For a completed MFA enrollment view the current recovery codes","operationId":"detailMfaRecoveryCodes","parameters":[{"description":"An MFA validation request","name":"mfaValidation","in":"body","schema":{"$ref":"#/definitions/mfaCode"}},{"type":"string","name":"mfa-validation-code","in":"header"}],"responses":{"200":{"description":"The recovery codes of an MFA enrollment","schema":{"$ref":"#/definitions/detailMfaRecoveryCodesEnvelope"}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Allows regeneration of recovery codes of an MFA enrollment. Requires a current valid time based one time password to interact with. Available after a completed MFA enrollment. This replaces all existing recovery codes.\\n","tags":["Current Identity","MFA"],"summary":"For a completed MFA enrollment regenerate the recovery codes","operationId":"createMfaRecoveryCodes","parameters":[{"description":"An MFA validation request","name":"mfaValidation","in":"body","required":true,"schema":{"$ref":"#/definitions/mfaCode"}}],"responses":{"200":{"description":"Base empty response","schema":{"$ref":"#/definitions/empty"}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"/current-identity/mfa/verify":{"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Completes MFA enrollment by accepting a time based one time password as verification. Called after MFA enrollment has been initiated via `POST /current-identity/mfa`.\\n","tags":["Current Identity","MFA"],"summary":"Complete MFA enrollment by verifying a time based one time token","operationId":"verifyMfa","parameters":[{"description":"An MFA validation request","name":"mfaValidation","in":"body","required":true,"schema":{"$ref":"#/definitions/mfaCode"}}],"responses":{"200":{"description":"Base empty response","schema":{"$ref":"#/definitions/empty"}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"/enroll":{"post":{"description":"present a OTT and CSR to receive a long-lived client certificate","consumes":["application/pkcs10","application/json","application/x-pem-file","text/plain"],"produces":["application/x-pem-file","application/json"],"tags":["Enroll"],"summary":"Enroll an identity via one-time-token","operationId":"enroll","responses":{"200":{"description":"A response for multi-format legacy enrollment.","schema":{"type":"string"}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","format":"uuid","name":"token","in":"query"},{"type":"string","name":"method","in":"query"}]},"/enroll/ca":{"post":{"description":"For CA auto enrollment, an identity is not created beforehand.\\nInstead one will be created during enrollment. The client will present a client certificate that is signed by a\\nCertificate Authority that has been added and verified (See POST /cas and POST /cas/{id}/verify).\\n\\nDuring this process no CSRs are requires as the client should already be in possession of a valid certificate.\\n","tags":["Enroll"],"summary":"Enroll an identity with a pre-exchanged certificate","operationId":"enrollCa","responses":{"200":{"description":"Base empty response","schema":{"$ref":"#/definitions/empty"}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"/enroll/challenge":{"post":{"description":"A caller may submit a nonce and a key id (kid) from the enrollment JWKS endpoint or enrollment JWT that will\\nbe used to sign the nonce. The resulting signature may be validated with the associated public key in order\\nto verify a networks identity during enrollment. The nonce must be a valid formatted UUID.\\n","tags":["Enroll"],"summary":"Allows verification of a controller or cluster of controllers as being the valid target for enrollment.","operationId":"enrollmentChallenge","parameters":[{"name":"nonce","in":"body","required":true,"schema":{"$ref":"#/definitions/nonceChallenge"}}],"responses":{"200":{"description":"A nonce challenge response. The contents will be the signature of the nonce, the key id used, and algorithm used to produce the signature.","schema":{"$ref":"#/definitions/nonceSignature"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"/enroll/erott":{"post":{"description":"Enrolls an edge-router via a one-time-token to establish a certificate based identity.\\n","tags":["Enroll"],"summary":"Enroll an edge-router","operationId":"enrollErOtt","responses":{"200":{"description":"A response containing the edge routers signed certificates (server chain, server cert, CAs).","schema":{"$ref":"#/definitions/enrollmentCertsEnvelope"}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"description":"An OTT enrollment request","name":"erOttEnrollmentRequest","in":"body","required":true,"schema":{"$ref":"#/definitions/erOttEnrollmentRequest"}}]},"/enroll/extend/router":{"post":{"description":"Allows a router to extend its certificates\' expiration date by\\nusing its current and valid client certificate to submit a CSR. This CSR may\\nbe passed in using a new private key, thus allowing private key rotation or swapping.\\n\\nAfter completion any new connections must be made with certificates returned from a 200 OK\\nresponse. The previous client certificate is rendered invalid for use with the controller even if it\\nhas not expired.\\n\\nThis request must be made using the existing, valid, client certificate.\\n","tags":["Enroll","Extend Enrollment"],"summary":"Extend the life of a currently enrolled router\'s certificates","operationId":"extendRouterEnrollment","parameters":[{"name":"routerExtendEnrollmentRequest","in":"body","required":true,"schema":{"$ref":"#/definitions/routerExtendEnrollmentRequest"}}],"responses":{"200":{"description":"A response containing the edge routers new signed certificates (server chain, server cert, CAs).","schema":{"$ref":"#/definitions/enrollmentCertsEnvelope"}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"/enroll/jwks":{"get":{"description":"Returns a list of JSON Web Keys (JWKS) that are used for enrollment signing. The keys listed here are used\\nto sign and co-sign enrollment JWTs. They can be verified through a challenge endpoint, using the public keys\\nfrom this endpoint to verify the target machine has possession of the related private key.\\n","tags":["Enroll"],"summary":"List JSON Web Keys associated with enrollment","operationId":"getEnrollmentJwks","responses":{"200":{"description":"A JWKS response for enrollment.","schema":{"$ref":"#/definitions/jwks"}}}}},"/enroll/ott":{"post":{"description":"Enroll an identity via a one-time-token which is supplied via a query string parameter. This enrollment method\\nexpects a PEM encoded CSRs to be provided for fulfillment. It is up to the enrolling identity to manage the\\nprivate key backing the CSR request.\\n","tags":["Enroll"],"summary":"Enroll an identity via one-time-token","operationId":"enrollOtt","responses":{"200":{"description":"A response containing and identities client certificate chains","schema":{"$ref":"#/definitions/enrollmentCertsEnvelope"}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"description":"An OTT enrollment request","name":"ottEnrollmentRequest","in":"body","required":true,"schema":{"$ref":"#/definitions/ottEnrollmentRequest"}}]},"/enroll/ottca":{"post":{"description":"Enroll an identity via a one-time-token that also requires a pre-exchanged client certificate to match a\\nCertificate Authority that has been added and verified (See POST /cas and POST /cas{id}/verify). The client\\nmust present a client certificate signed by CA associated with the enrollment. This enrollment is similar to\\nCA auto enrollment except that is required the identity to be pre-created.\\n\\nAs the client certificate has been pre-exchanged there is no CSR input to this enrollment method.\\n","tags":["Enroll"],"summary":"Enroll an identity via one-time-token with a pre-exchanged client certificate","operationId":"enrollOttCa","responses":{"200":{"description":"Base empty response","schema":{"$ref":"#/definitions/empty"}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"description":"An OTT enrollment request","name":"ottEnrollmentRequest","in":"body","required":true,"schema":{"$ref":"#/definitions/ottEnrollmentRequest"}}]},"/enroll/updb":{"post":{"description":"Enrolls an identity via a one-time-token to establish an initial username and password combination\\n","tags":["Enroll"],"summary":"Enroll an identity via one-time-token","operationId":"enrollUpdb","responses":{"200":{"description":"Base empty response","schema":{"$ref":"#/definitions/empty"}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","format":"uuid","name":"token","in":"query","required":true},{"name":"updbCredentials","in":"body","required":true,"schema":{"type":"object","properties":{"password":{"$ref":"#/definitions/password"},"username":{"$ref":"#/definitions/username"}}}}]},"/enumerated-capabilities":{"get":{"security":[],"tags":["Informational"],"summary":"Returns all capabilities this version of the controller is aware of, enabled or not.","operationId":"listEnumeratedCapabilities","responses":{"200":{"description":"A typed and enumerated list of capabilities","schema":{"$ref":"#/definitions/listEnumeratedCapabilitiesEnvelope"}}}}},"/external-jwt-signers":{"get":{"description":"Retrieves a list of external JWT signers for authentication","tags":["External JWT Signer"],"summary":"List Client Authentication External JWT","operationId":"listExternalJwtSigners","parameters":[{"type":"integer","name":"limit","in":"query"},{"type":"integer","name":"offset","in":"query"},{"type":"string","name":"filter","in":"query"}],"responses":{"200":{"description":"A list of External JWT Signers","schema":{"$ref":"#/definitions/listClientExternalJwtSignersEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"/network-jwts":{"get":{"description":"Returns a list of JWTs for trusting a network","tags":["Enrollment"],"summary":"Returns a list of JWTs suitable for bootstrapping network trust.","operationId":"listNetworkJWTs","responses":{"200":{"description":"A list of network JWTs","schema":{"$ref":"#/definitions/listNetworkJWTsEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"/posture-response":{"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Submits posture responses","tags":["Posture Checks"],"summary":"Submit a posture response to a posture query","operationId":"createPostureResponse","parameters":[{"description":"A Posture Response","name":"postureResponse","in":"body","required":true,"schema":{"$ref":"#/definitions/postureResponseCreate"}}],"responses":{"201":{"description":"Contains a list of services that have had their timers altered","schema":{"$ref":"#/definitions/postureResponseEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"/posture-response-bulk":{"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Submits posture responses","tags":["Posture Checks"],"summary":"Submit multiple posture responses","operationId":"createPostureResponseBulk","parameters":[{"description":"A Posture Response","name":"postureResponse","in":"body","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/postureResponseCreate"}}}],"responses":{"200":{"description":"Contains a list of services that have had their timers altered","schema":{"$ref":"#/definitions/postureResponseEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"/protocols":{"get":{"security":[],"tags":["Informational"],"summary":"Return a list of the listening Edge protocols","operationId":"listProtocols","responses":{"200":{"description":"A list of supported Edge protocols","schema":{"$ref":"#/definitions/listProtocolsEnvelope"}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"/services":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of config resources; supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Service"],"summary":"List services","operationId":"listServices","parameters":[{"type":"integer","name":"limit","in":"query"},{"type":"integer","name":"offset","in":"query"},{"type":"string","name":"filter","in":"query"},{"type":"array","items":{"type":"string"},"collectionFormat":"multi","name":"configTypes","in":"query"},{"type":"array","items":{"type":"string"},"collectionFormat":"multi","name":"roleFilter","in":"query"},{"type":"string","name":"roleSemantic","in":"query"}],"responses":{"200":{"description":"A list of services","schema":{"$ref":"#/definitions/listServicesEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"/services/{id}":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a single service by id. Requires admin access.","tags":["Service"],"summary":"Retrieves a single service","operationId":"detailService","responses":{"200":{"description":"A single service","schema":{"$ref":"#/definitions/detailServiceEnvelope"}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"put":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update all fields on a service by id. Requires admin access.","tags":["Service"],"summary":"Update all fields on a service","operationId":"updateService","parameters":[{"description":"A service update object","name":"service","in":"body","required":true,"schema":{"$ref":"#/definitions/serviceUpdate"}}],"responses":{"200":{"description":"The update request was successful and the resource has been altered","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"delete":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Delete a service by id. Requires admin access.","tags":["Service"],"summary":"Delete a service","operationId":"deleteService","responses":{"200":{"description":"The delete request was successful and the resource has been removed","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"409":{"description":"The resource requested to be removed/altered cannot be as it is referenced by another object.","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"causeMessage":"referenced by /some-resource/05f4f710-c155-4a74-86d5-77558eb9cb42","code":"CONFLICT_CANNOT_MODIFY_REFERENCED","message":"The resource cannot be deleted/modified. Remove all referencing resources first.","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"patch":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update the supplied fields on a service. Requires admin access.","tags":["Service"],"summary":"Update the supplied fields on a service","operationId":"patchService","parameters":[{"description":"A service patch object","name":"service","in":"body","required":true,"schema":{"$ref":"#/definitions/servicePatch"}}],"responses":{"200":{"description":"The patch request was successful and the resource has been altered","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/services/{id}/edge-routers":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves the list of edge routers permitted to handle traffic for the specified service\\n","tags":["Service"],"summary":"List of edge routers permitted to handle traffic for the specified service","operationId":"listServiceEdgeRouters","parameters":[{"type":"integer","name":"limit","in":"query"},{"type":"integer","name":"offset","in":"query"},{"type":"string","name":"filter","in":"query"},{"type":"string","description":"an optional JWT token use to authenticate the request. If provided, the token must be valid else a not authorized response is returned.","name":"session-token","in":"header"}],"responses":{"200":{"description":"A list of edge routers suitable for dialing or binding the specified service by the authenticated identity","schema":{"$ref":"#/definitions/listServiceEdgeRoutersEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/services/{id}/terminators":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of terminator resources that are assigned specific service; supports filtering, sorting, and pagination.\\n","tags":["Service"],"summary":"List of terminators assigned to a service","operationId":"listServiceTerminators","parameters":[{"type":"integer","name":"limit","in":"query"},{"type":"integer","name":"offset","in":"query"},{"type":"string","name":"filter","in":"query"}],"responses":{"200":{"description":"A list of terminators","schema":{"$ref":"#/definitions/listClientTerminatorsEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/sessions":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of active sessions resources; supports filtering, sorting, and pagination.\\n\\nSessions are tied to an API session and are moved when an API session times out or logs out. Active sessions\\n(i.e. Ziti SDK connected to an edge router) will keep the session and API session marked as active.\\n","tags":["Session"],"summary":"List sessions","operationId":"listSessions","parameters":[{"type":"integer","name":"limit","in":"query"},{"type":"integer","name":"offset","in":"query"},{"type":"string","name":"filter","in":"query"}],"responses":{"200":{"description":"A list of sessions","schema":{"$ref":"#/definitions/listSessionsEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Create a session resource.","tags":["Session"],"summary":"Create a session resource","operationId":"createSession","parameters":[{"description":"A session to create","name":"session","in":"body","required":true,"schema":{"$ref":"#/definitions/sessionCreate"}}],"responses":{"201":{"description":"The create request was successful and the resource has been added at the following location","schema":{"$ref":"#/definitions/sessionCreateEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"/sessions/{id}":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a single session by id.","tags":["Session"],"summary":"Retrieves a single session","operationId":"detailSession","responses":{"200":{"description":"A single session","schema":{"$ref":"#/definitions/detailSessionEnvelope"}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"delete":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Delete a session by id.","tags":["Session"],"summary":"Delete a session","operationId":"deleteSession","responses":{"200":{"description":"The delete request was successful and the resource has been removed","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"409":{"description":"The resource requested to be removed/altered cannot be as it is referenced by another object.","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"causeMessage":"referenced by /some-resource/05f4f710-c155-4a74-86d5-77558eb9cb42","code":"CONFLICT_CANNOT_MODIFY_REFERENCED","message":"The resource cannot be deleted/modified. Remove all referencing resources first.","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/specs":{"get":{"security":[],"description":"Returns a list of spec files embedded within the controller for consumption/documentation/code geneartion","tags":["Informational"],"summary":"Returns a list of API specs","operationId":"listSpecs","responses":{"200":{"description":"A list of specifications","schema":{"$ref":"#/definitions/listSpecsEnvelope"}}}}},"/specs/{id}":{"get":{"security":[],"description":"Returns single spec resource embedded within the controller for consumption/documentation/code geneartion","tags":["Informational"],"summary":"Return a single spec resource","operationId":"detailSpec","responses":{"200":{"description":"A single specification","schema":{"$ref":"#/definitions/detailSpecEnvelope"}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/specs/{id}/spec":{"get":{"security":[],"description":"Return the body of the specification (i.e. Swagger, OpenAPI 2.0, 3.0, etc).","produces":["text/yaml","application/json"],"tags":["Informational"],"summary":"Returns the spec\'s file","operationId":"detailSpecBody","responses":{"200":{"description":"Returns the document that represents the specification","schema":{"$ref":"#/definitions/detailSpecBodyEnvelope"}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/version":{"get":{"security":[],"tags":["Informational"],"summary":"Returns version information","operationId":"listVersion","responses":{"200":{"description":"Version information for the controller","schema":{"$ref":"#/definitions/listVersionEnvelope"}}}}}},"definitions":{"apiAddress":{"type":"object","properties":{"url":{"type":"string"},"version":{"type":"string"}}},"apiAddressArray":{"type":"array","items":{"$ref":"#/definitions/apiAddress"}},"apiAddressList":{"type":"object","additionalProperties":{"$ref":"#/definitions/apiAddressArray"}},"apiError":{"type":"object","properties":{"args":{"$ref":"#/definitions/apiErrorArgs"},"cause":{"$ref":"#/definitions/apiErrorCause"},"causeMessage":{"type":"string"},"code":{"type":"string"},"data":{"type":"object","additionalProperties":true},"message":{"type":"string"},"requestId":{"type":"string"}}},"apiErrorArgs":{"type":"object","properties":{"urlVars":{"type":"object","additionalProperties":{"type":"string"}}}},"apiErrorCause":{"allOf":[{"$ref":"#/definitions/apiFieldError"},{"$ref":"#/definitions/apiError"}]},"apiErrorEnvelope":{"type":"object","required":["meta","error"],"properties":{"error":{"$ref":"#/definitions/apiError"},"meta":{"$ref":"#/definitions/meta"}}},"apiFieldError":{"type":"object","properties":{"field":{"type":"string"},"reason":{"type":"string"},"value":{"description":"can be any value - string, number, boolean, array or object"}}},"apiSessionDetail":{"description":"An API Session object","type":"object","allOf":[{"$ref":"#/definitions/baseEntity"},{"type":"object","required":["token","identity","identityId","configTypes","ipAddress","authQueries","cachedUpdatedAt","isMfaRequired","isMfaComplete","authenticatorId","isCertExtendable"],"properties":{"authQueries":{"$ref":"#/definitions/authQueryList"},"authenticatorId":{"type":"string"},"cachedLastActivityAt":{"type":"string","format":"date-time"},"configTypes":{"type":"array","items":{"type":"string"}},"identity":{"$ref":"#/definitions/entityRef"},"identityId":{"type":"string"},"ipAddress":{"type":"string"},"isCertExtendable":{"type":"boolean"},"isMfaComplete":{"type":"boolean"},"isMfaRequired":{"type":"boolean"},"lastActivityAt":{"type":"string","format":"date-time"},"token":{"type":"string"}}}]},"apiVersion":{"type":"object","required":["path"],"properties":{"apiBaseUrls":{"type":"array","items":{"type":"string"}},"path":{"type":"string"},"version":{"type":"string"}}},"attributes":{"description":"A set of strings used to loosly couple this resource to policies","type":"array","items":{"type":"string"},"x-nullable":true,"x-omitempty":true},"authQueryDetail":{"type":"object","required":["provider"],"properties":{"clientId":{"type":"string"},"format":{"$ref":"#/definitions/mfaFormats"},"httpMethod":{"type":"string"},"httpUrl":{"type":"string"},"id":{"type":"string"},"maxLength":{"type":"integer"},"minLength":{"type":"integer"},"provider":{"$ref":"#/definitions/mfaProviders"},"scopes":{"type":"array","items":{"type":"string"}},"typeId":{"$ref":"#/definitions/authQueryType"}}},"authQueryList":{"type":"array","items":{"$ref":"#/definitions/authQueryDetail"}},"authQueryType":{"type":"string","enum":["MFA","TOTP","EXT-JWT"]},"authenticate":{"description":"A generic authenticate object meant for use with the /authenticate path. Required fields depend on authentication method.","type":"object","properties":{"configTypes":{"$ref":"#/definitions/configTypes"},"envInfo":{"$ref":"#/definitions/envInfo"},"password":{"$ref":"#/definitions/password"},"sdkInfo":{"$ref":"#/definitions/sdkInfo"},"username":{"$ref":"#/definitions/username"}}},"authenticatorDetail":{"description":"A singular authenticator resource","type":"object","allOf":[{"$ref":"#/definitions/baseEntity"},{"type":"object","required":["method","identityId","identity"],"properties":{"certPem":{"type":"string"},"fingerprint":{"type":"string"},"identity":{"$ref":"#/definitions/entityRef"},"identityId":{"type":"string"},"isIssuedByNetwork":{"type":"boolean"},"method":{"type":"string"},"username":{"type":"string"}}}]},"authenticatorList":{"description":"An array of authenticator resources","type":"array","items":{"$ref":"#/definitions/authenticatorDetail"}},"authenticatorPatch":{"description":"All of the fields on an authenticator that may be updated","type":"object","properties":{"password":{"$ref":"#/definitions/passwordNullable"},"tags":{"$ref":"#/definitions/tags"},"username":{"$ref":"#/definitions/usernameNullable"}}},"authenticatorPatchWithCurrent":{"description":"All of the fields on an authenticator that may be updated","type":"object","allOf":[{"$ref":"#/definitions/authenticatorPatch"},{"type":"object","required":["currentPassword"],"properties":{"currentPassword":{"$ref":"#/definitions/password"}}}]},"authenticatorUpdate":{"description":"All of the fields on an authenticator that will be updated","type":"object","required":["username","password"],"properties":{"password":{"$ref":"#/definitions/password"},"tags":{"$ref":"#/definitions/tags"},"username":{"$ref":"#/definitions/username"}}},"authenticatorUpdateWithCurrent":{"description":"All of the fields on an authenticator that will be updated","type":"object","allOf":[{"$ref":"#/definitions/authenticatorUpdate"},{"type":"object","required":["currentPassword"],"properties":{"currentPassword":{"$ref":"#/definitions/password"}}}]},"baseEntity":{"description":"Fields shared by all Edge API entities","type":"object","required":["id","createdAt","updatedAt","_links"],"properties":{"_links":{"$ref":"#/definitions/links"},"createdAt":{"type":"string","format":"date-time"},"id":{"type":"string"},"tags":{"$ref":"#/definitions/tags"},"updatedAt":{"type":"string","format":"date-time"}}},"capabilities":{"type":"string","enum":["OIDC_AUTH","HA_CONTROLLER"]},"clientExternalJwtSignerDetail":{"description":"A External JWT Signer resource","type":"object","allOf":[{"$ref":"#/definitions/baseEntity"},{"type":"object","required":["name","externalAuthUrl"],"properties":{"clientId":{"type":"string","x-nullable":true},"externalAuthUrl":{"type":"string","format":"url"},"name":{"type":"string","example":"MyApps Signer"},"scopes":{"type":"array","items":{"type":"string"}}}}]},"clientExternalJwtSignerList":{"description":"An array of External JWT Signers resources","type":"array","items":{"$ref":"#/definitions/clientExternalJwtSignerDetail"}},"commonEdgeRouterProperties":{"type":"object","required":["hostname","name","supportedProtocols","syncStatus","isOnline","cost","noTraversal","disabled"],"properties":{"appData":{"$ref":"#/definitions/tags"},"cost":{"type":"integer","maximum":65535,"minimum":0,"x-nullable":true},"disabled":{"type":"boolean"},"hostname":{"type":"string"},"isOnline":{"type":"boolean"},"name":{"type":"string"},"noTraversal":{"type":"boolean","x-nullable":true},"supportedProtocols":{"type":"object","additionalProperties":{"type":"string"}},"syncStatus":{"type":"string"}}},"configTypes":{"description":"Specific configuration types that should be returned","type":"array","items":{"type":"string"}},"controllerDetail":{"description":"A controller resource","type":"object","allOf":[{"$ref":"#/definitions/baseEntity"},{"type":"object","required":["name","certPem","fingerprint","isOnline","lastJoinedAt"],"properties":{"apiAddresses":{"$ref":"#/definitions/apiAddressList"},"certPem":{"type":"string"},"ctrlAddress":{"type":"string","x-nullable":true},"fingerprint":{"type":"string"},"isOnline":{"type":"boolean"},"lastJoinedAt":{"type":"string","format":"date-time"},"name":{"type":"string"}}}]},"controllersList":{"description":"An array of controller resources","type":"array","items":{"$ref":"#/definitions/controllerDetail"}},"createCurrentApiSessionCertificateEnvelope":{"required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/currentApiSessionCertificateCreateResponse"},"meta":{"$ref":"#/definitions/meta"}}},"createEnvelope":{"type":"object","properties":{"data":{"$ref":"#/definitions/createLocation"},"meta":{"$ref":"#/definitions/meta"}}},"createLocation":{"type":"object","properties":{"_links":{"$ref":"#/definitions/links"},"id":{"type":"string"}}},"currentApiSessionCertificateCreate":{"type":"object","required":["csr"],"properties":{"csr":{"type":"string"}}},"currentApiSessionCertificateCreateResponse":{"allOf":[{"$ref":"#/definitions/createLocation"},{"type":"object","required":["certificate"],"properties":{"cas":{"type":"string"},"certificate":{"type":"string"}}}]},"currentApiSessionCertificateDetail":{"type":"object","allOf":[{"$ref":"#/definitions/baseEntity"},{"type":"object","required":["subject","fingerprint","validFrom","validTo","certificate"],"properties":{"certificate":{"type":"string"},"fingerprint":{"type":"string"},"subject":{"type":"string"},"validFrom":{"type":"string","format":"date-time"},"validTo":{"type":"string","format":"date-time"}}}]},"currentApiSessionCertificateList":{"type":"array","items":{"$ref":"#/definitions/currentApiSessionCertificateDetail"}},"currentApiSessionDetail":{"description":"An API Session object for the current API session","type":"object","allOf":[{"$ref":"#/definitions/apiSessionDetail"},{"type":"object","required":["expiresAt","expirationSeconds"],"properties":{"expirationSeconds":{"type":"integer"},"expiresAt":{"type":"string","format":"date-time"}}}]},"currentApiSessionDetailEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/currentApiSessionDetail"},"meta":{"$ref":"#/definitions/meta"}}},"currentApiSessionServiceUpdateList":{"type":"object","required":["lastChangeAt"],"properties":{"lastChangeAt":{"type":"string","format":"date-time"}}},"currentIdentityDetailEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/identityDetail"},"meta":{"$ref":"#/definitions/meta"}}},"currentIdentityEdgeRouterDetail":{"description":"A detail edge router resource","type":"object","allOf":[{"$ref":"#/definitions/baseEntity"},{"$ref":"#/definitions/commonEdgeRouterProperties"}]},"currentIdentityEdgeRouterList":{"description":"A list of edge router resources","type":"array","items":{"$ref":"#/definitions/currentIdentityEdgeRouterDetail"}},"detailAuthenticatorEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/authenticatorDetail"},"meta":{"$ref":"#/definitions/meta"}}},"detailCurrentApiSessionCertificateEnvelope":{"required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/currentApiSessionCertificateDetail"},"meta":{"$ref":"#/definitions/meta"}}},"detailMfa":{"type":"object","allOf":[{"$ref":"#/definitions/baseEntity"},{"required":["isVerified"],"properties":{"isVerified":{"type":"boolean"},"provisioningUrl":{"description":"Not provided if MFA verification has been completed","type":"string"},"recoveryCodes":{"description":"Not provided if MFA verification has been completed","type":"array","items":{"type":"string"}}}}]},"detailMfaEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/detailMfa"},"meta":{"$ref":"#/definitions/meta"}}},"detailMfaRecoveryCodes":{"type":"object","allOf":[{"$ref":"#/definitions/baseEntity"},{"required":["recoveryCodes"],"properties":{"recoveryCodes":{"type":"array","items":{"type":"string"}}}}]},"detailMfaRecoveryCodesEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/detailMfaRecoveryCodes"},"meta":{"$ref":"#/definitions/meta"}}},"detailServiceEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/serviceDetail"},"meta":{"$ref":"#/definitions/meta"}}},"detailSessionEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/sessionDetail"},"meta":{"$ref":"#/definitions/meta"}}},"detailSpecBodyEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/specBodyDetail"},"meta":{"$ref":"#/definitions/meta"}}},"detailSpecEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/specDetail"},"meta":{"$ref":"#/definitions/meta"}}},"dialBind":{"type":"string","enum":["Dial","Bind","Invalid"]},"dialBindArray":{"type":"array","items":{"$ref":"#/definitions/dialBind"}},"empty":{"type":"object","required":["meta","data"],"properties":{"data":{"type":"object","example":{}},"meta":{"$ref":"#/definitions/meta"}}},"enrollmentCerts":{"type":"object","properties":{"ca":{"description":"A PEM encoded set of CA certificates to trust","type":"string"},"cert":{"description":"A PEM encoded set of certificates to use as the client chain","type":"string"},"serverCert":{"description":"A PEM encoded set of certificates to use as the servers chain","type":"string"}}},"enrollmentCertsEnvelope":{"type":"object","properties":{"data":{"$ref":"#/definitions/enrollmentCerts"},"meta":{"$ref":"#/definitions/meta"}}},"entityRef":{"description":"A reference to another resource and links to interact with it","type":"object","properties":{"_links":{"$ref":"#/definitions/links"},"entity":{"type":"string"},"id":{"type":"string"},"name":{"type":"string"}}},"envInfo":{"description":"Environment information an authenticating client may provide","type":"object","properties":{"arch":{"type":"string","maxLength":255},"domain":{"type":"string","maxLength":253},"hostname":{"type":"string","maxLength":253},"os":{"type":"string","maxLength":255},"osRelease":{"type":"string","maxLength":255},"osVersion":{"type":"string","maxLength":255}}},"erOttEnrollmentRequest":{"type":"object","properties":{"clientCsr":{"type":"string"},"serverCsr":{"type":"string"},"token":{"type":"string"}}},"identityAuthenticators":{"type":"object","properties":{"cert":{"type":"object","properties":{"fingerprint":{"type":"string"},"id":{"type":"string"}}},"updb":{"type":"object","properties":{"id":{"type":"string"},"username":{"type":"string"}}}}},"identityDetail":{"description":"Detail of a specific identity","type":"object","allOf":[{"$ref":"#/definitions/baseEntity"},{"type":"object","required":["name","type","typeId","isDefaultAdmin","isAdmin","authenticators","enrollment","envInfo","sdkInfo","roleAttributes","hasEdgeRouterConnection","edgeRouterConnectionStatus","hasApiSession","isMfaEnabled","serviceHostingPrecedences","serviceHostingCosts","defaultHostingCost","authPolicyId","authPolicy","externalId","disabled"],"properties":{"appData":{"$ref":"#/definitions/tags"},"authPolicy":{"$ref":"#/definitions/entityRef"},"authPolicyId":{"type":"string"},"authenticators":{"$ref":"#/definitions/identityAuthenticators"},"defaultHostingCost":{"$ref":"#/definitions/terminatorCost"},"defaultHostingPrecedence":{"$ref":"#/definitions/terminatorPrecedence"},"disabled":{"type":"boolean"},"disabledAt":{"type":"string","format":"date-time","x-nullable":true},"disabledUntil":{"type":"string","format":"date-time","x-nullable":true},"edgeRouterConnectionStatus":{"type":"string","enum":["online","offline","unknown"]},"enrollment":{"$ref":"#/definitions/identityEnrollments"},"envInfo":{"$ref":"#/definitions/envInfo"},"externalId":{"type":"string","x-nullable":true},"hasApiSession":{"type":"boolean"},"hasEdgeRouterConnection":{"type":"boolean"},"isAdmin":{"type":"boolean"},"isDefaultAdmin":{"type":"boolean"},"isMfaEnabled":{"type":"boolean"},"name":{"type":"string"},"roleAttributes":{"$ref":"#/definitions/attributes"},"sdkInfo":{"$ref":"#/definitions/sdkInfo"},"serviceHostingCosts":{"$ref":"#/definitions/terminatorCostMap"},"serviceHostingPrecedences":{"$ref":"#/definitions/terminatorPrecedenceMap"},"type":{"$ref":"#/definitions/entityRef"},"typeId":{"type":"string"}}}]},"identityEnrollments":{"type":"object","properties":{"ott":{"type":"object","properties":{"expiresAt":{"type":"string","format":"date-time"},"id":{"type":"string"},"jwt":{"type":"string"},"token":{"type":"string"}}},"ottca":{"type":"object","properties":{"ca":{"$ref":"#/definitions/entityRef"},"caId":{"type":"string"},"expiresAt":{"type":"string","format":"date-time"},"id":{"type":"string"},"jwt":{"type":"string"},"token":{"type":"string"}}},"updb":{"type":"object","properties":{"expiresAt":{"type":"string","format":"date-time"},"id":{"type":"string"},"jwt":{"type":"string"},"token":{"type":"string"}}}}},"identityExtendCerts":{"type":"object","properties":{"ca":{"description":"A PEM encoded set of CA certificates","type":"string"},"clientCert":{"description":"A PEM encoded client certificate","type":"string"}}},"identityExtendEnrollmentEnvelope":{"type":"object","properties":{"data":{"$ref":"#/definitions/identityExtendCerts"},"meta":{"$ref":"#/definitions/meta"}}},"identityExtendEnrollmentRequest":{"type":"object","required":["clientCertCsr"],"properties":{"clientCertCsr":{"type":"string"}}},"identityExtendValidateEnrollmentRequest":{"type":"object","required":["clientCert"],"properties":{"clientCert":{"description":"A PEM encoded client certificate previously returned after an extension request","type":"string"}}},"jwk":{"type":"object","required":["kty"],"properties":{"alg":{"description":"Algorithm intended for use with the key.","type":"string"},"crv":{"description":"Curve for ECC Public Keys.","type":"string"},"d":{"description":"ECC Private Key or RSA Private Exponent.","type":"string"},"dp":{"description":"First Factor CRT Exponent for RSA.","type":"string"},"dq":{"description":"Second Factor CRT Exponent for RSA.","type":"string"},"e":{"description":"Exponent for RSA Public Key.","type":"string"},"key_ops":{"description":"Intended key operations, e.g., sign, verify.","type":"array","items":{"type":"string"}},"kid":{"description":"Key ID.","type":"string"},"kty":{"description":"Key Type.","type":"string"},"n":{"description":"Modulus for RSA Public Key.","type":"string"},"oth":{"description":"Other Primes Info not represented by the first two primes.","type":"array","items":{"$ref":"#/definitions/otherPrime"}},"p":{"description":"First Prime Factor for RSA.","type":"string"},"q":{"description":"Second Prime Factor for RSA.","type":"string"},"qi":{"description":"First CRT Coefficient for RSA.","type":"string"},"use":{"description":"Public key use, e.g., sig (signature) or enc (encryption).","type":"string"},"x":{"description":"X Coordinate for ECC Public Keys.","type":"string"},"x5c":{"description":"X.509 Certificate Chain.","type":"array","items":{"type":"string"}},"x5t":{"description":"X.509 Certificate SHA-1 Thumbprint.","type":"string"},"x5t#S256":{"description":"X.509 Certificate SHA-256 Thumbprint.","type":"string"},"x5u":{"description":"X.509 URL.","type":"string"},"y":{"description":"Y Coordinate for ECC Public Keys.","type":"string"}}},"jwks":{"type":"object","properties":{"keys":{"type":"array","items":{"$ref":"#/definitions/jwk"}}}},"link":{"description":"A link to another resource","type":"object","required":["href"],"properties":{"comment":{"type":"string"},"href":{"type":"string","format":"uri"},"method":{"type":"string"}}},"links":{"description":"A map of named links","type":"object","additionalProperties":{"$ref":"#/definitions/link"},"x-omitempty":false},"listAuthenticatorsEnvelope":{"type":"object","properties":{"data":{"$ref":"#/definitions/authenticatorList"},"meta":{"$ref":"#/definitions/meta"}}},"listClientExternalJwtSignersEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/clientExternalJwtSignerList"},"meta":{"$ref":"#/definitions/meta"}}},"listClientTerminatorsEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/terminatorClientList"},"meta":{"$ref":"#/definitions/meta"}}},"listControllersEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/controllersList"},"meta":{"$ref":"#/definitions/meta"}}},"listCurrentApiSessionCertificatesEnvelope":{"required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/currentApiSessionCertificateList"},"meta":{"$ref":"#/definitions/meta"}}},"listCurrentApiSessionServiceUpdatesEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/currentApiSessionServiceUpdateList"},"meta":{"$ref":"#/definitions/meta"}}},"listCurrentIdentityEdgeRoutersEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/currentIdentityEdgeRouterList"},"meta":{"$ref":"#/definitions/meta"}}},"listEnumeratedCapabilitiesEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"type":"array","items":{"$ref":"#/definitions/capabilities"}},"meta":{"$ref":"#/definitions/meta"}}},"listNetworkJWTsEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/networkJWTList"},"meta":{"$ref":"#/definitions/meta"}}},"listProtocols":{"type":"object","additionalProperties":{"$ref":"#/definitions/protocol"}},"listProtocolsEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/listProtocols"},"meta":{"$ref":"#/definitions/meta"}}},"listServiceEdgeRoutersEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/serviceEdgeRouters"},"meta":{"$ref":"#/definitions/meta"}}},"listServicesEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/serviceList"},"meta":{"$ref":"#/definitions/meta"}}},"listSessionsEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/sessionList"},"meta":{"$ref":"#/definitions/meta"}}},"listSpecsEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/specList"},"meta":{"$ref":"#/definitions/meta"}}},"listVersionEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/version"},"meta":{"$ref":"#/definitions/meta"}}},"meta":{"type":"object","properties":{"apiEnrollmentVersion":{"type":"string"},"apiVersion":{"type":"string"},"filterableFields":{"type":"array","items":{"type":"string"},"x-omitempty":true},"pagination":{"$ref":"#/definitions/pagination"}}},"mfaCode":{"type":"object","required":["code"],"properties":{"code":{"type":"string"}}},"mfaFormats":{"type":"string","enum":["numeric","alpha","alphaNumeric"]},"mfaProviders":{"type":"string","enum":["ziti","url"]},"networkJWT":{"description":"A network JWT","type":"object","allOf":[{"type":"object","required":["name","token"],"properties":{"name":{"type":"string"},"token":{"type":"string"}}}]},"networkJWTList":{"description":"An array of network JWTs","type":"array","items":{"$ref":"#/definitions/networkJWT"}},"nonceChallenge":{"type":"object","required":["nonce","keyId"],"properties":{"keyId":{"type":"string"},"nonce":{"type":"string","format":"uuid"}}},"nonceSignature":{"type":"object","required":["signature","algorithm","kid","caPool"],"properties":{"algorithm":{"type":"string"},"caPool":{"type":"string"},"kid":{"type":"string"},"signature":{"type":"string"}}},"osType":{"type":"string","enum":["Windows","WindowsServer","Android","iOS","Linux","macOS"]},"otherPrime":{"type":"object","properties":{"d":{"description":"Factor CRT exponent.","type":"string"},"r":{"description":"Prime factor.","type":"string"},"t":{"description":"Factor CRT coefficient.","type":"string"}}},"ottEnrollmentRequest":{"type":"object","properties":{"clientCsr":{"type":"string"},"token":{"type":"string"}}},"pagination":{"type":"object","required":["limit","offset","totalCount"],"properties":{"limit":{"type":"number","format":"int64"},"offset":{"type":"number","format":"int64"},"totalCount":{"type":"number","format":"int64"}}},"password":{"type":"string","maxLength":100,"minLength":5},"passwordNullable":{"type":"string","maxLength":100,"minLength":5,"x-nullable":true},"postureCheckType":{"type":"string","enum":["OS","PROCESS","DOMAIN","MAC","MFA","PROCESS_MULTI"]},"postureQueries":{"type":"object","required":["policyId","isPassing","postureQueries"],"properties":{"isPassing":{"type":"boolean"},"policyId":{"type":"string"},"policyType":{"$ref":"#/definitions/dialBind"},"postureQueries":{"type":"array","items":{"$ref":"#/definitions/postureQuery"}}}},"postureQuery":{"type":"object","allOf":[{"$ref":"#/definitions/baseEntity"},{"type":"object","required":["queryType","isPassing","timeout","timeoutRemaining"],"properties":{"isPassing":{"type":"boolean"},"process":{"$ref":"#/definitions/postureQueryProcess"},"processes":{"type":"array","items":{"$ref":"#/definitions/postureQueryProcess"}},"queryType":{"$ref":"#/definitions/postureCheckType"},"timeout":{"type":"integer"},"timeoutRemaining":{"type":"integer"}}}]},"postureQueryProcess":{"type":"object","properties":{"osType":{"$ref":"#/definitions/osType"},"path":{"type":"string"}}},"postureResponse":{"type":"object","required":["services"],"properties":{"services":{"type":"array","items":{"$ref":"#/definitions/postureResponseService"}}}},"postureResponseCreate":{"type":"object","required":["id","typeId"],"properties":{"id":{"type":"string"},"typeId":{"$ref":"#/definitions/postureCheckType"}},"discriminator":"typeId"},"postureResponseDomainCreate":{"allOf":[{"$ref":"#/definitions/postureResponseCreate"},{"type":"object","required":["domain"],"properties":{"domain":{"type":"string"}}}],"x-class":"DOMAIN"},"postureResponseEndpointStateCreate":{"allOf":[{"$ref":"#/definitions/postureResponseCreate"},{"type":"object","properties":{"unlocked":{"type":"boolean"},"woken":{"type":"boolean"}}}],"x-class":"ENDPOINT_STATE"},"postureResponseEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/postureResponse"},"meta":{"$ref":"#/definitions/meta"}}},"postureResponseMacAddressCreate":{"allOf":[{"$ref":"#/definitions/postureResponseCreate"},{"type":"object","required":["macAddresses"],"properties":{"macAddresses":{"type":"array","items":{"type":"string"}}}}],"x-class":"MAC"},"postureResponseOperatingSystemCreate":{"allOf":[{"$ref":"#/definitions/postureResponseCreate"},{"type":"object","required":["type","version"],"properties":{"build":{"type":"string"},"type":{"type":"string"},"version":{"type":"string"}}}],"x-class":"OS"},"postureResponseProcessCreate":{"allOf":[{"$ref":"#/definitions/postureResponseCreate"},{"type":"object","required":["process"],"properties":{"hash":{"type":"string"},"isRunning":{"type":"boolean"},"path":{"type":"string"},"signerFingerprints":{"type":"array","items":{"type":"string"}}}}],"x-class":"PROCESS"},"postureResponseService":{"type":"object","required":["id","name","postureQueryType","timeout","timeoutRemaining"],"properties":{"id":{"type":"string"},"name":{"type":"string"},"postureQueryType":{"type":"string"},"timeout":{"type":"integer"},"timeoutRemaining":{"type":"integer"}}},"protocol":{"type":"object","required":["address"],"properties":{"address":{"type":"string"}}},"routerExtendEnrollmentRequest":{"type":"object","required":["serverCertCsr","certCsr"],"properties":{"certCsr":{"type":"string"},"serverCertCsr":{"type":"string"}}},"sdkInfo":{"description":"SDK information an authenticating client may provide","type":"object","properties":{"appId":{"type":"string","maxLength":255},"appVersion":{"type":"string","maxLength":255},"branch":{"type":"string","maxLength":255},"revision":{"type":"string","maxLength":255},"type":{"type":"string","maxLength":255},"version":{"type":"string","maxLength":255}}},"serviceDetail":{"type":"object","allOf":[{"$ref":"#/definitions/baseEntity"},{"type":"object","required":["name","maxIdleTimeMillis","terminatorStrategy","roleAttributes","permissions","configs","config","encryptionRequired","postureQueries"],"properties":{"config":{"description":"map of config data for this service keyed by the config type name. Only configs of the types requested will be returned.","type":"object","additionalProperties":{"type":"object","additionalProperties":{"type":"object"}}},"configs":{"type":"array","items":{"type":"string"}},"encryptionRequired":{"description":"Describes whether connections must support end-to-end encryption on both sides of the connection. Read-only property, set at create.","type":"boolean"},"maxIdleTimeMillis":{"type":"integer"},"name":{"type":"string"},"permissions":{"$ref":"#/definitions/dialBindArray"},"postureQueries":{"type":"array","items":{"$ref":"#/definitions/postureQueries"}},"roleAttributes":{"$ref":"#/definitions/attributes"},"terminatorStrategy":{"type":"string"}}}]},"serviceEdgeRouters":{"type":"object","properties":{"edgeRouters":{"type":"array","items":{"$ref":"#/definitions/commonEdgeRouterProperties"}}}},"serviceList":{"type":"array","items":{"$ref":"#/definitions/serviceDetail"}},"servicePatch":{"type":"object","properties":{"configs":{"type":"array","items":{"type":"string"}},"encryptionRequired":{"description":"Describes whether connections must support end-to-end encryption on both sides of the connection. Read-only property, set at create.","type":"boolean"},"maxIdleTimeMillis":{"type":"integer"},"name":{"type":"string"},"roleAttributes":{"type":"array","items":{"type":"string"}},"tags":{"$ref":"#/definitions/tags"},"terminatorStrategy":{"type":"string"}}},"serviceUpdate":{"type":"object","required":["name"],"properties":{"configs":{"type":"array","items":{"type":"string"}},"encryptionRequired":{"description":"Describes whether connections must support end-to-end encryption on both sides of the connection. Read-only property, set at create.","type":"boolean"},"maxIdleTimeMillis":{"type":"integer"},"name":{"type":"string"},"roleAttributes":{"type":"array","items":{"type":"string"}},"tags":{"$ref":"#/definitions/tags"},"terminatorStrategy":{"type":"string"}}},"sessionCreate":{"type":"object","properties":{"serviceId":{"type":"string"},"tags":{"$ref":"#/definitions/tags"},"type":{"$ref":"#/definitions/dialBind"}}},"sessionCreateEnvelope":{"type":"object","properties":{"data":{"$ref":"#/definitions/sessionDetail"},"meta":{"$ref":"#/definitions/meta"}}},"sessionDetail":{"type":"object","allOf":[{"$ref":"#/definitions/baseEntity"},{"type":"object","required":["type","apiSessionId","apiSession","serviceId","service","token","edgeRouters","identityId"],"properties":{"apiSession":{"$ref":"#/definitions/entityRef"},"apiSessionId":{"type":"string"},"edgeRouters":{"type":"array","items":{"$ref":"#/definitions/sessionEdgeRouter"}},"identityId":{"type":"string"},"service":{"$ref":"#/definitions/entityRef"},"serviceId":{"type":"string"},"token":{"type":"string"},"type":{"$ref":"#/definitions/dialBind"}}}]},"sessionEdgeRouter":{"allOf":[{"$ref":"#/definitions/commonEdgeRouterProperties"},{"type":"object","required":["urls"],"properties":{"urls":{"type":"object","additionalProperties":{"type":"string"}}}}]},"sessionList":{"type":"array","items":{"$ref":"#/definitions/sessionDetail"}},"specBodyDetail":{"type":"string"},"specDetail":{"type":"object","allOf":[{"$ref":"#/definitions/baseEntity"},{"type":"object","required":["name"],"properties":{"name":{"type":"string"}}}]},"specList":{"type":"array","items":{"$ref":"#/definitions/specDetail"}},"subTags":{"type":"object","additionalProperties":{"type":"object"}},"tags":{"description":"A map of user defined fields and values. The values are limited to the following types/values: null, string, boolean","allOf":[{"$ref":"#/definitions/subTags"}],"x-nullable":true},"terminatorClientDetail":{"type":"object","allOf":[{"$ref":"#/definitions/baseEntity"},{"type":"object","required":["serviceId","service","routerId","identity"],"properties":{"identity":{"type":"string"},"routerId":{"type":"string"},"service":{"$ref":"#/definitions/entityRef"},"serviceId":{"type":"string"}}}]},"terminatorClientList":{"type":"array","items":{"$ref":"#/definitions/terminatorClientDetail"}},"terminatorCost":{"type":"integer","maximum":65535,"minimum":0},"terminatorCostMap":{"type":"object","additionalProperties":{"$ref":"#/definitions/terminatorCost"}},"terminatorPrecedence":{"type":"string","enum":["default","required","failed"]},"terminatorPrecedenceMap":{"type":"object","additionalProperties":{"$ref":"#/definitions/terminatorPrecedence"}},"username":{"type":"string","maxLength":100,"minLength":4},"usernameNullable":{"type":"string","maxLength":100,"minLength":4,"x-nullable":true},"version":{"type":"object","properties":{"apiVersions":{"type":"object","additionalProperties":{"type":"object","additionalProperties":{"$ref":"#/definitions/apiVersion"}}},"buildDate":{"type":"string","example":"2020-02-11 16:09:08"},"capabilities":{"type":"array","items":{"type":"string"}},"revision":{"type":"string","example":"ea556fc18740"},"runtimeVersion":{"type":"string","example":"go1.13.5"},"version":{"type":"string","example":"v0.9.0"}}}},"securityDefinitions":{"oauth2":{"type":"oauth2","flow":"accessCode","authorizationUrl":"/oidc/authorize","tokenUrl":"/oidc/token","scopes":{"openid":"openid"}},"ztSession":{"description":"An API Key that is provided post authentication","type":"apiKey","name":"zt-session","in":"header"}}}},"edge-management":{"converted":{"openapi":"3.0.0","info":{"description":"OpenZiti Edge Management API","title":"Ziti Edge Management","contact":{"name":"OpenZiti","url":"https://openziti.discourse.group","email":"help@openziti.org"},"license":{"name":"Apache 2.0","url":"https://www.apache.org/licenses/LICENSE-2.0.html"},"version":"0.26.35"},"paths":{"/":{"get":{"security":[],"tags":["Informational"],"summary":"Returns version information","operationId":"listRoot","responses":{"200":{"description":"Version information for the controller","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listVersionEnvelope"}}}}}}},"/.well-known/est/cacerts":{"get":{"security":[],"description":"This endpoint is used during enrollments to bootstrap trust between enrolling clients and the Ziti Edge API.\\nThis endpoint returns a base64 encoded PKCS7 store. The content can be base64 decoded and parsed by any library\\nthat supports parsing PKCS7 stores.\\n","tags":["Well Known"],"summary":"Get CA Cert Store","operationId":"listWellKnownCas","responses":{"200":{"description":"A base64 encoded PKCS7 store","content":{"application/pkcs7-mime":{"schema":{"type":"string","example":"MIIMUQYJKoZIhvcNAQcCoIIMQjCCDD4CAQExADALBgkqhkiG9w0BBwGgggwkMIIG\\nBjCCA+6gAwIBAgICEAAwDQYJKoZIhvcNAQELBQAwgZcxCzAJBgNVBAYTAlVTMRcw\\nFQYDVQQIDA5Ob3J0aCBDYXJvbGluYTESMBAGA1UEBwwJQ2hhcmxvdHRlMRMwEQYD\\nVQQKDApOZXRGb3VuZHJ5MSkwJwYDVQQLDCBOZXRGb3VuZHJ5IENlcnRpZmljYXRl\\nIEF1dGhvcml0eTEbMBkGA1UEAwwSTmV0Rm91bmRyeSBSb290IENBMB4XDTE4MDUx\\nODE2NTcyM1oXDTI4MDUxNTE2NTcyM1owgYsxCzAJBgNVBAYTAlVTMRcwFQYDVQQI\\nDA5Ob3J0aCBDYXJvbGluYTETMBEGA1UECgwKTmV0Rm91bmRyeTEpMCcGA1UECwwg\\nTmV0Rm91bmRyeSBDZXJ0aWZpY2F0ZSBBdXRob3JpdHkxIzAhBgNVBAMMGk5ldEZv\\ndW5kcnkgSW50ZXJtZWRpYXRlIENBMIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIIC\\nCgKCAgEAsb1EPhMUweS9WpjT7L54xAOmZqugJ6fhSrFfLUwNUy172q+ASvZTpT1z\\nKIPcZpGmPB3TX2bHaAR67BbRkUR11JgWE3U8+FsGrYmPZtaKM6fg8Mh0WZ41oMYQ\\nNJyQixOktrgqfybyJoT5PeT5AA7QQmd8mku2X9nkAu6gWPf2nHNc7SeQdijmyQQa\\nVK3oqyaxOzWzsU/XbfMEz/ObkefUxgt5Z6jlK0xcW0Q+QgtawMKLUiuo6obWRPcl\\n7Hm9Sze8XJS5pbvS5JkUszxoRZuDVHZylrlHIpA/IL+BnvS+M7SP28UWe9skrv/s\\n6ACpJtuPJ1EYf5fakugOpY7i+hq7YNi//csbc49Qjn2OtttrR7JcTaHUEU1I/tQb\\nQGAtNkI4pJjRVUdDawQFQlWHZD1COixNLErs2HzAI00DhLrY6SKITI/kjN0Xx010\\nXdMcdfay0PLWm6RwxiRmMQFL4GNIC895NF1q6xV4W4rWgqUNlcvKpy+i1chWpRbU\\nHe16ul0qh10fcESrRvAbXn5YrQJLrwbSr+85ubN8lYdNLE0qg2cIXZlUilarZZzW\\nghtCe+KkUpjfRuAi/CqfSwNK3QXEfeVEK6S49mHeSekOizFIw7fmDhCz9vXwMOnb\\nryRSLEJks0gIRcSDVChXheAqC98y4kcQdniNWFnqJXoqA+rrSokCAwEAAaNmMGQw\\nHQYDVR0OBBYEFK8UXC/sq6dGVFAqEXHsQDzqzwuUMB8GA1UdIwQYMBaAFEHz6RRu\\nOuXj2mwAzOeUinfWeivpMBIGA1UdEwEB/wQIMAYBAf8CAQAwDgYDVR0PAQH/BAQD\\nAgGGMA0GCSqGSIb3DQEBCwUAA4ICAQBDAAaOE2Nbb49eOjyTNxIeOB+ZKQjJ1hUE\\ngRrootAA8NYbtKW/vyxTWnNi5XOGXd4DFS9OKZ0mL/7NyLc0mbTwPH2ZT8KTPUTS\\nCpo6yktZ/7TMjyAtWZiOMg2EH+6m/nlNSXk/v5fb8+JQLdZfpxoA017dHh3tc8l7\\nKOskCZNwQHgF/YMXrPXUNbsGkXRuJLtpjPw5O9GvPys7p+a1aJH1WCTly9zfB6j+\\nrMF+UGCPDT30sxitVlohik83j6pKLgEAP/gi8nJbILlTP7ce+gJeHR2tfDvmK91X\\n6QgCF2STUFBU7/9H1/pPRRykOxQpAd8xqSgqGEyp9Ie4tysZjwoUEnG8IVJ5ykrI\\nFximvnb4B+LABV9WEo08n8m1R8wEryrISi8fBPn3Pr5nuayOfFLa15CLTkZF40FN\\n8ika1qNZy8bWRDwTZJQUUb7VCheRWcMwdZdNmhl3J+VZLpQ+ruW7b2ajwacHz5Nw\\nBHKNcmxXb/4vHq/BnlcayHnSqT6036+OZQ+owDegcYmWV6LaM7xLErjHz2EE38M2\\nYSiW5SU1zluDe+iHb6l3Gd3Fj/X1gkMWFgYh0XPMSUSyimLNYzy4THKzmWlcQNFo\\nLLiIDbLrMt+vk+vBkIsNTTPXRJOFPBhmIF6uIUj+2YhzNotX/pQtqMKms3pPlmHq\\ndH6biwygETCCBhYwggP+oAMCAQICCQDquKpymLJ5WzANBgkqhkiG9w0BAQsFADCB\\nlzELMAkGA1UEBhMCVVMxFzAVBgNVBAgMDk5vcnRoIENhcm9saW5hMRIwEAYDVQQH\\nDAlDaGFybG90dGUxEzARBgNVBAoMCk5ldEZvdW5kcnkxKTAnBgNVBAsMIE5ldEZv\\ndW5kcnkgQ2VydGlmaWNhdGUgQXV0aG9yaXR5MRswGQYDVQQDDBJOZXRGb3VuZHJ5\\nIFJvb3QgQ0EwHhcNMTgwNTE4MTY1NDQ3WhcNMzgwNTEzMTY1NDQ3WjCBlzELMAkG\\nA1UEBhMCVVMxFzAVBgNVBAgMDk5vcnRoIENhcm9saW5hMRIwEAYDVQQHDAlDaGFy\\nbG90dGUxEzARBgNVBAoMCk5ldEZvdW5kcnkxKTAnBgNVBAsMIE5ldEZvdW5kcnkg\\nQ2VydGlmaWNhdGUgQXV0aG9yaXR5MRswGQYDVQQDDBJOZXRGb3VuZHJ5IFJvb3Qg\\nQ0EwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQDKq/Xa+749Cr3WJGYD\\nDIEtNKIRnTFc6TeiRSm/O7hG2+1Nrh/dObjZJuDjsopWP8NFA/DwlNyEphYKAeSw\\nHDmu+4nFd6ifoeDE2lYq6bNhLcgN+A3MlN5Phb2rnO32YYZwHXGWov+jtd2gaK0f\\nWsH8CQxn6n2v7qvPMTeYFP8p4jqTZw2bvZWw+LMYTFCy541DFqQLQasMg10mXRAV\\nXO7Oa9y+D1re1zLq4wS6u8ItJoKzfmvZkMvD90C/tQ4u0iJaL7GB2SE9MOPDeGVv\\npnoSAIkSVmvRDUAj2x9PuukykzoL1OAWzc5Cg+5LxRmLejVE7PvPcHaTtNag2tRD\\nw2vbMeFKN8NvQH1QYcaPWZe4Vl9b6DAuTaH5RN919H/F+ZHyjZybVPwC14lflneI\\nKyNy8JEV/YMIbEADWnuiedzDehk2Opn+0+9Zr2X/xfjCo8iWHFbNaVnQX7wdRaOo\\n783lEouncqe46FDBLBpyAuDKHQpIT3MK8rkC/1yBNxsH44vMweUZuK0u7PC9KHtm\\npQfuflYGfxA34kY6WU3jzyQHetoLYjoxTqNEEjuGpwy2o1j7RaCBEFIbYlnlbhpE\\nWFTaQf96z2GQ6m1U3y7JyDflHSu9Fo1JNkG3qXsjDwda/6W7NRJRgdFrhnOwrm7F\\n6L9X4P1HnzU/VJL66LwPmiHVjQIDAQABo2MwYTAdBgNVHQ4EFgQUQfPpFG465ePa\\nbADM55SKd9Z6K+kwHwYDVR0jBBgwFoAUQfPpFG465ePabADM55SKd9Z6K+kwDwYD\\nVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAYYwDQYJKoZIhvcNAQELBQADggIB\\nACfU74aKWROaxnue8tZb5PFkEbnDRcRrKXRhnptA0vrgB4ydnYxX9hEBZD8o6PBy\\n3rewvl5meSOBE6zyb4JD80lHdzHSVFIwbzsNOeEjCslv/PA/3Y+J7DCt6gPNMDeY\\nuEssdqeSiMoYz2gnven4flSMKgTAJd3/SpVrn35HzXiU9MkmFVpPEMnTctOjw+Jn\\ncCkG5+D9N14dxtgZ/tUfbH+GUfhyGVxRdPrX5KQqAyapMfEaMXXa8KNs7PG+sDiS\\nWI+Sg9jUGtxgkfKdVNtFW+QMXyy7eT3iXPA+1r2hFAhgfIaGtBJUhxPHMhKtjbAg\\nAX+6+2D3GAbaD1+lcQHhKry3hygQ3OX79FJW6zyPS0tiV/LfovHqX/3x9q5PTVBO\\nwEOS2/LCc4R2M7S+HIPf4eSJ+nH4uCIdJ42WCror/mRsuL7geCksi70GHuCynP4y\\nqQFszu/UtbBEsN8loTnLpOInxaGB1Y8UPm14b2Lo1/3HkoMVh0/UaHJ0TmnZ1r7m\\nfGhfRyAZYRdvT1sB+Eb4b5A2zEZqsTc9IwFOhnI4ZilPoZ5s2xejqrVw3GSvovEh\\ndprrQmvxuh+VQ23y/+/4z9b2xWyDu2zVveB4whqPe2rkgxJrEl4GfLk2DW+dN6j8\\n3Zl4lPoUZYwzkC6raCaHyFlAoaTbqz0H6rvVJYxJPS6UoQAxAA==\\n"}}}}}}},"/api-sessions":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Returns a list of active API sessions. The resources can be sorted, filtered, and paginated. This endpoint\\nrequires admin access.\\n","tags":["API Session"],"summary":"List active API sessions","operationId":"listAPISessions","parameters":[{"name":"limit","in":"query","schema":{"type":"integer"}},{"name":"offset","in":"query","schema":{"type":"integer"}},{"name":"filter","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"A list of active API Sessions","content":{"application/json; charset=utf-8":{"schema":{"$ref":"#/components/schemas/listApiSessionsEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json; charset=utf-8":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"}},"application/json":{"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json; charset=utf-8":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"}},"application/json":{"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json; charset=utf-8":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"}},"application/json":{"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}}},"/api-sessions/{id}":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a single API Session by id. Requires admin access.","tags":["API Session"],"summary":"Retrieves a single API Session","operationId":"detailAPISessions","responses":{"200":{"description":"Retrieves a singular API Session by id","content":{"application/json":{"schema":{"$ref":"#/components/schemas/detailApiSessionEnvelope"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"delete":{"security":[{"ztSession":[]}],"description":"Deletes and API sesion by id. Requires admin access.","tags":["API Session"],"summary":"Deletes an API Sessions","operationId":"deleteAPISessions","responses":{"200":{"description":"The delete request was successful and the resource has been removed","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"403":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/auth-policies":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of Auth Policies","tags":["Auth Policy"],"summary":"List Auth Policies","operationId":"listAuthPolicies","parameters":[{"name":"limit","in":"query","schema":{"type":"integer"}},{"name":"offset","in":"query","schema":{"type":"integer"}},{"name":"filter","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"A list of Auth Policies","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listAuthPoliciesEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Creates an Auth Policy. Requires admin access.","tags":["Auth Policy"],"summary":"Creates an Auth Policy","operationId":"createAuthPolicy","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/authPolicyCreate"}}},"description":"An Auth Policy to create","required":true},"responses":{"201":{"description":"The create request was successful and the resource has been added at the following location","content":{"application/json":{"schema":{"$ref":"#/components/schemas/createEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}}},"/auth-policies/{id}":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a single Auth Policy by id. Requires admin access.","tags":["Auth Policy"],"summary":"Retrieves a single Auth Policy","operationId":"detailAuthPolicy","responses":{"200":{"description":"A singular Auth Policy resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/detailAuthPolicyEnvelope"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"put":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update all fields on an Auth Policy by id. Requires admin access.","tags":["Auth Policy"],"summary":"Update all fields on an Auth Policy","operationId":"updateAuthPolicy","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/authPolicyUpdate"}}},"description":"An Auth Policy update object","required":true},"responses":{"200":{"description":"The update request was successful and the resource has been altered","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"delete":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Delete an Auth Policy by id. Requires admin access.\\n","tags":["Auth Policy"],"summary":"Delete an Auth Policy","operationId":"deleteAuthPolicy","responses":{"200":{"description":"The delete request was successful and the resource has been removed","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"patch":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update only the supplied fields on an Auth Policy by id. Requires admin access.","tags":["Auth Policy"],"summary":"Update the supplied fields on an Auth Policy","operationId":"patchAuthPolicy","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/authPolicyPatch"}}},"description":"An Auth Policy patch object","required":true},"responses":{"200":{"description":"The patch request was successful and the resource has been altered","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/authenticate":{"post":{"security":[],"description":"Allowed authentication methods include \\"password\\", \\"cert\\", and \\"ext-jwt\\"\\n","tags":["Authentication"],"summary":"Authenticate via a method supplied via a query string parameter","operationId":"authenticate","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/authenticate"}}}},"responses":{"200":{"description":"The API session associated with the session used to issue the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/currentApiSessionDetailEnvelope"}},"default":{"examples":{"response":{"value":{"data":{"_links":{"self":{"href":"./current-api-session"}},"configTypes":[],"createdAt":"2020-03-09T19:03:49.1883693Z","expiresAt":"2020-03-09T19:34:21.5600897Z","id":"27343114-b44f-406e-9981-f3c4f2f28d54","identity":{"_links":{"self":{"href":"./identities/66352d7b-a6b2-4ce9-85bb-9f18e318704d"}},"id":"66352d7b-a6b2-4ce9-85bb-9f18e318704d","name":"Default Admin","urlName":"identities"},"tags":[{"userField1":123},{"userField2":"asdf"}],"token":"28bb0ed2-0577-4632-ae70-d17106b92871","updatedAt":"2020-03-09T19:04:21.5600897Z"},"meta":{}}}}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The authentication request could not be processed as the credentials are invalid","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"INVALID_AUTH","message":"The authentication request failed","requestId":"5952ed10-3091-474f-a691-47ebab6990dc"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"name":"method","in":"query","required":true,"schema":{"type":"string","enum":["password","cert","ext-jwt"]}}]},"/authenticate/mfa":{"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Completes MFA authentication by submitting a MFA time based one time token or backup code.","tags":["Authentication","MFA"],"summary":"Complete MFA authentication","operationId":"authenticateMfa","requestBody":{"$ref":"#/components/requestBodies/mfaCode"},"responses":{"200":{"description":"Base empty response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"401":{"description":"Base empty response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}}},"/authenticators":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Returns a list of authenticators associated to identities. The resources can be sorted, filtered, and paginated.\\nThis endpoint requires admin access.\\n","tags":["Authenticator"],"summary":"List authenticators","operationId":"listAuthenticators","parameters":[{"name":"limit","in":"query","schema":{"type":"integer"}},{"name":"offset","in":"query","schema":{"type":"integer"}},{"name":"filter","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"A list of authenticators","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listAuthenticatorsEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Creates an authenticator for a specific identity. Requires admin access.\\n","tags":["Authenticator"],"summary":"Creates an authenticator","operationId":"createAuthenticator","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/authenticatorCreate"}}},"description":"A Authenticator create object","required":true},"responses":{"201":{"description":"The create request was successful and the resource has been added at the following location","content":{"application/json":{"schema":{"$ref":"#/components/schemas/createEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}}},"/authenticators/{id}":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a single authenticator by id. Requires admin access.","tags":["Authenticator"],"summary":"Retrieves a single authenticator","operationId":"detailAuthenticator","responses":{"200":{"description":"A singular authenticator resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/detailAuthenticatorEnvelope"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"put":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update all fields on an authenticator by id. Requires admin access.","tags":["Authenticator"],"summary":"Update all fields on an authenticator","operationId":"updateAuthenticator","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/authenticatorUpdate"}}},"description":"An authenticator put object","required":true},"responses":{"200":{"description":"The update request was successful and the resource has been altered","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"delete":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Delete an authenticator by id. Deleting all authenticators for an identity will make it impossible to log in.\\nRequires admin access.\\n","tags":["Authenticator"],"summary":"Delete an Authenticator","operationId":"deleteAuthenticator","responses":{"200":{"description":"The delete request was successful and the resource has been removed","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"patch":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update the supplied fields on an authenticator by id. Requires admin access.","tags":["Authenticator"],"summary":"Update the supplied fields on an authenticator","operationId":"patchAuthenticator","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/authenticatorPatch"}}},"description":"An authenticator patch object","required":true},"responses":{"200":{"description":"The patch request was successful and the resource has been altered","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/authenticators/{id}/re-enroll":{"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Allows an authenticator to be reverted to an enrollment and allows re-enrollment to occur. On success the \\ncreated enrollment record response is provided and the source authenticator record will be deleted. The \\nenrollment created depends on the authenticator. UPDB authenticators result in UPDB enrollments, CERT\\nauthenticators result in OTT enrollments, CERT + CA authenticators result in OTTCA enrollments.\\n","tags":["Authenticator"],"summary":"Reverts an authenticator to an enrollment","operationId":"reEnrollAuthenticator","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/reEnroll"}}},"description":"A reEnrollment request","required":true},"responses":{"201":{"description":"The create request was successful and the resource has been added at the following location","content":{"application/json":{"schema":{"$ref":"#/components/schemas/createEnvelope"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/cas":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of CA resources; supports filtering, sorting, and pagination. Requires admin access.","tags":["Certificate Authority"],"summary":"List CAs","operationId":"listCas","parameters":[{"name":"limit","in":"query","schema":{"type":"integer"}},{"name":"offset","in":"query","schema":{"type":"integer"}},{"name":"filter","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"A list of Certificate Authorities (CAs)","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listCasEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Creates a CA in an unverified state. Requires admin access.","tags":["Certificate Authority"],"summary":"Creates a CA","operationId":"createCa","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/caCreate"}}},"description":"A CA to create","required":true},"responses":{"201":{"description":"The create request was successful and the resource has been added at the following location","content":{"application/json":{"schema":{"$ref":"#/components/schemas/createEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}}},"/cas/{id}":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a single CA by id. Requires admin access.","tags":["Certificate Authority"],"summary":"Retrieves a single CA","operationId":"detailCa","responses":{"200":{"description":"A singular Certificate Authority (CA) resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/detailCaEnvelope"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"put":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update all fields on a CA by id. Requires admin access.","tags":["Certificate Authority"],"summary":"Update all fields on a CA","operationId":"updateCa","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/caUpdate"}}},"description":"A CA update object","required":true},"responses":{"200":{"description":"The update request was successful and the resource has been altered","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"delete":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Delete a CA by id. Deleting a CA will delete its associated certificate authenticators. This can make it\\nimpossible for identities to authenticate if they no longer have any valid authenticators. Requires admin access.\\n","tags":["Certificate Authority"],"summary":"Delete a CA","operationId":"deleteCa","responses":{"200":{"description":"The delete request was successful and the resource has been removed","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"patch":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update only the supplied fields on a CA by id. Requires admin access.","tags":["Certificate Authority"],"summary":"Update the supplied fields on a CA","operationId":"patchCa","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/caPatch"}}},"description":"A CA patch object","required":true},"responses":{"200":{"description":"The patch request was successful and the resource has been altered","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/cas/{id}/jwt":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"For CA auto enrollment, the enrollment JWT is static and provided on each CA resource. This endpoint provides\\nthe jwt as a text response.\\n","tags":["Certificate Authority"],"summary":"Retrieve the enrollment JWT for a CA","operationId":"getCaJwt","responses":{"200":{"description":"The result is the JWT text to validate the CA","content":{"application/jwt":{"schema":{"type":"string"},"examples":{"response":{"value":"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbSI6ImNhIiwiaXNzIjoiaHR0cHM6Ly9sb2NhbGhvc3Q6MTI 4MC8ifQ.Ot6lhNBSOw8ygHytdI5l7WDf9EWadOj44UPvJ0c-8mJ54fClWM3uMZrAHSSfV6KmOSZOeBBJe4VlNyoD-_MOECP0BzYSnSQP3E zJb0VlM-fFmGcKNGW157icyZNISfO43JL_Lw2QPBzTgikqSIj9eZnocC3BeAmZCHsVznnLfHWqDldcmuxnu-5MNOSrWV1x9iVcgLFlLHXK 2PLA4qIiZmlQTrQjpHJmUaoJ07mnj8hMKzxB3wBG8kpazjEo7HDRCO06aBH4eqFgf_l0iT8Dzcb31jquWMGUoSXPhf4lVJh_FiNcR1wVx- UiHLbG5h23Aqf1UJF-F38rc1FElKz0Zg"}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/jwt":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"}},"application/json":{"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/jwt":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"}},"application/json":{"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/jwt":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"}},"application/json":{"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/cas/{id}/verify":{"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Allows a CA to become verified by submitting a certificate in PEM format that has been signed by the target CA.\\nThe common name on the certificate must match the verificationToken property of the CA. Unverfieid CAs can not\\nbe used for enrollment/authentication. Requires admin access.\\n","tags":["Certificate Authority"],"summary":"Verify a CA","operationId":"verifyCa","requestBody":{"content":{"text/plain":{"schema":{"type":"string"}}},"description":"A PEM formatted certificate signed by the target CA with the common name matching the CA\'s validationToken","required":true},"responses":{"200":{"description":"Base empty response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/config-types":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of config-type resources; supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Config"],"summary":"List config-types","operationId":"listConfigTypes","parameters":[{"name":"limit","in":"query","schema":{"type":"integer"}},{"name":"offset","in":"query","schema":{"type":"integer"}},{"name":"filter","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"A list of config-types","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listConfigTypesEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"tags":["Config"],"summary":"Create a config-type. Requires admin access.","operationId":"createConfigType","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/configTypeCreate"}}},"description":"A config-type to create","required":true},"responses":{"201":{"description":"The create request was successful and the resource has been added at the following location","content":{"application/json":{"schema":{"$ref":"#/components/schemas/createEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}}},"/config-types/{id}":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a single config-type by id. Requires admin access.","tags":["Config"],"summary":"Retrieves a single config-type","operationId":"detailConfigType","responses":{"200":{"description":"A singular config-type resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/detailConfigTypeEnvelope"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"put":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update all fields on a config-type by id. Requires admin access.","tags":["Config"],"summary":"Update all fields on a config-type","operationId":"updateConfigType","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/configTypeUpdate"}}},"description":"A config-type update object","required":true},"responses":{"200":{"description":"The update request was successful and the resource has been altered","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"delete":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Delete a config-type by id. Removing a configuration type that are in use will result in a 409 conflict HTTP status code and error. All configurations of a type must be removed first.","tags":["Config"],"summary":"Delete a config-type","operationId":"deleteConfigType","responses":{"200":{"description":"The delete request was successful and the resource has been removed","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"409":{"description":"The resource requested to be removed/altered cannot be as it is referenced by another object.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"causeMessage":"referenced by /some-resource/05f4f710-c155-4a74-86d5-77558eb9cb42","code":"CONFLICT_CANNOT_MODIFY_REFERENCED","message":"The resource cannot be deleted/modified. Remove all referencing resources first.","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"patch":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update the supplied fields on a config-type. Requires admin access.","tags":["Config"],"summary":"Update the supplied fields on a config-type","operationId":"patchConfigType","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/configTypePatch"}}},"description":"A config-type patch object","required":true},"responses":{"200":{"description":"The patch request was successful and the resource has been altered","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/config-types/{id}/configs":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Lists the configs associated to a config-type. Requires admin access.","tags":["Config"],"summary":"Lists the configs of a specific config-type","operationId":"listConfigsForConfigType","responses":{"200":{"description":"A list of configs","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listConfigsEnvelope"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/configs":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of config resources; supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Config"],"summary":"List configs","operationId":"listConfigs","parameters":[{"name":"limit","in":"query","schema":{"type":"integer"}},{"name":"offset","in":"query","schema":{"type":"integer"}},{"name":"filter","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"A list of configs","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listConfigsEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Create a config resource. Requires admin access.","tags":["Config"],"summary":"Create a config resource","operationId":"createConfig","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/configCreate"}}},"description":"A config to create","required":true},"responses":{"201":{"description":"The create request was successful and the resource has been added at the following location","content":{"application/json":{"schema":{"$ref":"#/components/schemas/createEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}}},"/configs/{id}":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a single config by id. Requires admin access.","tags":["Config"],"summary":"Retrieves a single config","operationId":"detailConfig","responses":{"200":{"description":"A singular config resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/detailConfigEnvelope"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"put":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update all fields on a config by id. Requires admin access.","tags":["Config"],"summary":"Update all fields on a config","operationId":"updateConfig","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/configUpdate"}}},"description":"A config update object","required":true},"responses":{"200":{"description":"The update request was successful and the resource has been altered","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"delete":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Delete a config by id. Requires admin access.","tags":["Config"],"summary":"Delete a config","operationId":"deleteConfig","responses":{"200":{"description":"The delete request was successful and the resource has been removed","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"409":{"description":"The resource requested to be removed/altered cannot be as it is referenced by another object.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"causeMessage":"referenced by /some-resource/05f4f710-c155-4a74-86d5-77558eb9cb42","code":"CONFLICT_CANNOT_MODIFY_REFERENCED","message":"The resource cannot be deleted/modified. Remove all referencing resources first.","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"patch":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update the supplied fields on a config. Requires admin access.","tags":["Config"],"summary":"Update the supplied fields on a config","operationId":"patchConfig","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/configPatch"}}},"description":"A config patch object","required":true},"responses":{"200":{"description":"The patch request was successful and the resource has been altered","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/configs/{id}/services":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of service resources that reference a given config; supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Config"],"summary":"List services referenced by a config","operationId":"listConfigServices","parameters":[{"name":"limit","in":"query","schema":{"type":"integer"}},{"name":"offset","in":"query","schema":{"type":"integer"}},{"name":"filter","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"A list of services","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listServicesEnvelope"}}}},"400":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/controllers":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of controllers","tags":["Controllers"],"summary":"List controllers","operationId":"listControllers","parameters":[{"name":"limit","in":"query","schema":{"type":"integer"}},{"name":"offset","in":"query","schema":{"type":"integer"}},{"name":"filter","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"A list of controllers","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listControllersEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}}},"/current-api-session":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves the API session that was used to issue the current request","tags":["Current API Session"],"summary":"Return the current API session","operationId":"getCurrentAPISession","responses":{"200":{"description":"The API session associated with the session used to issue the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/currentApiSessionDetailEnvelope"}},"default":{"examples":{"response":{"value":{"data":{"_links":{"self":{"href":"./current-api-session"}},"configTypes":[],"createdAt":"2020-03-09T19:03:49.1883693Z","expiresAt":"2020-03-09T19:34:21.5600897Z","id":"27343114-b44f-406e-9981-f3c4f2f28d54","identity":{"_links":{"self":{"href":"./identities/66352d7b-a6b2-4ce9-85bb-9f18e318704d"}},"id":"66352d7b-a6b2-4ce9-85bb-9f18e318704d","name":"Default Admin","urlName":"identities"},"tags":[{"userField1":123},{"userField2":"asdf"}],"token":"28bb0ed2-0577-4632-ae70-d17106b92871","updatedAt":"2020-03-09T19:04:21.5600897Z"},"meta":{}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"delete":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Terminates the current API session","tags":["Current API Session"],"summary":"Logout","responses":{"200":{"description":"Base empty response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}}},"/current-identity":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Returns the identity associated with the API sessions used to issue the current request","tags":["Current Identity"],"summary":"Return the current identity","operationId":"getCurrentIdentity","responses":{"200":{"description":"The identity associated with the API Session used to issue the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/currentIdentityDetailEnvelope"}},"default":{"examples":{"response":{"value":{"data":{"_links":{"edge-router-policies":{"href":"./identities/66352d7b-a6b2-4ce9-85bb-9f18e318704d/edge-routers"},"self":{"href":"./identities/66352d7b-a6b2-4ce9-85bb-9f18e318704d"},"service-policies":{"href":"./identities/66352d7b-a6b2-4ce9-85bb-9f18e318704d/identities"}},"authenticators":{"updb":{"username":"admin"}},"createdAt":"2020-01-13T16:38:13.6854788Z","enrollment":{},"id":"66352d7b-a6b2-4ce9-85bb-9f18e318704d","isAdmin":true,"isDefaultAdmin":true,"name":"Default Admin","roleAttributes":[],"tags":{},"type":{"_links":{"self":{"href":"./identity-types/User"}},"id":"User","name":"User","urlName":"identity-types"},"updatedAt":"2020-01-13T16:38:13.6854788Z"},"meta":{}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}}},"/current-identity/authenticators":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of authenticators assigned to the current API session\'s identity; supports filtering, sorting, and pagination.","tags":["Current API Session"],"summary":"List authenticators for the current identity","operationId":"listCurrentIdentityAuthenticators","parameters":[{"name":"limit","in":"query","schema":{"type":"integer"}},{"name":"offset","in":"query","schema":{"type":"integer"}},{"name":"filter","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"A list of authenticators","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listAuthenticatorsEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}}},"/current-identity/authenticators/{id}":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a single authenticator by id. Will only show authenticators assigned to the API session\'s identity.","tags":["Current API Session"],"summary":"Retrieve an authenticator for the current identity","operationId":"detailCurrentIdentityAuthenticator","responses":{"200":{"description":"A singular authenticator resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/detailAuthenticatorEnvelope"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"put":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update all fields on an authenticator by id.  Will only update authenticators assigned to the API session\'s\\nidentity.\\n","tags":["Current API Session"],"summary":"Update all fields on an authenticator of this identity","operationId":"updateCurrentIdentityAuthenticator","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/authenticatorUpdateWithCurrent"}}},"description":"An authenticator put object","required":true},"responses":{"200":{"description":"The update request was successful and the resource has been altered","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"patch":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update the supplied fields on an authenticator by id. Will only update authenticators assigned to the API\\nsession\'s identity.\\n","tags":["Current API Session"],"summary":"Update the supplied fields on an authenticator of this identity","operationId":"patchCurrentIdentityAuthenticator","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/authenticatorPatchWithCurrent"}}},"description":"An authenticator patch object","required":true},"responses":{"200":{"description":"The patch request was successful and the resource has been altered","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/current-identity/authenticators/{id}/extend":{"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"This endpoint only functions for certificates issued by the controller. 3rd party certificates are not handled.\\nAllows an identity to extend its certificate\'s expiration date by using its current and valid client certificate to submit a CSR. This CSR may be passed in using a new private key, thus allowing private key rotation.\\nThe response from this endpoint is a new client certificate which the client must  be verified via the /authenticators/{id}/extend-verify endpoint.\\nAfter verification is completion any new connections must be made with new certificate. Prior to verification the old client certificate remains active.","tags":["Current API Session","Enroll","Extend Enrollment"],"summary":"Allows the current identity to recieve a new certificate associated with a certificate based authenticator","operationId":"extendCurrentIdentityAuthenticator","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/identityExtendEnrollmentRequest"}}},"required":true},"responses":{"200":{"description":"A response containg the identity\'s new certificate","content":{"application/json":{"schema":{"$ref":"#/components/schemas/identityExtendEnrollmentEnvelope"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/current-identity/authenticators/{id}/extend-verify":{"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"After submitting a CSR for a new client certificate the resulting public certificate must be re-submitted to this endpoint to verify receipt.\\nAfter receipt, the new client certificate must be used for new authentication requests.","tags":["Current API Session","Enroll","Extend Enrollment"],"summary":"Allows the current identity to validate reciept of a new client certificate","operationId":"extendVerifyCurrentIdentityAuthenticator","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/identityExtendValidateEnrollmentRequest"}}},"required":true},"responses":{"200":{"description":"Base empty response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/current-identity/mfa":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Returns details about the current MFA enrollment. If enrollment has not been completed it will return the current MFA configuration details necessary to complete a `POST /current-identity/mfa/verify`.\\n","tags":["Current Identity","MFA"],"summary":"Returns the current status of MFA enrollment","operationId":"detailMfa","responses":{"200":{"description":"The details of an MFA enrollment","content":{"application/json":{"schema":{"$ref":"#/components/schemas/detailMfaEnvelope"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Allows authenticator based MFA enrollment. If enrollment has already been completed, it must be disabled before attempting to re-enroll. Subsequent enrollment request is completed via `POST /current-identity/mfa/verify`\\n","tags":["Current Identity","MFA"],"summary":"Initiate MFA enrollment","operationId":"enrollMfa","responses":{"201":{"description":"The create request was successful and the resource has been added at the following location","content":{"application/json":{"schema":{"$ref":"#/components/schemas/createEnvelope"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"409":{"description":"The identity is already enrolled in MFA","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":null,"cause":null,"causeMessage":"","code":"ALREADY_MFA_ENROLLED","message":"The identity is already enrolled in MFA","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"delete":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Disable MFA for the current identity. Requires a current valid time based one time password if MFA enrollment has been completed. If not, code should be an empty string. If one time passwords are not available and admin account can be used to remove MFA from the identity via `DELETE /identities/<id>/mfa`.\\n","tags":["Current Identity","MFA"],"summary":"Disable MFA for the current identity","operationId":"deleteMfa","parameters":[{"name":"mfa-validation-code","in":"header","schema":{"type":"string"}}],"responses":{"200":{"description":"Base empty response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}}},"/current-identity/mfa/qr-code":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Shows an QR code image for unverified MFA enrollments. 404s if the MFA enrollment has been completed or not started.\\n","tags":["Current Identity","MFA"],"summary":"Show a QR code for unverified MFA enrollments","operationId":"detailMfaQrCode","responses":{"200":{"description":"OK"},"404":{"description":"No MFA enrollment or MFA enrollment is completed"}}}},"/current-identity/mfa/recovery-codes":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Allows the viewing of recovery codes of an MFA enrollment. Requires a current valid time based one time password to interact with. Available after a completed MFA enrollment.\\n","tags":["Current Identity","MFA"],"summary":"For a completed MFA enrollment view the current recovery codes","operationId":"detailMfaRecoveryCodes","parameters":[{"name":"mfa-validation-code","in":"header","schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/mfaCode"}}},"description":"An MFA validation request"},"responses":{"200":{"description":"The recovery codes of an MFA enrollment","content":{"application/json":{"schema":{"$ref":"#/components/schemas/detailMfaRecoveryCodesEnvelope"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Allows regeneration of recovery codes of an MFA enrollment. Requires a current valid time based one time password to interact with. Available after a completed MFA enrollment. This replaces all existing recovery codes.\\n","tags":["Current Identity","MFA"],"summary":"For a completed MFA enrollment regenerate the recovery codes","operationId":"createMfaRecoveryCodes","requestBody":{"$ref":"#/components/requestBodies/mfaCode"},"responses":{"200":{"description":"Base empty response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}}},"/current-identity/mfa/verify":{"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Completes MFA enrollment by accepting a time based one time password as verification. Called after MFA enrollment has been initiated via `POST /current-identity/mfa`.\\n","tags":["Current Identity","MFA"],"summary":"Complete MFA enrollment by verifying a time based one time token","operationId":"verifyMfa","requestBody":{"$ref":"#/components/requestBodies/mfaCode"},"responses":{"200":{"description":"Base empty response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}}},"/database/check-data-integrity":{"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Starts a data integrity scan on the datastore. Requires admin access. Only once instance may run at a time, including runs of fixDataIntegrity.","tags":["Database"],"summary":"Starts a data integrity scan on the datastore","operationId":"checkDataIntegrity","responses":{"202":{"description":"Base empty response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}}},"/database/data-integrity-results":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Returns any results found from in-progress integrity checks. Requires admin access.","tags":["Database"],"summary":"Returns any results found from in-progress integrity checks","operationId":"dataIntegrityResults","responses":{"200":{"description":"A list of data integrity issues found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/dataIntegrityCheckResultEnvelope"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}}},"/database/fix-data-integrity":{"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Runs a data integrity scan on the datastore, attempts to fix any issues it can, and returns any found issues. Requires admin access. Only once instance may run at a time, including runs of checkDataIntegrity.","tags":["Database"],"summary":"Runs a data integrity scan on the datastore, attempts to fix any issues it can and returns any found issues","operationId":"fixDataIntegrity","responses":{"202":{"description":"Base empty response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}}},"/database/snapshot":{"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Create a new database snapshot. Requires admin access.","tags":["Database"],"summary":"Create a new database snapshot","operationId":"createDatabaseSnapshot","responses":{"200":{"description":"Base empty response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}}},"/edge-router-policies":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of edge router policy resources; supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Edge Router Policy"],"summary":"List edge router policies","operationId":"listEdgeRouterPolicies","parameters":[{"name":"limit","in":"query","schema":{"type":"integer"}},{"name":"offset","in":"query","schema":{"type":"integer"}},{"name":"filter","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"A list of edge router policies","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listEdgeRouterPoliciesEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Create an edge router policy resource. Requires admin access.","tags":["Edge Router Policy"],"summary":"Create an edge router policy resource","operationId":"createEdgeRouterPolicy","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/edgeRouterPolicyCreate"}}},"description":"An edge router policy to create","required":true},"responses":{"201":{"description":"The create request was successful and the resource has been added at the following location","content":{"application/json":{"schema":{"$ref":"#/components/schemas/createEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}}},"/edge-router-policies/{id}":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a single edge router policy by id. Requires admin access.","tags":["Edge Router Policy"],"summary":"Retrieves a single edge router policy","operationId":"detailEdgeRouterPolicy","responses":{"200":{"description":"A single edge router policy","content":{"application/json":{"schema":{"$ref":"#/components/schemas/detailEdgeRouterPolicyEnvelope"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"put":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update all fields on an edge router policy by id. Requires admin access.","tags":["Edge Router Policy"],"summary":"Update all fields on an edge router policy","operationId":"updateEdgeRouterPolicy","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/edgeRouterPolicyUpdate"}}},"description":"An edge router policy update object","required":true},"responses":{"200":{"description":"The update request was successful and the resource has been altered","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"delete":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Delete an edge router policy by id. Requires admin access.","tags":["Edge Router Policy"],"summary":"Delete an edge router policy","operationId":"deleteEdgeRouterPolicy","responses":{"200":{"description":"The delete request was successful and the resource has been removed","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"409":{"description":"The resource requested to be removed/altered cannot be as it is referenced by another object.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"causeMessage":"referenced by /some-resource/05f4f710-c155-4a74-86d5-77558eb9cb42","code":"CONFLICT_CANNOT_MODIFY_REFERENCED","message":"The resource cannot be deleted/modified. Remove all referencing resources first.","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"patch":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update the supplied fields on an edge router policy. Requires admin access.","tags":["Edge Router Policy"],"summary":"Update the supplied fields on an edge router policy","operationId":"patchEdgeRouterPolicy","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/edgeRouterPolicyPatch"}}},"description":"An edge router policy patch object","required":true},"responses":{"200":{"description":"The patch request was successful and the resource has been altered","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/edge-router-policies/{id}/edge-routers":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of edge routers an edge router policy resources affects; supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Edge Router Policy"],"summary":"List edge routers a policy affects","operationId":"listEdgeRouterPolicyEdgeRouters","responses":{"200":{"description":"A list of edge routers","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listEdgeRoutersEnvelope"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/edge-router-policies/{id}/identities":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of identities an edge router policy resources affects; supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Edge Router Policy"],"summary":"List identities an edge router policy affects","operationId":"listEdgeRouterPolicyIdentities","responses":{"200":{"description":"A list of identities","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listIdentitiesEnvelope"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/edge-router-role-attributes":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of role attributes in use by edge routers; supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Role Attributes"],"summary":"List role attributes in use by edge routers","operationId":"listEdgeRouterRoleAttributes","parameters":[{"name":"limit","in":"query","schema":{"type":"integer"}},{"name":"offset","in":"query","schema":{"type":"integer"}},{"name":"filter","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"A list of role attributes","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listRoleAttributesEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}}},"/edge-routers":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of edge router resources; supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Edge Router"],"summary":"List edge routers","operationId":"listEdgeRouters","parameters":[{"name":"limit","in":"query","schema":{"type":"integer"}},{"name":"offset","in":"query","schema":{"type":"integer"}},{"name":"filter","in":"query","schema":{"type":"string"}},{"name":"roleFilter","in":"query","explode":true,"schema":{"type":"array","items":{"type":"string"}}},{"name":"roleSemantic","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"A list of edge routers","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listEdgeRoutersEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Create a edge router resource. Requires admin access.","tags":["Edge Router"],"summary":"Create an edge router","operationId":"createEdgeRouter","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/edgeRouterCreate"}}},"description":"A edge router to create","required":true},"responses":{"201":{"description":"The create request was successful and the resource has been added at the following location","content":{"application/json":{"schema":{"$ref":"#/components/schemas/createEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}}},"/edge-routers/{id}":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a single edge router by id. Requires admin access.","tags":["Edge Router"],"summary":"Retrieves a single edge router","operationId":"detailEdgeRouter","responses":{"200":{"description":"A singular edge router resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/detailedEdgeRouterEnvelope"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"put":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update all fields on an edge router by id. Requires admin access.","tags":["Edge Router"],"summary":"Update all fields on an edge router","operationId":"updateEdgeRouter","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/edgeRouterUpdate"}}},"description":"An edge router update object","required":true},"responses":{"200":{"description":"The update request was successful and the resource has been altered","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"delete":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Delete an edge router by id. Requires admin access.","tags":["Edge Router"],"summary":"Delete an edge router","operationId":"deleteEdgeRouter","responses":{"200":{"description":"The delete request was successful and the resource has been removed","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"409":{"description":"The resource requested to be removed/altered cannot be as it is referenced by another object.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"causeMessage":"referenced by /some-resource/05f4f710-c155-4a74-86d5-77558eb9cb42","code":"CONFLICT_CANNOT_MODIFY_REFERENCED","message":"The resource cannot be deleted/modified. Remove all referencing resources first.","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"patch":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update the supplied fields on an edge router. Requires admin access.","tags":["Edge Router"],"summary":"Update the supplied fields on an edge router","operationId":"patchEdgeRouter","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/edgeRouterPatch"}}},"description":"An edge router patch object","required":true},"responses":{"200":{"description":"The patch request was successful and the resource has been altered","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/edge-routers/{id}/edge-router-policies":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of edge router policies that apply to the specified edge router.","tags":["Edge Router"],"summary":"List the edge router policies that affect an edge router","operationId":"listEdgeRouterEdgeRouterPolicies","responses":{"200":{"description":"A list of edge router policies","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listEdgeRouterPoliciesEnvelope"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/edge-routers/{id}/identities":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of identities that may access services via the given edge router. Supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Edge Router"],"summary":"List associated identities","operationId":"listEdgeRouterIdentities","responses":{"200":{"description":"A list of identities","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listIdentitiesEnvelope"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/edge-routers/{id}/re-enroll":{"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Removes current certificate based authentication mechanisms and reverts the edge router into a state where enrollment must be performed.\\nThe router retains all other properties and associations. If the router is currently connected, it will be disconnected and any\\nattemps to reconnect will fail until the enrollment process is completed with the newly generated JWT.\\n\\nIf the edge router has an existing outstanding enrollment JWT it will be replaced. The previous JWT will no longer be usable to\\ncomplete the enrollment process.\\n","tags":["Edge Router"],"summary":"Re-enroll an edge router","operationId":"reEnrollEdgeRouter","responses":{"200":{"description":"Base empty response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/edge-routers/{id}/service-edge-router-policies":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of service policies policies that apply to the specified edge router.","tags":["Edge Router"],"summary":"List the service policies that affect an edge router","operationId":"listEdgeRouterServiceEdgeRouterPolicies","responses":{"200":{"description":"A list of service policies","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listServicePoliciesEnvelope"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/edge-routers/{id}/services":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of services that may be accessed via the given edge router. Supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Edge Router"],"summary":"List associated services","operationId":"listEdgeRouterServices","responses":{"200":{"description":"A list of services","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listServicesEnvelope"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/enrollments":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of outstanding enrollments; supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Enrollment"],"summary":"List outstanding enrollments","operationId":"listEnrollments","parameters":[{"name":"limit","in":"query","schema":{"type":"integer"}},{"name":"offset","in":"query","schema":{"type":"integer"}},{"name":"filter","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"A list of enrollments","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listEnrollmentsEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Creates a new OTT, OTTCA, or UPDB enrollment for a specific identity. If an enrollment of the same type is already outstanding the request will fail with a 409 conflict. If desired, an existing enrollment can be refreshed by `enrollments/:id/refresh` or deleted.","tags":["Enrollment"],"summary":"Create an outstanding enrollment for an identity","operationId":"createEnrollment","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/enrollmentCreate"}}},"description":"An enrollment to create","required":true},"responses":{"201":{"description":"The create request was successful and the resource has been added at the following location","content":{"application/json":{"schema":{"$ref":"#/components/schemas/createEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"409":{"description":"The request could not be completed due to a conflict of configuration or state","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}}},"/enrollments/{id}":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a single outstanding enrollment by id. Requires admin access.","tags":["Enrollment"],"summary":"Retrieves an outstanding enrollment","operationId":"detailEnrollment","responses":{"200":{"description":"A singular enrollment resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/detailEnrollmentEnvelope"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"delete":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Delete an outstanding enrollment by id. Requires admin access.","tags":["Enrollment"],"summary":"Delete an outstanding enrollment","operationId":"deleteEnrollment","responses":{"200":{"description":"The delete request was successful and the resource has been removed","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/enrollments/{id}/refresh":{"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"For expired or unexpired enrollments, reset the expiration window. A new JWT will be generated and must be used for the enrollment.","tags":["Enrollment"],"summary":"Refreshes an enrollment record\'s expiration window","operationId":"refreshEnrollment","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/enrollmentRefresh"}}},"description":"An enrollment refresh request","required":true},"responses":{"200":{"description":"The create request was successful and the resource has been added at the following location","content":{"application/json":{"schema":{"$ref":"#/components/schemas/createEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/enumerated-capabilities":{"get":{"security":[],"tags":["Informational"],"summary":"Returns all capabilities this version of the controller is aware of, enabled or not.","operationId":"listEnumeratedCapabilities","responses":{"200":{"description":"A typed and enumerated list of capabilities","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listEnumeratedCapabilitiesEnvelope"}}}}}}},"/external-jwt-signers":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of external JWT signers for authentication","tags":["External JWT Signer"],"summary":"List External JWT Signers","operationId":"listExternalJwtSigners","parameters":[{"name":"limit","in":"query","schema":{"type":"integer"}},{"name":"offset","in":"query","schema":{"type":"integer"}},{"name":"filter","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"A list of External JWT Signers","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listExternalJwtSignersEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Creates an External JWT Signer. Requires admin access.","tags":["External JWT Signer"],"summary":"Creates an External JWT Signer","operationId":"createExternalJwtSigner","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/externalJwtSignerCreate"}}},"description":"An External JWT Signer to create","required":true},"responses":{"201":{"description":"The create request was successful and the resource has been added at the following location","content":{"application/json":{"schema":{"$ref":"#/components/schemas/createEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}}},"/external-jwt-signers/{id}":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a single External JWT Signer by id. Requires admin access.","tags":["External JWT Signer"],"summary":"Retrieves a single External JWT Signer","operationId":"detailExternalJwtSigner","responses":{"200":{"description":"A singular External JWT Signer resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/detailExternalJwtSignerEnvelope"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"put":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update all fields on an External JWT Signer by id. Requires admin access.","tags":["External JWT Signer"],"summary":"Update all fields on an External JWT Signer","operationId":"updateExternalJwtSigner","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/externalJwtSignerUpdate"}}},"description":"An External JWT Signer update object","required":true},"responses":{"200":{"description":"The update request was successful and the resource has been altered","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"delete":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Delete an External JWT Signer by id. Requires admin access.\\n","tags":["External JWT Signer"],"summary":"Delete an External JWT Signer","operationId":"deleteExternalJwtSigner","responses":{"200":{"description":"The delete request was successful and the resource has been removed","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"patch":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update only the supplied fields on an External JWT Signer by id. Requires admin access.","tags":["External JWT Signer"],"summary":"Update the supplied fields on an External JWT Signer","operationId":"patchExternalJwtSigner","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/externalJwtSignerPatch"}}},"description":"An External JWT Signer patch object","required":true},"responses":{"200":{"description":"The patch request was successful and the resource has been altered","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/identities":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of identity resources; supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Identity"],"summary":"List identities","operationId":"listIdentities","parameters":[{"name":"limit","in":"query","schema":{"type":"integer"}},{"name":"offset","in":"query","schema":{"type":"integer"}},{"name":"filter","in":"query","schema":{"type":"string"}},{"name":"roleFilter","in":"query","explode":true,"schema":{"type":"array","items":{"type":"string"}}},{"name":"roleSemantic","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"A list of identities","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listIdentitiesEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Create an identity resource. Requires admin access.","tags":["Identity"],"summary":"Create an identity resource","operationId":"createIdentity","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/identityCreate"}}},"description":"An identity to create","required":true},"responses":{"201":{"description":"The create request was successful and the resource has been added at the following location","content":{"application/json":{"schema":{"$ref":"#/components/schemas/createEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}}},"/identities/{id}":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a single identity by id. Requires admin access.","tags":["Identity"],"summary":"Retrieves a single identity","operationId":"detailIdentity","responses":{"200":{"description":"A single identity","content":{"application/json":{"schema":{"$ref":"#/components/schemas/detailIdentityEnvelope"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"put":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update all fields on an identity by id. Requires admin access.","tags":["Identity"],"summary":"Update all fields on an identity","operationId":"updateIdentity","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/identityUpdate"}}},"description":"An identity update object","required":true},"responses":{"200":{"description":"The update request was successful and the resource has been altered","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"delete":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Delete an identity by id. Requires admin access.","tags":["Identity"],"summary":"Delete an identity","operationId":"deleteIdentity","responses":{"200":{"description":"The delete request was successful and the resource has been removed","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"409":{"description":"The resource requested to be removed/altered cannot be as it is referenced by another object.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"causeMessage":"referenced by /some-resource/05f4f710-c155-4a74-86d5-77558eb9cb42","code":"CONFLICT_CANNOT_MODIFY_REFERENCED","message":"The resource cannot be deleted/modified. Remove all referencing resources first.","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"patch":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update the supplied fields on an identity. Requires admin access.","tags":["Identity"],"summary":"Update the supplied fields on an identity","operationId":"patchIdentity","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/identityPatch"}}},"description":"An identity patch object","required":true},"responses":{"200":{"description":"The patch request was successful and the resource has been altered","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/identities/{id}/authenticators":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Returns a list of authenticators associated to the identity specified\\n","tags":["Identity"],"summary":"Retrieve the current authenticators of a specific identity","operationId":"getIdentityAuthenticators","responses":{"200":{"description":"A list of authenticators","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listAuthenticatorsEnvelope"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/identities/{id}/disable":{"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Reject an identity\'s API session requests for N minutes or indefinitely if 0.\\n","tags":["Identity"],"summary":"Set an identity as disabled","operationId":"disableIdentity","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/disableParams"}}},"description":"Disable parameters","required":true},"responses":{"200":{"description":"Base empty response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/identities/{id}/edge-router-policies":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of edge router policies that apply to the specified identity.","tags":["Identity"],"summary":"List the edge router policies that affect an identity","operationId":"listIdentitysEdgeRouterPolicies","responses":{"200":{"description":"A list of edge router policies","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listEdgeRouterPoliciesEnvelope"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/identities/{id}/edge-routers":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of edge-routers that the given identity may use to access services. Supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Identity"],"summary":"List accessible edge-routers","operationId":"listIdentityEdgeRouters","responses":{"200":{"description":"A list of edge routers","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listEdgeRoutersEnvelope"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/identities/{id}/enable":{"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Allows an admin to remove disabled statuses from an identity.\\n","tags":["Identity"],"summary":"Clears all disabled state from an identity","operationId":"enableIdentity","responses":{"200":{"description":"Base empty response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/identities/{id}/enrollments":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Returns a list of enrollments associated to the identity specified\\n","tags":["Identity"],"summary":"Retrieve the current enrollments of a specific identity","operationId":"getIdentityEnrollments","responses":{"200":{"description":"A list of enrollments","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listEnrollmentsEnvelope"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/identities/{id}/failed-service-requests":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Returns a list of service session requests that failed due to posture checks. The entries will contain\\nevery policy that was verified against and every failed check in each policy. Each check will include\\nthe historical posture data and posture check configuration.\\n","tags":["Identity"],"summary":"Retrieve a list of the most recent service failure requests due to posture checks","operationId":"getIdentityFailedServiceRequests","responses":{"200":{"description":"Returns a list of service request failures","content":{"application/json":{"schema":{"$ref":"#/components/schemas/failedServiceRequestEnvelope"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/identities/{id}/mfa":{"delete":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Allows an admin to remove MFA enrollment from a specific identity. Requires admin.\\n","tags":["Identity","MFA"],"summary":"Remove MFA from an identitity","operationId":"removeIdentityMfa","responses":{"200":{"description":"Base empty response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/identities/{id}/policy-advice/{serviceId}":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Analyzes policies to see if the given identity should be able to dial or bind the given service. |\\nWill check services policies to see if the identity can access the service. Will check edge router policies |\\nto check if the identity and service have access to common edge routers so that a connnection can be made. |\\nWill also check if at least one edge router is on-line. Requires admin access.\\n","tags":["Identity"],"summary":"Analyze policies relating the given identity and service","operationId":"getIdentityPolicyAdvice","responses":{"200":{"description":"Returns the document that represents the policy advice","content":{"application/json":{"schema":{"$ref":"#/components/schemas/getIdentityPolicyAdviceEnvelope"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}},{"description":"The id of a service","name":"serviceId","in":"path","required":true,"schema":{"type":"string"}}]},"/identities/{id}/posture-data":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Returns a nested map data represeting the posture data of the identity.\\nThis data should be considered volatile.\\n","tags":["Identity"],"summary":"Retrieve the curent posture data for a specific identity.","operationId":"getIdentityPostureData","responses":{"200":{"description":"Returns the document that represents posture data","content":{"application/json":{"schema":{"$ref":"#/components/schemas/postureDataEnvelope"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/identities/{id}/service-configs":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of service configs associated to a specific identity","tags":["Identity"],"summary":"List the service configs associated a specific identity","operationId":"listIdentitysServiceConfigs","responses":{"200":{"description":"A list of service configs","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listServiceConfigsEnvelope"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Associate service configs to a specific identity","tags":["Identity"],"summary":"Associate service configs for a specific identity","operationId":"associateIdentitysServiceConfigs","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/serviceConfigsAssignList"}}},"description":"A service config patch object","required":true},"responses":{"200":{"description":"Base empty response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"delete":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Remove service configs from a specific identity","tags":["Identity"],"summary":"Remove associated service configs from a specific identity","operationId":"disassociateIdentitysServiceConfigs","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/serviceConfigsAssignList"}}},"description":"An array of service and config id pairs to remove"},"responses":{"200":{"description":"Base empty response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/identities/{id}/service-policies":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of service policies that apply to the specified identity.","tags":["Identity"],"summary":"List the service policies that affect an identity","operationId":"listIdentityServicePolicies","responses":{"200":{"description":"A list of service policies","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listServicePoliciesEnvelope"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/identities/{id}/services":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of services that the given identity has access to. Supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Identity"],"summary":"List accessible services","operationId":"listIdentityServices","parameters":[{"name":"filter","in":"query","schema":{"type":"string"}},{"name":"policyType","in":"query","schema":{"type":"string","enum":["dial","bind"]}}],"responses":{"200":{"description":"A list of services","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listServicesEnvelope"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/identities/{id}/trace":{"put":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Allows an admin to enable/disable data flow tracing for an identity\\n","tags":["Identity","Tracing"],"summary":"Enable/disable data flow tracing for an identity","operationId":"updateIdentityTracing","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/traceSpec"}}},"description":"A traceSpec object","required":true},"responses":{"200":{"description":"Returns the document that represents the trace state","content":{"application/json":{"schema":{"$ref":"#/components/schemas/traceDetailEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/identity-role-attributes":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of role attributes in use by identities; supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Role Attributes"],"summary":"List role attributes in use by identities","operationId":"listIdentityRoleAttributes","parameters":[{"name":"limit","in":"query","schema":{"type":"integer"}},{"name":"offset","in":"query","schema":{"type":"integer"}},{"name":"filter","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"A list of role attributes","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listRoleAttributesEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}}},"/identity-types":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of identity types; supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Identity"],"summary":"List available identity types","operationId":"listIdentityTypes","parameters":[{"name":"limit","in":"query","schema":{"type":"integer"}},{"name":"offset","in":"query","schema":{"type":"integer"}},{"name":"filter","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"A list of identity types","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listIdentityTypesEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}}},"/identity-types/{id}":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a single identity type by id. Requires admin access.","tags":["Identity"],"summary":"Retrieves a identity type","operationId":"detailIdentityType","responses":{"200":{"description":"A single identity type","content":{"application/json":{"schema":{"$ref":"#/components/schemas/detailIdentityTypeEnvelope"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/network-jwts":{"get":{"description":"Returns a list of JWTs for trusting a network","tags":["Enrollment"],"summary":"Returns a list of JWTs suitable for bootstrapping network trust.","operationId":"listNetworkJWTs","responses":{"200":{"description":"A list of network JWTs","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listNetworkJWTsEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}}},"/posture-check-role-attributes":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of role attributes in use by posture checks; supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Role Attributes"],"summary":"List role attributes in use by posture checks","operationId":"listPostureCheckRoleAttributes","parameters":[{"name":"limit","in":"query","schema":{"type":"integer"}},{"name":"offset","in":"query","schema":{"type":"integer"}},{"name":"filter","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"A list of role attributes","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listRoleAttributesEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}}},"/posture-check-types":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of posture check types\\n","tags":["Posture Checks"],"summary":"List a subset of posture check types","operationId":"listPostureCheckTypes","parameters":[{"name":"limit","in":"query","schema":{"type":"integer"}},{"name":"offset","in":"query","schema":{"type":"integer"}},{"name":"filter","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"A list of posture check types","content":{"application/json; charset=utf-8":{"schema":{"$ref":"#/components/schemas/listPostureCheckTypesEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json; charset=utf-8":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"}},"application/json":{"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json; charset=utf-8":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"}},"application/json":{"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json; charset=utf-8":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"}},"application/json":{"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}}},"/posture-check-types/{id}":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a single posture check type by id","tags":["Posture Checks"],"summary":"Retrieves a single posture check type","operationId":"detailPostureCheckType","responses":{"200":{"description":"Retrieves a singular posture check type by id","content":{"application/json":{"schema":{"$ref":"#/components/schemas/detailPostureCheckTypeEnvelope"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/posture-checks":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of posture checks\\n","tags":["Posture Checks"],"summary":"List a subset of posture checks","operationId":"listPostureChecks","parameters":[{"name":"limit","in":"query","schema":{"type":"integer"}},{"name":"offset","in":"query","schema":{"type":"integer"}},{"name":"filter","in":"query","schema":{"type":"string"}},{"name":"roleFilter","in":"query","explode":true,"schema":{"type":"array","items":{"type":"string"}}},{"name":"roleSemantic","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"A list of posture checks","content":{"application/json; charset=utf-8":{"schema":{"$ref":"#/components/schemas/listPostureCheckEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json; charset=utf-8":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"}},"application/json":{"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json; charset=utf-8":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"}},"application/json":{"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json; charset=utf-8":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"}},"application/json":{"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Creates a Posture Checks","tags":["Posture Checks"],"summary":"Creates a Posture Checks","operationId":"createPostureCheck","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/postureCheckCreate"}}},"description":"A Posture Check to create","required":true},"responses":{"201":{"description":"The create request was successful and the resource has been added at the following location","content":{"application/json":{"schema":{"$ref":"#/components/schemas/createEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}}},"/posture-checks/{id}":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a single Posture Checks by id","tags":["Posture Checks"],"summary":"Retrieves a single Posture Checks","operationId":"detailPostureCheck","responses":{"200":{"description":"Retrieves a singular posture check by id","content":{"application/json":{"schema":{"$ref":"#/components/schemas/detailPostureCheckEnvelope"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"put":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update all fields on a Posture Checks by id","tags":["Posture Checks"],"summary":"Update all fields on a Posture Checks","operationId":"updatePostureCheck","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/postureCheckUpdate"}}},"description":"A Posture Check update object","required":true},"responses":{"200":{"description":"The update request was successful and the resource has been altered","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"delete":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Deletes and Posture Checks by id","tags":["Posture Checks"],"summary":"Deletes an Posture Checks","operationId":"deletePostureCheck","responses":{"200":{"description":"The delete request was successful and the resource has been removed","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"403":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"patch":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update only the supplied fields on a Posture Checks by id","tags":["Posture Checks"],"summary":"Update the supplied fields on a Posture Checks","operationId":"patchPostureCheck","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/postureCheckPatch"}}},"description":"A Posture Check patch object","required":true},"responses":{"200":{"description":"The patch request was successful and the resource has been altered","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/routers":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of router resources; supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Router"],"summary":"List routers","operationId":"listRouters","parameters":[{"name":"limit","in":"query","schema":{"type":"integer"}},{"name":"offset","in":"query","schema":{"type":"integer"}},{"name":"filter","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"A list of specifications","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listRoutersEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Create a router resource. Requires admin access.","tags":["Router"],"summary":"Create a router resource","operationId":"createRouter","requestBody":{"$ref":"#/components/requestBodies/routerCreate"},"responses":{"201":{"description":"The create request was successful and the resource has been added at the following location","content":{"application/json":{"schema":{"$ref":"#/components/schemas/createEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}}},"/routers/{id}":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a single router by id. Requires admin access.","tags":["Router"],"summary":"Retrieves a single router","operationId":"detailRouter","responses":{"200":{"description":"A single router","content":{"application/json":{"schema":{"$ref":"#/components/schemas/detailRouterEnvelope"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"put":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update all fields on a router by id. Requires admin access.","tags":["Router"],"summary":"Update all fields on a router","operationId":"updateRouter","requestBody":{"$ref":"#/components/requestBodies/routerUpdate"},"responses":{"200":{"description":"The update request was successful and the resource has been altered","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"delete":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Delete a router by id. Requires admin access.","tags":["Router"],"summary":"Delete a router","operationId":"deleteRouter","responses":{"200":{"description":"The delete request was successful and the resource has been removed","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"409":{"description":"The resource requested to be removed/altered cannot be as it is referenced by another object.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"causeMessage":"referenced by /some-resource/05f4f710-c155-4a74-86d5-77558eb9cb42","code":"CONFLICT_CANNOT_MODIFY_REFERENCED","message":"The resource cannot be deleted/modified. Remove all referencing resources first.","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"patch":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update the supplied fields on a router. Requires admin access.","tags":["Router"],"summary":"Update the supplied fields on a router","operationId":"patchRouter","requestBody":{"$ref":"#/components/requestBodies/routerPatch"},"responses":{"200":{"description":"The patch request was successful and the resource has been altered","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/service-edge-router-policies":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of service edge router policy resources; supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Service Edge Router Policy"],"summary":"List service edge router policies","operationId":"listServiceEdgeRouterPolicies","parameters":[{"name":"limit","in":"query","schema":{"type":"integer"}},{"name":"offset","in":"query","schema":{"type":"integer"}},{"name":"filter","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"A list of service edge router policies","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listServiceEdgeRouterPoliciesEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Create a service edge router policy resource. Requires admin access.","tags":["Service Edge Router Policy"],"summary":"Create a service edge router policy resource","operationId":"createServiceEdgeRouterPolicy","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/serviceEdgeRouterPolicyCreate"}}},"description":"A service edge router policy to create","required":true},"responses":{"201":{"description":"The create request was successful and the resource has been added at the following location","content":{"application/json":{"schema":{"$ref":"#/components/schemas/createEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}}},"/service-edge-router-policies/{id}":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a single service edge policy by id. Requires admin access.","tags":["Service Edge Router Policy"],"summary":"Retrieves a single service edge policy","operationId":"detailServiceEdgeRouterPolicy","responses":{"200":{"description":"A single service edge router policy","content":{"application/json":{"schema":{"$ref":"#/components/schemas/detailServiceEdgePolicyEnvelope"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"put":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update all fields on a service edge policy by id. Requires admin access.","tags":["Service Edge Router Policy"],"summary":"Update all fields on a service edge policy","operationId":"updateServiceEdgeRouterPolicy","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/serviceEdgeRouterPolicyUpdate"}}},"description":"A service edge router policy update object","required":true},"responses":{"200":{"description":"The update request was successful and the resource has been altered","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"delete":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Delete a service edge policy by id. Requires admin access.","tags":["Service Edge Router Policy"],"summary":"Delete a service edge policy","operationId":"deleteServiceEdgeRouterPolicy","responses":{"200":{"description":"The delete request was successful and the resource has been removed","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"409":{"description":"The resource requested to be removed/altered cannot be as it is referenced by another object.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"causeMessage":"referenced by /some-resource/05f4f710-c155-4a74-86d5-77558eb9cb42","code":"CONFLICT_CANNOT_MODIFY_REFERENCED","message":"The resource cannot be deleted/modified. Remove all referencing resources first.","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"patch":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update the supplied fields on a service edge policy. Requires admin access.","tags":["Service Edge Router Policy"],"summary":"Update the supplied fields on a service edge policy","operationId":"patchServiceEdgeRouterPolicy","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/serviceEdgeRouterPolicyPatch"}}},"description":"A service edge router policy patch object","required":true},"responses":{"200":{"description":"The patch request was successful and the resource has been altered","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/service-edge-router-policies/{id}/edge-routers":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"List the edge routers that a service edge router policy applies to","tags":["Service Edge Router Policy"],"summary":"List the edge routers that a service edge router policy applies to","operationId":"listServiceEdgeRouterPolicyEdgeRouters","responses":{"200":{"description":"A list of edge routers","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listEdgeRoutersEnvelope"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/service-edge-router-policies/{id}/services":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"List the services that a service edge router policy applies to","tags":["Service Edge Router Policy"],"summary":"List the services that a service edge router policy applies to","operationId":"listServiceEdgeRouterPolicyServices","responses":{"200":{"description":"A list of services","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listServicesEnvelope"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/service-policies":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of service policy resources; supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Service Policy"],"summary":"List service policies","operationId":"listServicePolicies","parameters":[{"name":"limit","in":"query","schema":{"type":"integer"}},{"name":"offset","in":"query","schema":{"type":"integer"}},{"name":"filter","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"A list of service policies","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listServicePoliciesEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Create a service policy resource. Requires admin access.","tags":["Service Policy"],"summary":"Create a service policy resource","operationId":"createServicePolicy","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/servicePolicyCreate"}}},"description":"A service policy to create","required":true},"responses":{"201":{"description":"The create request was successful and the resource has been added at the following location","content":{"application/json":{"schema":{"$ref":"#/components/schemas/createEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}}},"/service-policies/{id}":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a single service policy by id. Requires admin access.","tags":["Service Policy"],"summary":"Retrieves a single service policy","operationId":"detailServicePolicy","responses":{"200":{"description":"A single service policy","content":{"application/json":{"schema":{"$ref":"#/components/schemas/detailServicePolicyEnvelop"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"put":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update all fields on a service policy by id. Requires admin access.","tags":["Service Policy"],"summary":"Update all fields on a service policy","operationId":"updateServicePolicy","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/servicePolicyUpdate"}}},"description":"A service policy update object","required":true},"responses":{"200":{"description":"The update request was successful and the resource has been altered","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"delete":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Delete a service policy by id. Requires admin access.","tags":["Service Policy"],"summary":"Delete a service policy","operationId":"deleteServicePolicy","responses":{"200":{"description":"The delete request was successful and the resource has been removed","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"409":{"description":"The resource requested to be removed/altered cannot be as it is referenced by another object.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"causeMessage":"referenced by /some-resource/05f4f710-c155-4a74-86d5-77558eb9cb42","code":"CONFLICT_CANNOT_MODIFY_REFERENCED","message":"The resource cannot be deleted/modified. Remove all referencing resources first.","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"patch":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update the supplied fields on a service policy. Requires admin access.","tags":["Service Policy"],"summary":"Update the supplied fields on a service policy","operationId":"patchServicePolicy","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/servicePolicyPatch"}}},"description":"A service policy patch object","required":true},"responses":{"200":{"description":"The patch request was successful and the resource has been altered","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/service-policies/{id}/identities":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of identity resources that are affected by a service policy; supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Service Policy"],"summary":"List identities a service policy affects","operationId":"listServicePolicyIdentities","parameters":[{"name":"limit","in":"query","schema":{"type":"integer"}},{"name":"offset","in":"query","schema":{"type":"integer"}},{"name":"filter","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"A list of identities","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listIdentitiesEnvelope"}}}},"400":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/service-policies/{id}/posture-checks":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of posture check resources that are affected by a service policy; supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Service Policy"],"summary":"List posture check a service policy includes","operationId":"listServicePolicyPostureChecks","parameters":[{"name":"limit","in":"query","schema":{"type":"integer"}},{"name":"offset","in":"query","schema":{"type":"integer"}},{"name":"filter","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"A list of posture checks","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listPostureCheckEnvelope"}}}},"400":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/service-policies/{id}/services":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of service resources that are affected by a service policy; supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Service Policy"],"summary":"List services a service policy affects","operationId":"listServicePolicyServices","parameters":[{"name":"limit","in":"query","schema":{"type":"integer"}},{"name":"offset","in":"query","schema":{"type":"integer"}},{"name":"filter","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"A list of services","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listServicesEnvelope"}}}},"400":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/service-role-attributes":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of role attributes in use by services; supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Role Attributes"],"summary":"List role attributes in use by services","operationId":"listServiceRoleAttributes","parameters":[{"name":"limit","in":"query","schema":{"type":"integer"}},{"name":"offset","in":"query","schema":{"type":"integer"}},{"name":"filter","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"A list of role attributes","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listRoleAttributesEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}}},"/services":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of config resources; supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Service"],"summary":"List services","operationId":"listServices","parameters":[{"name":"limit","in":"query","schema":{"type":"integer"}},{"name":"offset","in":"query","schema":{"type":"integer"}},{"name":"filter","in":"query","schema":{"type":"string"}},{"name":"configTypes","in":"query","explode":true,"schema":{"type":"array","items":{"type":"string"}}},{"name":"roleFilter","in":"query","explode":true,"schema":{"type":"array","items":{"type":"string"}}},{"name":"roleSemantic","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"A list of services","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listServicesEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Create a services resource. Requires admin access.","tags":["Service"],"summary":"Create a services resource","operationId":"createService","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/serviceCreate"}}},"description":"A service to create","required":true},"responses":{"201":{"description":"The create request was successful and the resource has been added at the following location","content":{"application/json":{"schema":{"$ref":"#/components/schemas/createEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}}},"/services/{id}":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a single service by id. Requires admin access.","tags":["Service"],"summary":"Retrieves a single service","operationId":"detailService","responses":{"200":{"description":"A single service","content":{"application/json":{"schema":{"$ref":"#/components/schemas/detailServiceEnvelope"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"put":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update all fields on a service by id. Requires admin access.","tags":["Service"],"summary":"Update all fields on a service","operationId":"updateService","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/serviceUpdate"}}},"description":"A service update object","required":true},"responses":{"200":{"description":"The update request was successful and the resource has been altered","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"delete":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Delete a service by id. Requires admin access.","tags":["Service"],"summary":"Delete a service","operationId":"deleteService","responses":{"200":{"description":"The delete request was successful and the resource has been removed","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"409":{"description":"The resource requested to be removed/altered cannot be as it is referenced by another object.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"causeMessage":"referenced by /some-resource/05f4f710-c155-4a74-86d5-77558eb9cb42","code":"CONFLICT_CANNOT_MODIFY_REFERENCED","message":"The resource cannot be deleted/modified. Remove all referencing resources first.","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"patch":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update the supplied fields on a service. Requires admin access.","tags":["Service"],"summary":"Update the supplied fields on a service","operationId":"patchService","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/servicePatch"}}},"description":"A service patch object","required":true},"responses":{"200":{"description":"The patch request was successful and the resource has been altered","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/services/{id}/configs":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of config resources associated to a specific service; supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Service"],"summary":"List configs associated to a specific service","operationId":"listServiceConfig","parameters":[{"name":"limit","in":"query","schema":{"type":"integer"}},{"name":"offset","in":"query","schema":{"type":"integer"}},{"name":"filter","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"A list of configs","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listConfigsEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/services/{id}/edge-routers":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of edge-routers that may be used to access the given service. Supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Service"],"summary":"List accessible edge-routers","operationId":"listServiceEdgeRouters","parameters":[{"name":"limit","in":"query","schema":{"type":"integer"}},{"name":"offset","in":"query","schema":{"type":"integer"}},{"name":"filter","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"A list of edge routers","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listEdgeRoutersEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/services/{id}/identities":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of identities that have access to this service. Supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Service"],"summary":"List identities with access","operationId":"listServiceIdentities","parameters":[{"name":"limit","in":"query","schema":{"type":"integer"}},{"name":"offset","in":"query","schema":{"type":"integer"}},{"name":"filter","in":"query","schema":{"type":"string"}},{"name":"policyType","in":"query","schema":{"type":"string","enum":["dial","bind"]}}],"responses":{"200":{"description":"A list of identities","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listIdentitiesEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/services/{id}/service-edge-router-policies":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of service edge router policy resources that affect a specific service; supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Service"],"summary":"List service edge router policies that affect a specific service","operationId":"listServiceServiceEdgeRouterPolicies","parameters":[{"name":"limit","in":"query","schema":{"type":"integer"}},{"name":"offset","in":"query","schema":{"type":"integer"}},{"name":"filter","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"A list of service edge router policies","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listServiceEdgeRouterPoliciesEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/services/{id}/service-policies":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of service policy resources that affect specific service; supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Service"],"summary":"List service policies that affect a specific service","operationId":"listServiceServicePolicies","parameters":[{"name":"limit","in":"query","schema":{"type":"integer"}},{"name":"offset","in":"query","schema":{"type":"integer"}},{"name":"filter","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"A list of service policies","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listServicePoliciesEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/services/{id}/terminators":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of terminator resources that are assigned specific service; supports filtering, sorting, and pagination.\\n","tags":["Service"],"summary":"List of terminators assigned to a service","operationId":"listServiceTerminators","parameters":[{"name":"limit","in":"query","schema":{"type":"integer"}},{"name":"offset","in":"query","schema":{"type":"integer"}},{"name":"filter","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"A list of terminators","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listTerminatorsEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/sessions":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of active sessions resources; supports filtering, sorting, and pagination. Requires admin access.\\n\\nSessions are tied to an API session and are moved when an API session times out or logs out. Active sessions\\n(i.e. Ziti SDK connected to an edge router) will keep the session and API session marked as active.\\n","tags":["Session"],"summary":"List sessions","operationId":"listSessions","parameters":[{"name":"limit","in":"query","schema":{"type":"integer"}},{"name":"offset","in":"query","schema":{"type":"integer"}},{"name":"filter","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"A list of sessions","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listSessionsManagementEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}}},"/sessions/{id}":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a single session by id. Requires admin access.","tags":["Session"],"summary":"Retrieves a single session","operationId":"detailSession","responses":{"200":{"description":"A single session","content":{"application/json":{"schema":{"$ref":"#/components/schemas/detailSessionManagementEnvelope"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"delete":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Delete a session by id. Requires admin access.","tags":["Session"],"summary":"Delete a session","operationId":"deleteSession","responses":{"200":{"description":"The delete request was successful and the resource has been removed","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"409":{"description":"The resource requested to be removed/altered cannot be as it is referenced by another object.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"causeMessage":"referenced by /some-resource/05f4f710-c155-4a74-86d5-77558eb9cb42","code":"CONFLICT_CANNOT_MODIFY_REFERENCED","message":"The resource cannot be deleted/modified. Remove all referencing resources first.","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/sessions/{id}/route-path":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a single session\'s route path by id. Requires admin access.","tags":["Session"],"summary":"Retrieves a single session\'s router path","operationId":"detailSessionRoutePath","responses":{"200":{"description":"A single session\'s route path","content":{"application/json":{"schema":{"$ref":"#/components/schemas/detailSessionRoutePathEnvelope"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/specs":{"get":{"security":[],"description":"Returns a list of spec files embedded within the controller for consumption/documentation/code geneartion","tags":["Informational"],"summary":"Returns a list of API specs","operationId":"listSpecs","responses":{"200":{"description":"A list of specifications","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listSpecsEnvelope"}}}}}}},"/specs/{id}":{"get":{"security":[],"description":"Returns single spec resource embedded within the controller for consumption/documentation/code geneartion","tags":["Informational"],"summary":"Return a single spec resource","operationId":"detailSpec","responses":{"200":{"description":"A single specification","content":{"application/json":{"schema":{"$ref":"#/components/schemas/detailSpecEnvelope"}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/specs/{id}/spec":{"get":{"security":[],"description":"Return the body of the specification (i.e. Swagger, OpenAPI 2.0, 3.0, etc).","tags":["Informational"],"summary":"Returns the spec\'s file","operationId":"detailSpecBody","responses":{"200":{"description":"Returns the document that represents the specification","content":{"text/yaml":{"schema":{"$ref":"#/components/schemas/detailSpecBodyEnvelope"}},"application/json":{"schema":{"$ref":"#/components/schemas/detailSpecBodyEnvelope"}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/summary":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"This endpoint is usefull for UIs that wish to display UI elements with counts.","tags":["Informational"],"summary":"Returns a list of accessible resource counts","operationId":"listSummary","responses":{"200":{"description":"Entity counts scopped to the current identitie\'s access","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listSummaryCountsEnvelope"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}}},"/terminators":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of terminator resources; supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Terminator"],"summary":"List terminators","operationId":"listTerminators","parameters":[{"name":"limit","in":"query","schema":{"type":"integer"}},{"name":"offset","in":"query","schema":{"type":"integer"}},{"name":"filter","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"A list of terminators","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listTerminatorsEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Create a terminator resource. Requires admin access.","tags":["Terminator"],"summary":"Create a terminator resource","operationId":"createTerminator","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/terminatorCreate"}}},"description":"A terminator to create","required":true},"responses":{"201":{"description":"The create request was successful and the resource has been added at the following location","content":{"application/json":{"schema":{"$ref":"#/components/schemas/createEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}}},"/terminators/{id}":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a single terminator by id. Requires admin access.","tags":["Terminator"],"summary":"Retrieves a single terminator","operationId":"detailTerminator","responses":{"200":{"description":"A single terminator","content":{"application/json":{"schema":{"$ref":"#/components/schemas/detailTerminatorEnvelope"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"put":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update all fields on a terminator by id. Requires admin access.","tags":["Terminator"],"summary":"Update all fields on a terminator","operationId":"updateTerminator","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/terminatorUpdate"}}},"description":"A terminator update object","required":true},"responses":{"200":{"description":"The update request was successful and the resource has been altered","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"delete":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Delete a terminator by id. Requires admin access.","tags":["Terminator"],"summary":"Delete a terminator","operationId":"deleteTerminator","responses":{"200":{"description":"The delete request was successful and the resource has been removed","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"409":{"description":"The resource requested to be removed/altered cannot be as it is referenced by another object.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"causeMessage":"referenced by /some-resource/05f4f710-c155-4a74-86d5-77558eb9cb42","code":"CONFLICT_CANNOT_MODIFY_REFERENCED","message":"The resource cannot be deleted/modified. Remove all referencing resources first.","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"patch":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update the supplied fields on a terminator. Requires admin access.","tags":["Terminator"],"summary":"Update the supplied fields on a terminator","operationId":"patchTerminator","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/terminatorPatch"}}},"description":"A terminator patch object","required":true},"responses":{"200":{"description":"The patch request was successful and the resource has been altered","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/transit-routers":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of router resources; supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Router"],"summary":"List routers","operationId":"listTransitRouters","parameters":[{"name":"limit","in":"query","schema":{"type":"integer"}},{"name":"offset","in":"query","schema":{"type":"integer"}},{"name":"filter","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"A list of specifications","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listRoutersEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Create a router resource. Requires admin access.","tags":["Router"],"summary":"Create a router resource","operationId":"createTransitRouter","requestBody":{"$ref":"#/components/requestBodies/routerCreate"},"responses":{"201":{"description":"The create request was successful and the resource has been added at the following location","content":{"application/json":{"schema":{"$ref":"#/components/schemas/createEnvelope"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}}},"/transit-routers/{id}":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a single router by id. Requires admin access.","tags":["Router"],"summary":"Retrieves a single router","operationId":"detailTransitRouter","responses":{"200":{"description":"A single router","content":{"application/json":{"schema":{"$ref":"#/components/schemas/detailRouterEnvelope"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"put":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update all fields on a router by id. Requires admin access.","tags":["Router"],"summary":"Update all fields on a router","operationId":"updateTransitRouter","requestBody":{"$ref":"#/components/requestBodies/routerUpdate"},"responses":{"200":{"description":"The update request was successful and the resource has been altered","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"delete":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Delete a router by id. Requires admin access.","tags":["Router"],"summary":"Delete a router","operationId":"deleteTransitRouter","responses":{"200":{"description":"The delete request was successful and the resource has been removed","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"409":{"description":"The resource requested to be removed/altered cannot be as it is referenced by another object.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"causeMessage":"referenced by /some-resource/05f4f710-c155-4a74-86d5-77558eb9cb42","code":"CONFLICT_CANNOT_MODIFY_REFERENCED","message":"The resource cannot be deleted/modified. Remove all referencing resources first.","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"patch":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update the supplied fields on a router. Requires admin access.","tags":["Router"],"summary":"Update the supplied fields on a router","operationId":"patchTransitRouter","requestBody":{"$ref":"#/components/requestBodies/routerPatch"},"responses":{"200":{"description":"The patch request was successful and the resource has been altered","content":{"application/json":{"schema":{"$ref":"#/components/schemas/empty"}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"404":{"description":"The requested resource does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/apiErrorEnvelope"},"examples":{"response":{"value":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}}}},"parameters":[{"description":"The id of the requested resource","name":"id","in":"path","required":true,"schema":{"type":"string"}}]},"/version":{"get":{"security":[],"tags":["Informational"],"summary":"Returns version information","operationId":"listVersion","responses":{"200":{"description":"Version information for the controller","content":{"application/json":{"schema":{"$ref":"#/components/schemas/listVersionEnvelope"}}}}}}}},"servers":[{"url":"https://demo.ziti.dev/edge/management/v1"}],"components":{"requestBodies":{"routerUpdate":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/routerUpdate"}}},"description":"A router update object","required":true},"routerCreate":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/routerCreate"}}},"description":"A router to create","required":true},"mfaCode":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/mfaCode"}}},"description":"An MFA validation request","required":true},"routerPatch":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/routerPatch"}}},"description":"A router patch object","required":true}},"securitySchemes":{"oauth2":{"type":"oauth2","flows":{"authorizationCode":{"authorizationUrl":"/oidc/authorize","tokenUrl":"/oidc/token","scopes":{"openid":"openid"}}}},"ztSession":{"description":"An API Key that is provided post authentication","type":"apiKey","name":"zt-session","in":"header"}},"schemas":{"apiAddress":{"type":"object","properties":{"url":{"type":"string"},"version":{"type":"string"}}},"apiAddressArray":{"type":"array","items":{"$ref":"#/components/schemas/apiAddress"}},"apiAddressList":{"type":"object","additionalProperties":{"$ref":"#/components/schemas/apiAddressArray"}},"apiError":{"type":"object","properties":{"args":{"$ref":"#/components/schemas/apiErrorArgs"},"cause":{"$ref":"#/components/schemas/apiErrorCause"},"causeMessage":{"type":"string"},"code":{"type":"string"},"data":{"type":"object","additionalProperties":true},"message":{"type":"string"},"requestId":{"type":"string"}}},"apiErrorArgs":{"type":"object","properties":{"urlVars":{"type":"object","additionalProperties":{"type":"string"}}}},"apiErrorCause":{"allOf":[{"$ref":"#/components/schemas/apiFieldError"},{"$ref":"#/components/schemas/apiError"}]},"apiErrorEnvelope":{"type":"object","required":["meta","error"],"properties":{"error":{"$ref":"#/components/schemas/apiError"},"meta":{"$ref":"#/components/schemas/meta"}}},"apiFieldError":{"type":"object","properties":{"field":{"type":"string"},"reason":{"type":"string"},"value":{"description":"can be any value - string, number, boolean, array or object"}}},"apiSessionDetail":{"description":"An API Session object","type":"object","allOf":[{"$ref":"#/components/schemas/baseEntity"},{"type":"object","required":["token","identity","identityId","configTypes","ipAddress","authQueries","cachedUpdatedAt","isMfaRequired","isMfaComplete","authenticatorId","isCertExtendable"],"properties":{"authQueries":{"$ref":"#/components/schemas/authQueryList"},"authenticatorId":{"type":"string"},"cachedLastActivityAt":{"type":"string","format":"date-time"},"configTypes":{"type":"array","items":{"type":"string"}},"identity":{"$ref":"#/components/schemas/entityRef"},"identityId":{"type":"string"},"ipAddress":{"type":"string"},"isCertExtendable":{"type":"boolean"},"isMfaComplete":{"type":"boolean"},"isMfaRequired":{"type":"boolean"},"lastActivityAt":{"type":"string","format":"date-time"},"token":{"type":"string"}}}]},"apiSessionList":{"type":"array","items":{"$ref":"#/components/schemas/apiSessionDetail"}},"apiSessionPostureData":{"type":"object","required":["mfa"],"properties":{"endpointState":{"$ref":"#/components/schemas/postureDataEndpointState"},"mfa":{"$ref":"#/components/schemas/postureDataMfa"},"sdkInfo":{"$ref":"#/components/schemas/sdkInfo"}}},"apiVersion":{"type":"object","required":["path"],"properties":{"apiBaseUrls":{"type":"array","items":{"type":"string"}},"path":{"type":"string"},"version":{"type":"string"}}},"attributes":{"description":"A set of strings used to loosly couple this resource to policies","type":"array","items":{"type":"string"},"x-omitempty":true,"nullable":true},"authPolicyCreate":{"description":"A Auth Policy resource","type":"object","required":["name","primary","secondary"],"properties":{"name":{"type":"string"},"primary":{"$ref":"#/components/schemas/authPolicyPrimary"},"secondary":{"$ref":"#/components/schemas/authPolicySecondary"},"tags":{"$ref":"#/components/schemas/tags"}}},"authPolicyDetail":{"description":"A Auth Policy resource","type":"object","allOf":[{"$ref":"#/components/schemas/baseEntity"},{"type":"object","required":["name","primary","secondary"],"properties":{"name":{"type":"string"},"primary":{"$ref":"#/components/schemas/authPolicyPrimary"},"secondary":{"$ref":"#/components/schemas/authPolicySecondary"}}}]},"authPolicyList":{"description":"An array of Auth Policies resources","type":"array","items":{"$ref":"#/components/schemas/authPolicyDetail"}},"authPolicyPatch":{"description":"A Auth Policy resource","type":"object","properties":{"name":{"type":"string","nullable":true},"primary":{"$ref":"#/components/schemas/authPolicyPrimaryPatch"},"secondary":{"$ref":"#/components/schemas/authPolicySecondaryPatch"},"tags":{"$ref":"#/components/schemas/tags"}}},"authPolicyPrimary":{"type":"object","required":["updb","cert","extJwt"],"properties":{"cert":{"$ref":"#/components/schemas/authPolicyPrimaryCert"},"extJwt":{"$ref":"#/components/schemas/authPolicyPrimaryExtJwt"},"updb":{"$ref":"#/components/schemas/authPolicyPrimaryUpdb"}}},"authPolicyPrimaryCert":{"type":"object","required":["allowed","allowExpiredCerts"],"properties":{"allowExpiredCerts":{"type":"boolean"},"allowed":{"type":"boolean"}}},"authPolicyPrimaryCertPatch":{"type":"object","properties":{"allowExpiredCerts":{"type":"boolean","nullable":true},"allowed":{"type":"boolean","nullable":true}},"nullable":true},"authPolicyPrimaryExtJwt":{"type":"object","required":["allowed","allowedSigners"],"properties":{"allowed":{"type":"boolean"},"allowedSigners":{"type":"array","items":{"type":"string"}}}},"authPolicyPrimaryExtJwtPatch":{"type":"object","properties":{"allowed":{"type":"boolean","nullable":true},"allowedSigners":{"type":"array","items":{"type":"string"},"nullable":true}},"nullable":true},"authPolicyPrimaryPatch":{"type":"object","properties":{"cert":{"$ref":"#/components/schemas/authPolicyPrimaryCertPatch"},"extJwt":{"$ref":"#/components/schemas/authPolicyPrimaryExtJwtPatch"},"updb":{"$ref":"#/components/schemas/authPolicyPrimaryUpdbPatch"}}},"authPolicyPrimaryUpdb":{"type":"object","required":["allowed","minPasswordLength","requireSpecialChar","requireNumberChar","requireMixedCase","maxAttempts","lockoutDurationMinutes"],"properties":{"allowed":{"type":"boolean"},"lockoutDurationMinutes":{"type":"integer"},"maxAttempts":{"type":"integer"},"minPasswordLength":{"type":"integer"},"requireMixedCase":{"type":"boolean"},"requireNumberChar":{"type":"boolean"},"requireSpecialChar":{"type":"boolean"}}},"authPolicyPrimaryUpdbPatch":{"type":"object","properties":{"allowed":{"type":"boolean","nullable":true},"lockoutDurationMinutes":{"type":"integer","nullable":true},"maxAttempts":{"type":"integer","nullable":true},"minPasswordLength":{"type":"integer","nullable":true},"requireMixedCase":{"type":"boolean","nullable":true},"requireNumberChar":{"type":"boolean","nullable":true},"requireSpecialChar":{"type":"boolean","nullable":true}},"nullable":true},"authPolicySecondary":{"type":"object","required":["requireTotp"],"properties":{"requireExtJwtSigner":{"type":"string","x-omit-empty":false,"nullable":true},"requireTotp":{"type":"boolean"}}},"authPolicySecondaryPatch":{"type":"object","properties":{"requireExtJwtSigner":{"type":"string","nullable":true},"requireTotp":{"type":"boolean","nullable":true}},"nullable":true},"authPolicyUpdate":{"$ref":"#/components/schemas/authPolicyCreate"},"authQueryDetail":{"type":"object","required":["provider"],"properties":{"clientId":{"type":"string"},"format":{"$ref":"#/components/schemas/mfaFormats"},"httpMethod":{"type":"string"},"httpUrl":{"type":"string"},"id":{"type":"string"},"maxLength":{"type":"integer"},"minLength":{"type":"integer"},"provider":{"$ref":"#/components/schemas/mfaProviders"},"scopes":{"type":"array","items":{"type":"string"}},"typeId":{"$ref":"#/components/schemas/authQueryType"}}},"authQueryList":{"type":"array","items":{"$ref":"#/components/schemas/authQueryDetail"}},"authQueryType":{"type":"string","enum":["MFA","TOTP","EXT-JWT"]},"authenticate":{"description":"A generic authenticate object meant for use with the /authenticate path. Required fields depend on authentication method.","type":"object","properties":{"configTypes":{"$ref":"#/components/schemas/configTypes"},"envInfo":{"$ref":"#/components/schemas/envInfo"},"password":{"$ref":"#/components/schemas/password"},"sdkInfo":{"$ref":"#/components/schemas/sdkInfo"},"username":{"$ref":"#/components/schemas/username"}}},"authenticatorCreate":{"description":"Creates an authenticator for a specific identity which can be used for API authentication","type":"object","required":["method","identityId"],"properties":{"certPem":{"description":"The client certificate the identity will login with. Used only for method=\'cert\'","type":"string"},"identityId":{"description":"The id of an existing identity that will be assigned this authenticator","type":"string"},"method":{"description":"The type of authenticator to create; which will dictate which properties on this object are required.","type":"string"},"password":{"description":"The password the identity will login with. Used only for method=\'updb\'","type":"string"},"tags":{"$ref":"#/components/schemas/tags"},"username":{"description":"The username that the identity will login with. Used only for method=\'updb\'","type":"string"}}},"authenticatorDetail":{"description":"A singular authenticator resource","type":"object","allOf":[{"$ref":"#/components/schemas/baseEntity"},{"type":"object","required":["method","identityId","identity"],"properties":{"certPem":{"type":"string"},"fingerprint":{"type":"string"},"identity":{"$ref":"#/components/schemas/entityRef"},"identityId":{"type":"string"},"isIssuedByNetwork":{"type":"boolean"},"method":{"type":"string"},"username":{"type":"string"}}}]},"authenticatorList":{"description":"An array of authenticator resources","type":"array","items":{"$ref":"#/components/schemas/authenticatorDetail"}},"authenticatorPatch":{"description":"All of the fields on an authenticator that may be updated","type":"object","properties":{"password":{"$ref":"#/components/schemas/passwordNullable"},"tags":{"$ref":"#/components/schemas/tags"},"username":{"$ref":"#/components/schemas/usernameNullable"}}},"authenticatorPatchWithCurrent":{"description":"All of the fields on an authenticator that may be updated","type":"object","allOf":[{"$ref":"#/components/schemas/authenticatorPatch"},{"type":"object","required":["currentPassword"],"properties":{"currentPassword":{"$ref":"#/components/schemas/password"}}}]},"authenticatorUpdate":{"description":"All of the fields on an authenticator that will be updated","type":"object","required":["username","password"],"properties":{"password":{"$ref":"#/components/schemas/password"},"tags":{"$ref":"#/components/schemas/tags"},"username":{"$ref":"#/components/schemas/username"}}},"authenticatorUpdateWithCurrent":{"description":"All of the fields on an authenticator that will be updated","type":"object","allOf":[{"$ref":"#/components/schemas/authenticatorUpdate"},{"type":"object","required":["currentPassword"],"properties":{"currentPassword":{"$ref":"#/components/schemas/password"}}}]},"baseEntity":{"description":"Fields shared by all Edge API entities","type":"object","required":["id","createdAt","updatedAt","_links"],"properties":{"_links":{"$ref":"#/components/schemas/links"},"createdAt":{"type":"string","format":"date-time"},"id":{"type":"string"},"tags":{"$ref":"#/components/schemas/tags"},"updatedAt":{"type":"string","format":"date-time"}}},"caCreate":{"description":"A create Certificate Authority (CA) object","type":"object","required":["name","certPem","isAutoCaEnrollmentEnabled","isOttCaEnrollmentEnabled","isAuthEnabled","identityRoles"],"properties":{"certPem":{"type":"string","example":"-----BEGIN CERTIFICATE-----\\nMIICUjCCAdmgAwIBAgIJANooo7NB+dZZMAoGCCqGSM49BAMCMF4xCzAJBgNVBAYT\\nAlVTMQswCQYDVQQIDAJOQzETMBEGA1UECgwKTmV0Rm91bmRyeTEtMCsGA1UEAwwk\\nTmV0Rm91bmRyeSBaaXRpIEV4dGVybmFsIEFQSSBSb290IENBMB4XDTE4MTExNTEy\\nNTcwOVoXDTM4MTExMDEyNTcwOVowXjELMAkGA1UEBhMCVVMxCzAJBgNVBAgMAk5D\\nMRMwEQYDVQQKDApOZXRGb3VuZHJ5MS0wKwYDVQQDDCROZXRGb3VuZHJ5IFppdGkg\\nRXh0ZXJuYWwgQVBJIFJvb3QgQ0EwdjAQBgcqhkjOPQIBBgUrgQQAIgNiAARwq61Z\\nIaqbaw0PDt3frJZaHjkxfZhwYrykI1GlbRNd/jix03lVG9qvpN5Og9fQfFFcFmD/\\n3vCE9S6O0npm0mADQxcBcxbMRAH5dtBuCuiJW6qAAbPgiM32vqSxBiFt0KejYzBh\\nMB0GA1UdDgQWBBRx1OVGuc/jdltDc8YBtkw8Tbr4fjAfBgNVHSMEGDAWgBRx1OVG\\nuc/jdltDc8YBtkw8Tbr4fjAPBgNVHRMBAf8EBTADAQH/MA4GA1UdDwEB/wQEAwIB\\nhjAKBggqhkjOPQQDAgNnADBkAjBDRxNZUaIVpkQKnAgJukl3ysd3/i7Z6hDyIEms\\nkllz/+ZvmdBp9iedV5o5BvJUggACMCv+UBFlJH7pmsOCo/F45Kk178YsCC7gaMxE\\n1ZG1zveyMvsYsH04C9FndE6w2MLvlA==\\n-----END CERTIFICATE-----\\n"},"externalIdClaim":{"$ref":"#/components/schemas/externalIdClaim"},"identityNameFormat":{"type":"string"},"identityRoles":{"$ref":"#/components/schemas/roles"},"isAuthEnabled":{"type":"boolean","example":true},"isAutoCaEnrollmentEnabled":{"type":"boolean","example":true},"isOttCaEnrollmentEnabled":{"type":"boolean","example":true},"name":{"type":"string","example":"Test 3rd Party External CA"},"tags":{"$ref":"#/components/schemas/tags"}}},"caDetail":{"description":"A Certificate Authority (CA) resource","type":"object","allOf":[{"$ref":"#/components/schemas/baseEntity"},{"type":"object","required":["name","fingerprint","certPem","isVerified","isAutoCaEnrollmentEnabled","isOttCaEnrollmentEnabled","isAuthEnabled","identityRoles","identityNameFormat"],"properties":{"certPem":{"type":"string"},"externalIdClaim":{"$ref":"#/components/schemas/externalIdClaim"},"fingerprint":{"type":"string"},"identityNameFormat":{"type":"string"},"identityRoles":{"$ref":"#/components/schemas/roles"},"isAuthEnabled":{"type":"boolean","example":true},"isAutoCaEnrollmentEnabled":{"type":"boolean","example":true},"isOttCaEnrollmentEnabled":{"type":"boolean","example":true},"isVerified":{"type":"boolean","example":false},"name":{"type":"string"},"verificationToken":{"type":"string","format":"uuid"}}}]},"caList":{"description":"An array of Certificate Authority (CA) resources","type":"array","items":{"$ref":"#/components/schemas/caDetail"}},"caPatch":{"type":"object","properties":{"externalIdClaim":{"$ref":"#/components/schemas/externalIdClaimPatch"},"identityNameFormat":{"type":"string","nullable":true},"identityRoles":{"$ref":"#/components/schemas/roles"},"isAuthEnabled":{"type":"boolean","example":true,"nullable":true},"isAutoCaEnrollmentEnabled":{"type":"boolean","example":true,"nullable":true},"isOttCaEnrollmentEnabled":{"type":"boolean","example":true,"nullable":true},"name":{"type":"string","example":"My CA","nullable":true},"tags":{"$ref":"#/components/schemas/tags"}}},"caUpdate":{"type":"object","required":["name","isAutoCaEnrollmentEnabled","isOttCaEnrollmentEnabled","isAuthEnabled","identityRoles","identityNameFormat"],"properties":{"externalIdClaim":{"$ref":"#/components/schemas/externalIdClaim"},"identityNameFormat":{"type":"string"},"identityRoles":{"$ref":"#/components/schemas/roles"},"isAuthEnabled":{"type":"boolean","example":true},"isAutoCaEnrollmentEnabled":{"type":"boolean","example":true},"isOttCaEnrollmentEnabled":{"type":"boolean","example":true},"name":{"type":"string","example":"My CA"},"tags":{"$ref":"#/components/schemas/tags"}}},"capabilities":{"type":"string","enum":["OIDC_AUTH","HA_CONTROLLER"]},"commonEdgeRouterProperties":{"type":"object","required":["hostname","name","supportedProtocols","syncStatus","isOnline","cost","noTraversal","disabled"],"properties":{"appData":{"$ref":"#/components/schemas/tags"},"cost":{"type":"integer","maximum":65535,"minimum":0,"nullable":true},"disabled":{"type":"boolean"},"hostname":{"type":"string"},"isOnline":{"type":"boolean"},"name":{"type":"string"},"noTraversal":{"type":"boolean","nullable":true},"supportedProtocols":{"type":"object","additionalProperties":{"type":"string"}},"syncStatus":{"type":"string"}}},"configCreate":{"description":"A config create object","type":"object","required":["name","configTypeId","data"],"properties":{"configTypeId":{"description":"The id of a config-type that the data section will match","type":"string"},"data":{"description":"Data payload is defined by the schema of the config-type defined in the type parameter","type":"object","additionalProperties":true,"nullable":false},"name":{"type":"string","example":"default.ziti-tunneler-server.v1"},"tags":{"$ref":"#/components/schemas/tags"}},"example":{"configTypeId":"cea49285-6c07-42cf-9f52-09a9b115c783","data":{"hostname":"example.com","port":80},"name":"test-config"}},"configDetail":{"description":"A config resource","type":"object","allOf":[{"$ref":"#/components/schemas/baseEntity"},{"type":"object","required":["name","configTypeId","configType","data"],"properties":{"configType":{"$ref":"#/components/schemas/entityRef"},"configTypeId":{"type":"string"},"data":{"description":"The data section of a config is based on the schema of its type","type":"object"},"name":{"type":"string"}}}]},"configList":{"description":"An array of config resources","type":"array","items":{"$ref":"#/components/schemas/configDetail"}},"configPatch":{"description":"A config patch object","type":"object","properties":{"data":{"description":"Data payload is defined by the schema of the config-type defined in the type parameter","type":"object","additionalProperties":true},"name":{"type":"string","example":"default.ziti-tunneler-server.v1"},"tags":{"$ref":"#/components/schemas/tags"}},"example":{"data":{"hostname":"example.com","port":80},"name":"example-config-name"}},"configTypeCreate":{"description":"A config-type create object","type":"object","required":["name"],"properties":{"name":{"type":"string","example":"ziti-tunneler-server.v1"},"schema":{"description":"A JSON schema to enforce configuration against","type":"object","additionalProperties":true},"tags":{"$ref":"#/components/schemas/tags"}}},"configTypeDetail":{"description":"A config-type resource","type":"object","allOf":[{"$ref":"#/components/schemas/baseEntity"},{"type":"object","required":["name","schema"],"properties":{"name":{"type":"string","example":"ziti-tunneler-server.v1"},"schema":{"description":"A JSON schema to enforce configuration against","type":"object","additionalProperties":true}}}]},"configTypeList":{"description":"An array of config-type resources","type":"array","items":{"$ref":"#/components/schemas/configTypeDetail"}},"configTypePatch":{"description":"A config-type patch object","type":"object","properties":{"name":{"type":"string","example":"ziti-tunneler-server.v1"},"schema":{"description":"A JSON schema to enforce configuration against","type":"object","additionalProperties":true},"tags":{"$ref":"#/components/schemas/tags"}}},"configTypeUpdate":{"description":"A config-type update object","type":"object","required":["name"],"properties":{"name":{"type":"string","example":"ziti-tunneler-server.v1"},"schema":{"description":"A JSON schema to enforce configuration against","type":"object","additionalProperties":true},"tags":{"$ref":"#/components/schemas/tags"}}},"configTypes":{"description":"Specific configuration types that should be returned","type":"array","items":{"type":"string"}},"configUpdate":{"description":"A config update object","type":"object","required":["name","data"],"properties":{"data":{"description":"Data payload is defined by the schema of the config-type defined in the type parameter","type":"object","additionalProperties":true,"nullable":false},"name":{"type":"string","example":"default.ziti-tunneler-server.v1"},"tags":{"$ref":"#/components/schemas/tags"}},"example":{"data":{"hostname":"example.com","port":80},"name":"example-config-name"}},"controllerDetail":{"description":"A controller resource","type":"object","allOf":[{"$ref":"#/components/schemas/baseEntity"},{"type":"object","required":["name","certPem","fingerprint","isOnline","lastJoinedAt"],"properties":{"apiAddresses":{"$ref":"#/components/schemas/apiAddressList"},"certPem":{"type":"string"},"ctrlAddress":{"type":"string","nullable":true},"fingerprint":{"type":"string"},"isOnline":{"type":"boolean"},"lastJoinedAt":{"type":"string","format":"date-time"},"name":{"type":"string"}}}]},"controllersList":{"description":"An array of controller resources","type":"array","items":{"$ref":"#/components/schemas/controllerDetail"}},"createEnvelope":{"type":"object","properties":{"data":{"$ref":"#/components/schemas/createLocation"},"meta":{"$ref":"#/components/schemas/meta"}}},"createLocation":{"type":"object","properties":{"_links":{"$ref":"#/components/schemas/links"},"id":{"type":"string"}}},"currentApiSessionDetail":{"description":"An API Session object for the current API session","type":"object","allOf":[{"$ref":"#/components/schemas/apiSessionDetail"},{"type":"object","required":["expiresAt","expirationSeconds"],"properties":{"expirationSeconds":{"type":"integer"},"expiresAt":{"type":"string","format":"date-time"}}}]},"currentApiSessionDetailEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/currentApiSessionDetail"},"meta":{"$ref":"#/components/schemas/meta"}}},"currentIdentityDetailEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/identityDetail"},"meta":{"$ref":"#/components/schemas/meta"}}},"dataIntegrityCheckDetail":{"type":"object","required":["description","fixed"],"properties":{"description":{"type":"string"},"fixed":{"type":"boolean"}}},"dataIntegrityCheckDetailList":{"type":"array","items":{"$ref":"#/components/schemas/dataIntegrityCheckDetail"}},"dataIntegrityCheckDetails":{"type":"object","required":["inProgress","fixingErrors","tooManyErrors","startTime","endTime","error","results"],"properties":{"endTime":{"type":"string","format":"date-time"},"error":{"type":"string"},"fixingErrors":{"type":"boolean"},"inProgress":{"type":"boolean"},"results":{"$ref":"#/components/schemas/dataIntegrityCheckDetailList"},"startTime":{"type":"string","format":"date-time"},"tooManyErrors":{"type":"boolean"}}},"dataIntegrityCheckResultEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/dataIntegrityCheckDetails"},"meta":{"$ref":"#/components/schemas/meta"}}},"detailApiSessionEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/apiSessionDetail"},"meta":{"$ref":"#/components/schemas/meta"}}},"detailAuthPolicyEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/authPolicyDetail"},"meta":{"$ref":"#/components/schemas/meta"}}},"detailAuthenticatorEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/authenticatorDetail"},"meta":{"$ref":"#/components/schemas/meta"}}},"detailCaEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/caDetail"},"meta":{"$ref":"#/components/schemas/meta"}}},"detailConfigEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/configDetail"},"meta":{"$ref":"#/components/schemas/meta"}}},"detailConfigTypeEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/configTypeDetail"},"meta":{"$ref":"#/components/schemas/meta"}}},"detailEdgeRouterPolicyEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/edgeRouterPolicyDetail"},"meta":{"$ref":"#/components/schemas/meta"}}},"detailEnrollmentEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/enrollmentDetail"},"meta":{"$ref":"#/components/schemas/meta"}}},"detailExternalJwtSignerEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/externalJwtSignerDetail"},"meta":{"$ref":"#/components/schemas/meta"}}},"detailIdentityEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/identityDetail"},"meta":{"$ref":"#/components/schemas/meta"}}},"detailIdentityTypeEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/identityTypeDetail"},"meta":{"$ref":"#/components/schemas/meta"}}},"detailMfa":{"type":"object","allOf":[{"$ref":"#/components/schemas/baseEntity"},{"required":["isVerified"],"properties":{"isVerified":{"type":"boolean"},"provisioningUrl":{"description":"Not provided if MFA verification has been completed","type":"string"},"recoveryCodes":{"description":"Not provided if MFA verification has been completed","type":"array","items":{"type":"string"}}}}]},"detailMfaEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/detailMfa"},"meta":{"$ref":"#/components/schemas/meta"}}},"detailMfaRecoveryCodes":{"type":"object","allOf":[{"$ref":"#/components/schemas/baseEntity"},{"required":["recoveryCodes"],"properties":{"recoveryCodes":{"type":"array","items":{"type":"string"}}}}]},"detailMfaRecoveryCodesEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/detailMfaRecoveryCodes"},"meta":{"$ref":"#/components/schemas/meta"}}},"detailPostureCheckEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/postureCheckDetail"},"meta":{"$ref":"#/components/schemas/meta"}}},"detailPostureCheckTypeEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/postureCheckTypeDetail"},"meta":{"$ref":"#/components/schemas/meta"}}},"detailRouterEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/routerDetail"},"meta":{"$ref":"#/components/schemas/meta"}}},"detailServiceEdgePolicyEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/serviceEdgeRouterPolicyDetail"},"meta":{"$ref":"#/components/schemas/meta"}}},"detailServiceEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/serviceDetail"},"meta":{"$ref":"#/components/schemas/meta"}}},"detailServicePolicyEnvelop":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/servicePolicyDetail"},"meta":{"$ref":"#/components/schemas/meta"}}},"detailSessionManagementEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/sessionManagementDetail"},"meta":{"$ref":"#/components/schemas/meta"}}},"detailSessionRoutePathEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/sessionRoutePathDetail"},"meta":{"$ref":"#/components/schemas/meta"}}},"detailSpecBodyEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/specBodyDetail"},"meta":{"$ref":"#/components/schemas/meta"}}},"detailSpecEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/specDetail"},"meta":{"$ref":"#/components/schemas/meta"}}},"detailTerminatorEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/terminatorDetail"},"meta":{"$ref":"#/components/schemas/meta"}}},"detailedEdgeRouterEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/edgeRouterDetail"},"meta":{"$ref":"#/components/schemas/meta"}}},"dialBind":{"type":"string","enum":["Dial","Bind","Invalid"]},"dialBindArray":{"type":"array","items":{"$ref":"#/components/schemas/dialBind"}},"disableParams":{"type":"object","required":["durationMinutes"],"properties":{"durationMinutes":{"type":"integer"}}},"edgeRouterCreate":{"description":"An edge router create object","type":"object","required":["name"],"properties":{"appData":{"$ref":"#/components/schemas/tags"},"cost":{"type":"integer","maximum":65535,"minimum":0,"nullable":true},"disabled":{"type":"boolean","nullable":true},"isTunnelerEnabled":{"type":"boolean"},"name":{"type":"string"},"noTraversal":{"type":"boolean","nullable":true},"roleAttributes":{"$ref":"#/components/schemas/attributes"},"tags":{"$ref":"#/components/schemas/tags"}}},"edgeRouterDetail":{"description":"A detail edge router resource","type":"object","allOf":[{"$ref":"#/components/schemas/baseEntity"},{"$ref":"#/components/schemas/commonEdgeRouterProperties"},{"type":"object","required":["isVerified","roleAttributes","os","version","arch","buildDate","revision","isTunnelerEnabled"],"properties":{"certPem":{"type":"string","x-omitempty":false,"nullable":true},"enrollmentCreatedAt":{"type":"string","format":"date-time","nullable":true},"enrollmentExpiresAt":{"type":"string","format":"date-time","nullable":true},"enrollmentJwt":{"type":"string","nullable":true},"enrollmentToken":{"type":"string","nullable":true},"fingerprint":{"type":"string"},"isTunnelerEnabled":{"type":"boolean"},"isVerified":{"type":"boolean"},"roleAttributes":{"$ref":"#/components/schemas/attributes"},"unverifiedCertPem":{"type":"string","x-omitempty":false,"nullable":true},"unverifiedFingerprint":{"type":"string","x-omitempty":false,"nullable":true},"versionInfo":{"$ref":"#/components/schemas/versionInfo"}}}],"example":{"_links":{"edge-router-policies":{"href":"./edge-routers/b0766b8d-bd1a-4d28-8415-639b29d3c83d/edge-routers"},"self":{"href":"./edge-routers/b0766b8d-bd1a-4d28-8415-639b29d3c83d"}},"cost":0,"createdAt":"2020-03-16T17:13:31.5807454Z","enrollmentCreatedAt":"2020-03-16T17:13:31.5777637Z","enrollmentExpiresAt":"2020-03-16T17:18:31.5777637Z","enrollmentJwt":"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbSI6ImVyb3R0IiwiZXhwIjoxNTg0Mzc5MTExLCJpc3MiOiJodHRwczovL 2xvY2FsaG9zdDoxMjgwIiwianRpIjoiMzBhMWYwZWEtZDM5Yi00YWFlLWI4NTItMzA0Y2YxYzMwZDFmIiwic3ViIjoiYjA3NjZiOGQtYmQxYS00ZDI 4LTg0MTUtNjM5YjI5ZDNjODNkIn0.UsyQhCPORQ5tQnYWY7S88LNvV9iFS5Hy-P4aJaClZzEICobKgnQoyQblJcdMvk3cGKwyFqAnQtt0tDZkb8tHz Vqyv6bilHcAFuMRrdwXRqdXquabSN5geu2qBUnyzL7Mf2X85if8sbMida6snB4oLZsVRF3CRn4ODBJdeiVJ_Z4rgD-zW2IwtXPApT7ALyiiw2cN4EH 8pqQ7tpZKqztE0PGEbBQFPGKUFnm7oXyvSUo17EsFJUv5gUlBzfKKGolh5io4ptp22HZrqsqSnqDSOnYEZHonr5Yljuwiktrlh-JKiK6GGns5OAJMP dO9lgM4yHSpF2ILbqhWMV93Y3zMOg","enrollmentToken":"30a1f0ea-d39b-4aae-b852-304cf1c30d1f","fingerprint":null,"hostname":"","id":"b0766b8d-bd1a-4d28-8415-639b29d3c83d","isOnline":false,"isTunnelerEnabled":false,"isVerified":false,"name":"TestRouter-e33c837f-3222-4b40-bcd6-b3458fd5156e","noTraversal":false,"roleAttributes":["eastCoast","sales","test"],"supportedProtocols":{},"tags":{},"updatedAt":"2020-03-16T17:13:31.5807454Z"}},"edgeRouterList":{"description":"A list of edge router resources","type":"array","items":{"$ref":"#/components/schemas/edgeRouterDetail"}},"edgeRouterPatch":{"description":"An edge router patch object","type":"object","properties":{"appData":{"$ref":"#/components/schemas/tags"},"cost":{"type":"integer","maximum":65535,"minimum":0,"nullable":true},"disabled":{"type":"boolean","nullable":true},"isTunnelerEnabled":{"type":"boolean"},"name":{"type":"string","nullable":true},"noTraversal":{"type":"boolean","nullable":true},"roleAttributes":{"$ref":"#/components/schemas/attributes"},"tags":{"$ref":"#/components/schemas/tags"}}},"edgeRouterPolicyCreate":{"required":["name","semantic"],"properties":{"edgeRouterRoles":{"$ref":"#/components/schemas/roles"},"identityRoles":{"$ref":"#/components/schemas/roles"},"name":{"type":"string"},"semantic":{"$ref":"#/components/schemas/semantic"},"tags":{"$ref":"#/components/schemas/tags"}}},"edgeRouterPolicyDetail":{"type":"object","allOf":[{"$ref":"#/components/schemas/baseEntity"},{"type":"object","required":["name","semantic","edgeRouterRoles","edgeRouterRolesDisplay","identityRoles","identityRolesDisplay","isSystem"],"properties":{"edgeRouterRoles":{"$ref":"#/components/schemas/roles"},"edgeRouterRolesDisplay":{"$ref":"#/components/schemas/namedRoles"},"identityRoles":{"$ref":"#/components/schemas/roles"},"identityRolesDisplay":{"$ref":"#/components/schemas/namedRoles"},"isSystem":{"type":"boolean"},"name":{"type":"string"},"semantic":{"$ref":"#/components/schemas/semantic"}}}]},"edgeRouterPolicyList":{"type":"array","items":{"$ref":"#/components/schemas/edgeRouterPolicyDetail"}},"edgeRouterPolicyPatch":{"properties":{"edgeRouterRoles":{"$ref":"#/components/schemas/roles"},"identityRoles":{"$ref":"#/components/schemas/roles"},"name":{"type":"string"},"semantic":{"$ref":"#/components/schemas/semantic"},"tags":{"$ref":"#/components/schemas/tags"}}},"edgeRouterPolicyUpdate":{"required":["name","semantic"],"properties":{"edgeRouterRoles":{"$ref":"#/components/schemas/roles"},"identityRoles":{"$ref":"#/components/schemas/roles"},"name":{"type":"string"},"semantic":{"$ref":"#/components/schemas/semantic"},"tags":{"$ref":"#/components/schemas/tags"}}},"edgeRouterUpdate":{"description":"An edge router update object","type":"object","required":["name"],"properties":{"appData":{"$ref":"#/components/schemas/tags"},"cost":{"type":"integer","maximum":65535,"minimum":0,"nullable":true},"disabled":{"type":"boolean","nullable":true},"isTunnelerEnabled":{"type":"boolean"},"name":{"type":"string"},"noTraversal":{"type":"boolean","nullable":true},"roleAttributes":{"$ref":"#/components/schemas/attributes"},"tags":{"$ref":"#/components/schemas/tags"}}},"empty":{"type":"object","required":["meta","data"],"properties":{"data":{"type":"object","example":{}},"meta":{"$ref":"#/components/schemas/meta"}}},"enrollmentCreate":{"type":"object","required":["method","expiresAt","identityId"],"properties":{"caId":{"type":"string","nullable":true},"expiresAt":{"type":"string","format":"date-time"},"identityId":{"type":"string"},"method":{"type":"string","enum":["ott","ottca","updb"]},"username":{"type":"string","nullable":true}}},"enrollmentDetail":{"description":"An enrollment object. Enrollments are tied to identities and potentially a CA. Depending on the\\nmethod, different fields are utilized. For example ottca enrollments use the `ca` field and updb enrollments\\nuse the username field, but not vice versa.\\n","type":"object","allOf":[{"$ref":"#/components/schemas/baseEntity"},{"type":"object","required":["token","method","expiresAt","details"],"properties":{"caId":{"type":"string","nullable":true},"edgeRouter":{"$ref":"#/components/schemas/entityRef"},"edgeRouterId":{"type":"string"},"expiresAt":{"type":"string","format":"date-time"},"identity":{"$ref":"#/components/schemas/entityRef"},"identityId":{"type":"string"},"jwt":{"type":"string"},"method":{"type":"string"},"token":{"type":"string"},"transitRouter":{"$ref":"#/components/schemas/entityRef"},"transitRouterId":{"type":"string"},"username":{"type":"string"}}}],"example":{"_links":{"self":{"href":"./enrollments/624fa53f-7629-4a7a-9e38-c1f4ce322c1d"}},"ca":null,"createdAt":"0001-01-01T00:00:00Z","expiresAt":"2020-03-11T20:20:24.0055543Z","id":"624fa53f-7629-4a7a-9e38-c1f4ce322c1d","identity":{"_links":{"self":{"href":"./identities/f047ac96-dc3a-408a-a6f2-0ba487c08ef9"}},"id":"f047ac96-dc3a-408a-a6f2-0ba487c08ef9","name":"updb--0f245140-7f2e-4326-badf-6aba55e52475","urlName":"identities"},"method":"updb","tags":null,"token":"1e727c8f-07e4-4a1d-a8b0-da0c7a01c6e1","updatedAt":"0001-01-01T00:00:00Z","username":"example-username"}},"enrollmentList":{"description":"An array of enrollment resources","type":"array","items":{"$ref":"#/components/schemas/enrollmentDetail"}},"enrollmentRefresh":{"type":"object","required":["expiresAt"],"properties":{"expiresAt":{"type":"string","format":"date-time"}}},"entityRef":{"description":"A reference to another resource and links to interact with it","type":"object","properties":{"_links":{"$ref":"#/components/schemas/links"},"entity":{"type":"string"},"id":{"type":"string"},"name":{"type":"string"}}},"envInfo":{"description":"Environment information an authenticating client may provide","type":"object","properties":{"arch":{"type":"string","maxLength":255},"domain":{"type":"string","maxLength":253},"hostname":{"type":"string","maxLength":253},"os":{"type":"string","maxLength":255},"osRelease":{"type":"string","maxLength":255},"osVersion":{"type":"string","maxLength":255}}},"externalIdClaim":{"type":"object","required":["location","matcher","matcherCriteria","parser","parserCriteria","index"],"properties":{"index":{"type":"integer","nullable":true},"location":{"type":"string","enum":["COMMON_NAME","SAN_URI","SAN_EMAIL"],"nullable":true},"matcher":{"type":"string","enum":["ALL","PREFIX","SUFFIX","SCHEME"],"nullable":true},"matcherCriteria":{"type":"string","nullable":true},"parser":{"type":"string","enum":["NONE","SPLIT"],"nullable":true},"parserCriteria":{"type":"string","nullable":true}}},"externalIdClaimPatch":{"type":"object","properties":{"index":{"type":"integer","nullable":true},"location":{"type":"string","enum":["COMMON_NAME","SAN_URI","SAN_EMAIL"],"nullable":true},"matcher":{"type":"string","enum":["ALL","PREFIX","SUFFIX","SCHEME"],"nullable":true},"matcherCriteria":{"type":"string","nullable":true},"parser":{"type":"string","enum":["NONE","SPLIT"],"nullable":true},"parserCriteria":{"type":"string","nullable":true}}},"externalJwtSignerCreate":{"description":"A create Certificate Authority (CA) object","type":"object","required":["name","enabled","issuer","audience"],"properties":{"audience":{"type":"string","nullable":true},"certPem":{"type":"string","nullable":true},"claimsProperty":{"type":"string","nullable":true},"clientId":{"type":"string","nullable":true},"enabled":{"type":"boolean"},"externalAuthUrl":{"type":"string","format":"url","nullable":true},"issuer":{"type":"string"},"jwksEndpoint":{"type":"string","format":"uri","nullable":true},"kid":{"type":"string","nullable":true},"name":{"type":"string","example":"MyApps Signer"},"scopes":{"type":"array","items":{"type":"string"},"nullable":true},"tags":{"$ref":"#/components/schemas/tags"},"useExternalId":{"type":"boolean","nullable":true}}},"externalJwtSignerDetail":{"description":"A External JWT Signer resource","type":"object","allOf":[{"$ref":"#/components/schemas/baseEntity"},{"type":"object","required":["name","certPem","jwksEndpoint","enabled","fingerprint","commonName","notAfter","notBefore","externalAuthUrl","claimsProperty","useExternalId","kid","issuer","audience","clientId","scopes"],"properties":{"audience":{"type":"string"},"certPem":{"type":"string","nullable":true},"claimsProperty":{"type":"string"},"clientId":{"type":"string"},"commonName":{"type":"string"},"enabled":{"type":"boolean"},"externalAuthUrl":{"type":"string","format":"url"},"fingerprint":{"type":"string"},"issuer":{"type":"string"},"jwksEndpoint":{"type":"string","format":"uri","nullable":true},"kid":{"type":"string"},"name":{"type":"string","example":"MyApps Signer"},"notAfter":{"type":"string","format":"date-time"},"notBefore":{"type":"string","format":"date-time"},"scopes":{"type":"array","items":{"type":"string"}},"useExternalId":{"type":"boolean"}}}]},"externalJwtSignerList":{"description":"An array of External JWT Signers resources","type":"array","items":{"$ref":"#/components/schemas/externalJwtSignerDetail"}},"externalJwtSignerPatch":{"type":"object","properties":{"audience":{"type":"string","nullable":true},"certPem":{"type":"string","nullable":true},"claimsProperty":{"type":"string","nullable":true},"clientId":{"type":"string","nullable":true},"enabled":{"type":"boolean","nullable":true},"externalAuthUrl":{"type":"string","format":"url","nullable":true},"issuer":{"type":"string","nullable":true},"jwksEndpoint":{"type":"string","format":"uri","nullable":true},"kid":{"type":"string","nullable":true},"name":{"type":"string","example":"MyApps Signer","nullable":true},"scopes":{"type":"array","items":{"type":"string"}},"tags":{"$ref":"#/components/schemas/tags"},"useExternalId":{"type":"boolean","nullable":true}}},"externalJwtSignerUpdate":{"type":"object","required":["name","enabled","issuer","audience"],"properties":{"audience":{"type":"string","nullable":true},"certPem":{"type":"string","nullable":true},"claimsProperty":{"type":"string","nullable":true},"clientId":{"type":"string","nullable":true},"enabled":{"type":"boolean"},"externalAuthUrl":{"type":"string","format":"url","nullable":true},"issuer":{"type":"string"},"jwksEndpoint":{"type":"string","format":"uri","nullable":true},"kid":{"type":"string","nullable":true},"name":{"type":"string","example":"MyApps Signer"},"scopes":{"type":"array","items":{"type":"string"},"nullable":true},"tags":{"$ref":"#/components/schemas/tags"},"useExternalId":{"type":"boolean","nullable":true}}},"failedServiceRequest":{"type":"object","properties":{"apiSessionId":{"type":"string"},"policyFailures":{"type":"array","items":{"$ref":"#/components/schemas/policyFailure"}},"serviceId":{"type":"string"},"serviceName":{"type":"string"},"sessionType":{"$ref":"#/components/schemas/dialBind"},"when":{"type":"string","format":"date-time"}}},"failedServiceRequestEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/failedServiceRequestList"},"meta":{"$ref":"#/components/schemas/meta"}}},"failedServiceRequestList":{"type":"array","items":{"$ref":"#/components/schemas/failedServiceRequest"}},"getIdentityPolicyAdviceEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/policyAdvice"},"meta":{"$ref":"#/components/schemas/meta"}}},"identityAuthenticators":{"type":"object","properties":{"cert":{"type":"object","properties":{"fingerprint":{"type":"string"},"id":{"type":"string"}}},"updb":{"type":"object","properties":{"id":{"type":"string"},"username":{"type":"string"}}}}},"identityCreate":{"description":"An identity to create","type":"object","required":["name","type","isAdmin"],"properties":{"appData":{"$ref":"#/components/schemas/tags"},"authPolicyId":{"type":"string","nullable":true},"defaultHostingCost":{"$ref":"#/components/schemas/terminatorCost"},"defaultHostingPrecedence":{"$ref":"#/components/schemas/terminatorPrecedence"},"enrollment":{"type":"object","properties":{"ott":{"type":"boolean"},"ottca":{"type":"string"},"updb":{"type":"string"}}},"externalId":{"type":"string","nullable":true},"isAdmin":{"type":"boolean"},"name":{"type":"string"},"roleAttributes":{"$ref":"#/components/schemas/attributes"},"serviceHostingCosts":{"$ref":"#/components/schemas/terminatorCostMap"},"serviceHostingPrecedences":{"$ref":"#/components/schemas/terminatorPrecedenceMap"},"tags":{"$ref":"#/components/schemas/tags"},"type":{"$ref":"#/components/schemas/identityType"}}},"identityDetail":{"description":"Detail of a specific identity","type":"object","allOf":[{"$ref":"#/components/schemas/baseEntity"},{"type":"object","required":["name","type","typeId","isDefaultAdmin","isAdmin","authenticators","enrollment","envInfo","sdkInfo","roleAttributes","hasEdgeRouterConnection","edgeRouterConnectionStatus","hasApiSession","isMfaEnabled","serviceHostingPrecedences","serviceHostingCosts","defaultHostingCost","authPolicyId","authPolicy","externalId","disabled"],"properties":{"appData":{"$ref":"#/components/schemas/tags"},"authPolicy":{"$ref":"#/components/schemas/entityRef"},"authPolicyId":{"type":"string"},"authenticators":{"$ref":"#/components/schemas/identityAuthenticators"},"defaultHostingCost":{"$ref":"#/components/schemas/terminatorCost"},"defaultHostingPrecedence":{"$ref":"#/components/schemas/terminatorPrecedence"},"disabled":{"type":"boolean"},"disabledAt":{"type":"string","format":"date-time","nullable":true},"disabledUntil":{"type":"string","format":"date-time","nullable":true},"edgeRouterConnectionStatus":{"type":"string","enum":["online","offline","unknown"]},"enrollment":{"$ref":"#/components/schemas/identityEnrollments"},"envInfo":{"$ref":"#/components/schemas/envInfo"},"externalId":{"type":"string","nullable":true},"hasApiSession":{"type":"boolean"},"hasEdgeRouterConnection":{"type":"boolean"},"isAdmin":{"type":"boolean"},"isDefaultAdmin":{"type":"boolean"},"isMfaEnabled":{"type":"boolean"},"name":{"type":"string"},"roleAttributes":{"$ref":"#/components/schemas/attributes"},"sdkInfo":{"$ref":"#/components/schemas/sdkInfo"},"serviceHostingCosts":{"$ref":"#/components/schemas/terminatorCostMap"},"serviceHostingPrecedences":{"$ref":"#/components/schemas/terminatorPrecedenceMap"},"type":{"$ref":"#/components/schemas/entityRef"},"typeId":{"type":"string"}}}]},"identityEnrollments":{"type":"object","properties":{"ott":{"type":"object","properties":{"expiresAt":{"type":"string","format":"date-time"},"id":{"type":"string"},"jwt":{"type":"string"},"token":{"type":"string"}}},"ottca":{"type":"object","properties":{"ca":{"$ref":"#/components/schemas/entityRef"},"caId":{"type":"string"},"expiresAt":{"type":"string","format":"date-time"},"id":{"type":"string"},"jwt":{"type":"string"},"token":{"type":"string"}}},"updb":{"type":"object","properties":{"expiresAt":{"type":"string","format":"date-time"},"id":{"type":"string"},"jwt":{"type":"string"},"token":{"type":"string"}}}}},"identityExtendCerts":{"type":"object","properties":{"ca":{"description":"A PEM encoded set of CA certificates","type":"string"},"clientCert":{"description":"A PEM encoded client certificate","type":"string"}}},"identityExtendEnrollmentEnvelope":{"type":"object","properties":{"data":{"$ref":"#/components/schemas/identityExtendCerts"},"meta":{"$ref":"#/components/schemas/meta"}}},"identityExtendEnrollmentRequest":{"type":"object","required":["clientCertCsr"],"properties":{"clientCertCsr":{"type":"string"}}},"identityExtendValidateEnrollmentRequest":{"type":"object","required":["clientCert"],"properties":{"clientCert":{"description":"A PEM encoded client certificate previously returned after an extension request","type":"string"}}},"identityList":{"description":"A list of identities","type":"array","items":{"$ref":"#/components/schemas/identityDetail"}},"identityPatch":{"type":"object","properties":{"appData":{"$ref":"#/components/schemas/tags"},"authPolicyId":{"type":"string","nullable":true},"defaultHostingCost":{"$ref":"#/components/schemas/terminatorCost"},"defaultHostingPrecedence":{"$ref":"#/components/schemas/terminatorPrecedence"},"externalId":{"type":"string","nullable":true},"isAdmin":{"type":"boolean","nullable":true},"name":{"type":"string","nullable":true},"roleAttributes":{"$ref":"#/components/schemas/attributes"},"serviceHostingCosts":{"$ref":"#/components/schemas/terminatorCostMap"},"serviceHostingPrecedences":{"$ref":"#/components/schemas/terminatorPrecedenceMap"},"tags":{"$ref":"#/components/schemas/tags"},"type":{"$ref":"#/components/schemas/identityType"}}},"identityType":{"type":"string","enum":["User","Device","Service","Router","Default"]},"identityTypeDetail":{"type":"object","allOf":[{"$ref":"#/components/schemas/baseEntity"},{"type":"object","properties":{"name":{"type":"string"}}}]},"identityTypeList":{"type":"array","items":{"$ref":"#/components/schemas/identityTypeDetail"}},"identityUpdate":{"type":"object","required":["type","name","isAdmin"],"properties":{"appData":{"$ref":"#/components/schemas/tags"},"authPolicyId":{"type":"string","nullable":true},"defaultHostingCost":{"$ref":"#/components/schemas/terminatorCost"},"defaultHostingPrecedence":{"$ref":"#/components/schemas/terminatorPrecedence"},"externalId":{"type":"string","nullable":true},"isAdmin":{"type":"boolean"},"name":{"type":"string"},"roleAttributes":{"$ref":"#/components/schemas/attributes"},"serviceHostingCosts":{"$ref":"#/components/schemas/terminatorCostMap"},"serviceHostingPrecedences":{"$ref":"#/components/schemas/terminatorPrecedenceMap"},"tags":{"$ref":"#/components/schemas/tags"},"type":{"$ref":"#/components/schemas/identityType"}}},"link":{"description":"A link to another resource","type":"object","required":["href"],"properties":{"comment":{"type":"string"},"href":{"type":"string","format":"uri"},"method":{"type":"string"}}},"links":{"description":"A map of named links","type":"object","additionalProperties":{"$ref":"#/components/schemas/link"},"x-omitempty":false},"listApiSessionsEnvelope":{"required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/apiSessionList"},"meta":{"$ref":"#/components/schemas/meta"}}},"listAuthPoliciesEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/authPolicyList"},"meta":{"$ref":"#/components/schemas/meta"}}},"listAuthenticatorsEnvelope":{"type":"object","properties":{"data":{"$ref":"#/components/schemas/authenticatorList"},"meta":{"$ref":"#/components/schemas/meta"}}},"listCasEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/caList"},"meta":{"$ref":"#/components/schemas/meta"}}},"listConfigTypesEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/configTypeList"},"meta":{"$ref":"#/components/schemas/meta"}}},"listConfigsEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/configList"},"meta":{"$ref":"#/components/schemas/meta"}}},"listControllersEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/controllersList"},"meta":{"$ref":"#/components/schemas/meta"}}},"listEdgeRouterPoliciesEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/edgeRouterPolicyList"},"meta":{"$ref":"#/components/schemas/meta"}}},"listEdgeRoutersEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/edgeRouterList"},"meta":{"$ref":"#/components/schemas/meta"}}},"listEnrollmentsEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/enrollmentList"},"meta":{"$ref":"#/components/schemas/meta"}}},"listEnumeratedCapabilitiesEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"type":"array","items":{"$ref":"#/components/schemas/capabilities"}},"meta":{"$ref":"#/components/schemas/meta"}}},"listExternalJwtSignersEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/externalJwtSignerList"},"meta":{"$ref":"#/components/schemas/meta"}}},"listIdentitiesEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/identityList"},"meta":{"$ref":"#/components/schemas/meta"}}},"listIdentityTypesEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/identityTypeList"},"meta":{"$ref":"#/components/schemas/meta"}}},"listNetworkJWTsEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/networkJWTList"},"meta":{"$ref":"#/components/schemas/meta"}}},"listPostureCheckEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"type":"array","items":{"$ref":"#/components/schemas/postureCheckDetail"}},"meta":{"$ref":"#/components/schemas/meta"}}},"listPostureCheckTypesEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/postureCheckTypeList"},"meta":{"$ref":"#/components/schemas/meta"}}},"listRoleAttributesEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/roleAttributesList"},"meta":{"$ref":"#/components/schemas/meta"}}},"listRoutersEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/routerList"},"meta":{"$ref":"#/components/schemas/meta"}}},"listServiceConfigsEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/serviceConfigList"},"meta":{"$ref":"#/components/schemas/meta"}}},"listServiceEdgeRouterPoliciesEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/serviceEdgeRouterPolicyList"},"meta":{"$ref":"#/components/schemas/meta"}}},"listServicePoliciesEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/servicePolicyList"},"meta":{"$ref":"#/components/schemas/meta"}}},"listServicesEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/serviceList"},"meta":{"$ref":"#/components/schemas/meta"}}},"listSessionsManagementEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/sessionManagementList"},"meta":{"$ref":"#/components/schemas/meta"}}},"listSpecsEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/specList"},"meta":{"$ref":"#/components/schemas/meta"}}},"listSummaryCounts":{"type":"object","additionalProperties":{"type":"integer"}},"listSummaryCountsEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/listSummaryCounts"},"meta":{"$ref":"#/components/schemas/meta"}}},"listTerminatorsEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/terminatorList"},"meta":{"$ref":"#/components/schemas/meta"}}},"listVersionEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/version"},"meta":{"$ref":"#/components/schemas/meta"}}},"meta":{"type":"object","properties":{"apiEnrollmentVersion":{"type":"string"},"apiVersion":{"type":"string"},"filterableFields":{"type":"array","items":{"type":"string"},"x-omitempty":true},"pagination":{"$ref":"#/components/schemas/pagination"}}},"mfaCode":{"type":"object","required":["code"],"properties":{"code":{"type":"string"}}},"mfaFormats":{"type":"string","enum":["numeric","alpha","alphaNumeric"]},"mfaProviders":{"type":"string","enum":["ziti","url"]},"namedRole":{"type":"object","properties":{"name":{"type":"string"},"role":{"type":"string"}}},"namedRoles":{"type":"array","items":{"$ref":"#/components/schemas/namedRole"},"x-omitempty":false},"networkJWT":{"description":"A network JWT","type":"object","allOf":[{"type":"object","required":["name","token"],"properties":{"name":{"type":"string"},"token":{"type":"string"}}}]},"networkJWTList":{"description":"An array of network JWTs","type":"array","items":{"$ref":"#/components/schemas/networkJWT"}},"operatingSystem":{"type":"object","required":["type","versions"],"properties":{"type":{"$ref":"#/components/schemas/osType"},"versions":{"type":"array","items":{"type":"string"}}}},"osType":{"type":"string","enum":["Windows","WindowsServer","Android","iOS","Linux","macOS"]},"pagination":{"type":"object","required":["limit","offset","totalCount"],"properties":{"limit":{"type":"number","format":"int64"},"offset":{"type":"number","format":"int64"},"totalCount":{"type":"number","format":"int64"}}},"password":{"type":"string","maxLength":100,"minLength":5},"passwordNullable":{"type":"string","maxLength":100,"minLength":5,"nullable":true},"policyAdvice":{"type":"object","properties":{"commonRouters":{"type":"array","items":{"$ref":"#/components/schemas/routerEntityRef"}},"identity":{"$ref":"#/components/schemas/entityRef"},"identityId":{"type":"string"},"identityRouterCount":{"type":"number","format":"int32"},"isBindAllowed":{"type":"boolean"},"isDialAllowed":{"type":"boolean"},"service":{"$ref":"#/components/schemas/entityRef"},"serviceId":{"type":"string"},"serviceRouterCount":{"type":"number","format":"int32"}}},"policyFailure":{"type":"object","properties":{"checks":{"type":"array","items":{"$ref":"#/components/schemas/postureCheckFailure"}},"policyId":{"type":"string"},"policyName":{"type":"string"}}},"postureCheckCreate":{"type":"object","required":["name","typeId"],"properties":{"name":{"type":"string"},"roleAttributes":{"$ref":"#/components/schemas/attributes"},"tags":{"$ref":"#/components/schemas/tags"},"typeId":{"$ref":"#/components/schemas/postureCheckType"}},"discriminator":{"propertyName":"typeId"}},"postureCheckDetail":{"type":"object","required":["name","typeId","version","roleAttributes","id","createdAt","updatedAt","_links","tags"],"properties":{"_links":{"$ref":"#/components/schemas/links"},"createdAt":{"type":"string","format":"date-time"},"id":{"type":"string"},"name":{"type":"string"},"roleAttributes":{"$ref":"#/components/schemas/attributes"},"tags":{"$ref":"#/components/schemas/tags"},"typeId":{"type":"string"},"updatedAt":{"type":"string","format":"date-time"},"version":{"type":"integer"}},"discriminator":{"propertyName":"typeId"}},"postureCheckDomainCreate":{"allOf":[{"$ref":"#/components/schemas/postureCheckCreate"},{"type":"object","required":["domains"],"properties":{"domains":{"type":"array","minItems":1,"items":{"type":"string"}}}}],"x-class":"DOMAIN"},"postureCheckDomainDetail":{"allOf":[{"$ref":"#/components/schemas/postureCheckDetail"},{"type":"object","required":["domains"],"properties":{"domains":{"type":"array","minItems":1,"items":{"type":"string"}}}}],"x-class":"DOMAIN"},"postureCheckDomainPatch":{"allOf":[{"$ref":"#/components/schemas/postureCheckPatch"},{"type":"object","properties":{"domains":{"type":"array","minItems":1,"items":{"type":"string"}}}}],"x-class":"DOMAIN"},"postureCheckDomainUpdate":{"allOf":[{"$ref":"#/components/schemas/postureCheckUpdate"},{"type":"object","required":["domains"],"properties":{"domains":{"type":"array","minItems":1,"items":{"type":"string"}}}}],"x-class":"DOMAIN"},"postureCheckFailure":{"type":"object","required":["postureCheckId","postureCheckName","postureCheckType"],"properties":{"postureCheckId":{"type":"string"},"postureCheckName":{"type":"string"},"postureCheckType":{"type":"string"}},"discriminator":{"propertyName":"postureCheckType"}},"postureCheckFailureDomain":{"allOf":[{"$ref":"#/components/schemas/postureCheckFailure"},{"type":"object","required":["actualValue","expectedValue"],"properties":{"actualValue":{"type":"string"},"expectedValue":{"type":"array","items":{"type":"string"}}}}],"x-class":"DOMAIN"},"postureCheckFailureMacAddress":{"allOf":[{"$ref":"#/components/schemas/postureCheckFailure"},{"type":"object","required":["actualValue","expectedValue"],"properties":{"actualValue":{"type":"array","items":{"type":"string"}},"expectedValue":{"type":"array","items":{"type":"string"}}}}],"x-class":"MAC"},"postureCheckFailureMfa":{"allOf":[{"$ref":"#/components/schemas/postureCheckFailure"},{"type":"object","required":["actualValue","expectedValue","criteria"],"properties":{"actualValue":{"$ref":"#/components/schemas/postureChecksFailureMfaValues"},"criteria":{"$ref":"#/components/schemas/postureChecksFailureMfaCriteria"},"expectedValue":{"$ref":"#/components/schemas/postureChecksFailureMfaValues"}}}],"x-class":"MFA"},"postureCheckFailureOperatingSystem":{"allOf":[{"$ref":"#/components/schemas/postureCheckFailure"},{"type":"object","required":["actualValue","expectedValue"],"properties":{"actualValue":{"$ref":"#/components/schemas/postureCheckFailureOperatingSystemActual"},"expectedValue":{"type":"array","minItems":1,"items":{"$ref":"#/components/schemas/operatingSystem"}}}}],"x-class":"OS"},"postureCheckFailureOperatingSystemActual":{"type":"object","required":["type","version"],"properties":{"type":{"type":"string"},"version":{"type":"string"}}},"postureCheckFailureProcess":{"allOf":[{"$ref":"#/components/schemas/postureCheckFailure"},{"type":"object","required":["actualValue","expectedValue"],"properties":{"actualValue":{"$ref":"#/components/schemas/postureCheckFailureProcessActual"},"expectedValue":{"$ref":"#/components/schemas/process"}}}],"x-class":"PROCESS"},"postureCheckFailureProcessActual":{"type":"object","required":["isRunning","hash","signerFingerprints"],"properties":{"hash":{"type":"string"},"isRunning":{"type":"boolean"},"osType":{"$ref":"#/components/schemas/osType"},"path":{"type":"string"},"signerFingerprints":{"type":"array","items":{"type":"string"}}}},"postureCheckFailureProcessMulti":{"allOf":[{"$ref":"#/components/schemas/postureCheckFailure"},{"type":"object","required":["actualValue","expectedValue","semantic"],"properties":{"actualValue":{"type":"array","items":{"$ref":"#/components/schemas/postureCheckFailureProcessActual"}},"expectedValue":{"type":"array","items":{"$ref":"#/components/schemas/processMulti"}},"semantic":{"$ref":"#/components/schemas/semantic"}}}],"x-class":"PROCESS_MULTI"},"postureCheckMacAddressCreate":{"allOf":[{"$ref":"#/components/schemas/postureCheckCreate"},{"type":"object","required":["macAddresses"],"properties":{"macAddresses":{"type":"array","minItems":1,"items":{"type":"string"}}}}],"x-class":"MAC"},"postureCheckMacAddressDetail":{"allOf":[{"$ref":"#/components/schemas/postureCheckDetail"},{"type":"object","required":["macAddresses"],"properties":{"macAddresses":{"type":"array","minItems":1,"items":{"type":"string"}}}}],"x-class":"MAC"},"postureCheckMacAddressPatch":{"allOf":[{"$ref":"#/components/schemas/postureCheckPatch"},{"type":"object","properties":{"macAddresses":{"type":"array","minItems":1,"items":{"type":"string"}}}}],"x-class":"MAC"},"postureCheckMacAddressUpdate":{"allOf":[{"$ref":"#/components/schemas/postureCheckUpdate"},{"type":"object","required":["macAddresses"],"properties":{"macAddresses":{"type":"array","minItems":1,"items":{"type":"string"}}}}],"x-class":"MAC"},"postureCheckMfaCreate":{"allOf":[{"$ref":"#/components/schemas/postureCheckCreate"},{"$ref":"#/components/schemas/postureCheckMfaProperties"}],"x-class":"MFA"},"postureCheckMfaDetail":{"allOf":[{"$ref":"#/components/schemas/postureCheckDetail"},{"$ref":"#/components/schemas/postureCheckMfaProperties"}],"x-class":"MFA"},"postureCheckMfaPatch":{"allOf":[{"$ref":"#/components/schemas/postureCheckPatch"},{"$ref":"#/components/schemas/postureCheckMfaPropertiesPatch"}],"x-class":"MFA"},"postureCheckMfaProperties":{"type":"object","properties":{"ignoreLegacyEndpoints":{"type":"boolean"},"promptOnUnlock":{"type":"boolean"},"promptOnWake":{"type":"boolean"},"timeoutSeconds":{"type":"integer"}}},"postureCheckMfaPropertiesPatch":{"type":"object","properties":{"ignoreLegacyEndpoints":{"type":"boolean","nullable":true},"promptOnUnlock":{"type":"boolean","nullable":true},"promptOnWake":{"type":"boolean","nullable":true},"timeoutSeconds":{"type":"integer","nullable":true}}},"postureCheckMfaUpdate":{"allOf":[{"$ref":"#/components/schemas/postureCheckUpdate"},{"$ref":"#/components/schemas/postureCheckMfaProperties"}],"x-class":"MFA"},"postureCheckOperatingSystemCreate":{"allOf":[{"$ref":"#/components/schemas/postureCheckCreate"},{"type":"object","required":["operatingSystems"],"properties":{"operatingSystems":{"type":"array","minItems":1,"items":{"$ref":"#/components/schemas/operatingSystem"}}}}],"x-class":"OS"},"postureCheckOperatingSystemDetail":{"allOf":[{"$ref":"#/components/schemas/postureCheckDetail"},{"type":"object","required":["operatingSystems"],"properties":{"operatingSystems":{"type":"array","items":{"$ref":"#/components/schemas/operatingSystem"}}}}],"x-class":"OS"},"postureCheckOperatingSystemPatch":{"allOf":[{"$ref":"#/components/schemas/postureCheckPatch"},{"type":"object","properties":{"operatingSystems":{"type":"array","minItems":1,"items":{"$ref":"#/components/schemas/operatingSystem"}}}}],"x-class":"OS"},"postureCheckOperatingSystemUpdate":{"allOf":[{"$ref":"#/components/schemas/postureCheckUpdate"},{"type":"object","required":["operatingSystems"],"properties":{"operatingSystems":{"type":"array","minItems":1,"items":{"$ref":"#/components/schemas/operatingSystem"}}}}],"x-class":"OS"},"postureCheckPatch":{"type":"object","required":["typeId"],"properties":{"name":{"type":"string"},"roleAttributes":{"$ref":"#/components/schemas/attributes"},"tags":{"$ref":"#/components/schemas/tags"},"typeId":{"$ref":"#/components/schemas/postureCheckType"}},"discriminator":{"propertyName":"typeId"}},"postureCheckProcessCreate":{"allOf":[{"$ref":"#/components/schemas/postureCheckCreate"},{"type":"object","required":["process"],"properties":{"process":{"$ref":"#/components/schemas/process"}}}],"x-class":"PROCESS"},"postureCheckProcessDetail":{"allOf":[{"$ref":"#/components/schemas/postureCheckDetail"},{"type":"object","required":["process"],"properties":{"process":{"$ref":"#/components/schemas/process"}}}],"x-class":"PROCESS"},"postureCheckProcessMultiCreate":{"allOf":[{"$ref":"#/components/schemas/postureCheckCreate"},{"type":"object","required":["semantic","processes"],"properties":{"processes":{"type":"array","minItems":1,"items":{"$ref":"#/components/schemas/processMulti"}},"semantic":{"$ref":"#/components/schemas/semantic"}}}],"x-class":"PROCESS_MULTI"},"postureCheckProcessMultiDetail":{"allOf":[{"$ref":"#/components/schemas/postureCheckDetail"},{"type":"object","required":["semantic","processes"],"properties":{"processes":{"type":"array","minItems":1,"items":{"$ref":"#/components/schemas/processMulti"}},"semantic":{"$ref":"#/components/schemas/semantic"}}}],"x-class":"PROCESS_MULTI"},"postureCheckProcessMultiPatch":{"allOf":[{"$ref":"#/components/schemas/postureCheckPatch"},{"type":"object","properties":{"processes":{"type":"array","minItems":1,"items":{"$ref":"#/components/schemas/processMulti"}},"semantic":{"$ref":"#/components/schemas/semantic"}}}],"x-class":"PROCESS_MULTI"},"postureCheckProcessMultiUpdate":{"allOf":[{"$ref":"#/components/schemas/postureCheckUpdate"},{"type":"object","required":["semantic","processes"],"properties":{"processes":{"type":"array","minItems":1,"items":{"$ref":"#/components/schemas/processMulti"}},"semantic":{"$ref":"#/components/schemas/semantic"}}}],"x-class":"PROCESS_MULTI"},"postureCheckProcessPatch":{"allOf":[{"$ref":"#/components/schemas/postureCheckPatch"},{"type":"object","properties":{"process":{"$ref":"#/components/schemas/process"}}}],"x-class":"PROCESS"},"postureCheckProcessUpdate":{"allOf":[{"$ref":"#/components/schemas/postureCheckUpdate"},{"type":"object","required":["process"],"properties":{"process":{"$ref":"#/components/schemas/process"}}}],"x-class":"PROCESS"},"postureCheckType":{"type":"string","enum":["OS","PROCESS","DOMAIN","MAC","MFA","PROCESS_MULTI"]},"postureCheckTypeDetail":{"allOf":[{"$ref":"#/components/schemas/baseEntity"},{"type":"object","required":["name","operatingSystems","version"],"properties":{"name":{"type":"string"},"operatingSystems":{"type":"array","items":{"$ref":"#/components/schemas/operatingSystem"}},"version":{"type":"string"}}}]},"postureCheckTypeList":{"type":"array","items":{"$ref":"#/components/schemas/postureCheckTypeDetail"}},"postureCheckUpdate":{"type":"object","required":["name"],"properties":{"name":{"type":"string"},"roleAttributes":{"$ref":"#/components/schemas/attributes"},"tags":{"$ref":"#/components/schemas/tags"},"typeId":{"$ref":"#/components/schemas/postureCheckType"}},"discriminator":{"propertyName":"typeId"}},"postureChecksFailureMfaCriteria":{"type":"object","required":["passedMfaAt","wokenAt","unlockedAt","timeoutSeconds","timeoutRemainingSeconds"],"properties":{"passedMfaAt":{"type":"string","format":"date-time"},"timeoutRemainingSeconds":{"type":"integer"},"timeoutSeconds":{"type":"integer"},"unlockedAt":{"type":"string","format":"date-time"},"wokenAt":{"type":"string","format":"date-time"}}},"postureChecksFailureMfaValues":{"type":"object","properties":{"passedMfa":{"type":"boolean","x-omitempty":false},"passedOnUnlock":{"type":"boolean","x-omitempty":false},"passedOnWake":{"type":"boolean","x-omitempty":false},"timedOut":{"type":"boolean","x-omitempty":false}}},"postureData":{"type":"object","required":["mac","domain","os","processes","apiSessionPostureData"],"properties":{"apiSessionPostureData":{"type":"object","additionalProperties":{"$ref":"#/components/schemas/apiSessionPostureData"}},"domain":{"$ref":"#/components/schemas/postureDataDomain"},"mac":{"$ref":"#/components/schemas/postureDataMac"},"os":{"$ref":"#/components/schemas/postureDataOs"},"processes":{"type":"array","items":{"$ref":"#/components/schemas/postureDataProcess"}}}},"postureDataBase":{"type":"object","required":["postureCheckId","timedOut","lastUpdatedAt"],"properties":{"lastUpdatedAt":{"type":"string","format":"date-time"},"postureCheckId":{"type":"string"},"timedOut":{"type":"boolean"}}},"postureDataDomain":{"type":"object","allOf":[{"$ref":"#/components/schemas/postureDataBase"},{"type":"object","required":["domain"],"properties":{"domain":{"type":"string"}}}]},"postureDataEndpointState":{"type":"object","required":["wokenAt","unlockedAt"],"properties":{"unlockedAt":{"type":"string","format":"date-time"},"wokenAt":{"type":"string","format":"date-time"}}},"postureDataEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/postureData"},"meta":{"$ref":"#/components/schemas/meta"}}},"postureDataMac":{"type":"object","allOf":[{"$ref":"#/components/schemas/postureDataBase"},{"type":"object","required":["addresses"],"properties":{"addresses":{"type":"array","items":{"type":"string"}}}}]},"postureDataMfa":{"type":"object","required":["apiSessionId","passedMfa","passedOnWake","passedOnUnlock","passedAt"],"properties":{"apiSessionId":{"type":"string"},"passedAt":{"type":"string","format":"date-time","x-omitempty":false},"passedMfa":{"type":"boolean","x-omitempty":false},"passedOnUnlock":{"type":"boolean","x-omitempty":false},"passedOnWake":{"type":"boolean","x-omitempty":false}}},"postureDataOs":{"type":"object","allOf":[{"$ref":"#/components/schemas/postureDataBase"},{"type":"object","required":["type","version","build"],"properties":{"build":{"type":"string"},"type":{"type":"string"},"version":{"type":"string"}}}]},"postureDataProcess":{"type":"object","allOf":[{"$ref":"#/components/schemas/postureDataBase"},{"type":"object","properties":{"binaryHash":{"type":"string"},"isRunning":{"type":"boolean"},"signerFingerprints":{"type":"array","items":{"type":"string"}}}}]},"postureQueries":{"type":"object","required":["policyId","isPassing","postureQueries"],"properties":{"isPassing":{"type":"boolean"},"policyId":{"type":"string"},"policyType":{"$ref":"#/components/schemas/dialBind"},"postureQueries":{"type":"array","items":{"$ref":"#/components/schemas/postureQuery"}}}},"postureQuery":{"type":"object","allOf":[{"$ref":"#/components/schemas/baseEntity"},{"type":"object","required":["queryType","isPassing","timeout","timeoutRemaining"],"properties":{"isPassing":{"type":"boolean"},"process":{"$ref":"#/components/schemas/postureQueryProcess"},"processes":{"type":"array","items":{"$ref":"#/components/schemas/postureQueryProcess"}},"queryType":{"$ref":"#/components/schemas/postureCheckType"},"timeout":{"type":"integer"},"timeoutRemaining":{"type":"integer"}}}]},"postureQueryProcess":{"type":"object","properties":{"osType":{"$ref":"#/components/schemas/osType"},"path":{"type":"string"}}},"process":{"type":"object","required":["osType","path"],"properties":{"hashes":{"type":"array","items":{"type":"string"}},"osType":{"$ref":"#/components/schemas/osType"},"path":{"type":"string"},"signerFingerprint":{"type":"string"}}},"processMulti":{"type":"object","required":["osType","path"],"properties":{"hashes":{"type":"array","items":{"type":"string"}},"osType":{"$ref":"#/components/schemas/osType"},"path":{"type":"string"},"signerFingerprints":{"type":"array","items":{"type":"string"}}}},"reEnroll":{"type":"object","required":["expiresAt"],"properties":{"expiresAt":{"type":"string","format":"date-time"}}},"roleAttributesList":{"description":"An array of role attributes","type":"array","items":{"type":"string"}},"roles":{"type":"array","items":{"type":"string"},"x-omitempty":false},"routerCreate":{"type":"object","required":["name"],"properties":{"cost":{"type":"integer","maximum":65535,"minimum":0,"nullable":true},"disabled":{"type":"boolean","nullable":true},"name":{"type":"string"},"noTraversal":{"type":"boolean","nullable":true},"tags":{"$ref":"#/components/schemas/tags"}}},"routerDetail":{"type":"object","allOf":[{"$ref":"#/components/schemas/baseEntity"},{"type":"object","required":["name","isVerified","isOnline","fingerprint","cost","noTraversal","disabled"],"properties":{"cost":{"type":"integer","maximum":65535,"minimum":0},"disabled":{"type":"boolean"},"enrollmentCreatedAt":{"type":"string","format":"date-time","nullable":true},"enrollmentExpiresAt":{"type":"string","format":"date-time","nullable":true},"enrollmentJwt":{"type":"string","nullable":true},"enrollmentToken":{"type":"string","nullable":true},"fingerprint":{"type":"string"},"isOnline":{"type":"boolean"},"isVerified":{"type":"boolean"},"name":{"type":"string"},"noTraversal":{"type":"boolean"},"unverifiedCertPem":{"type":"string","x-omitempty":false,"nullable":true},"unverifiedFingerprint":{"type":"string","x-omitempty":false,"nullable":true}}}]},"routerEntityRef":{"type":"object","allOf":[{"$ref":"#/components/schemas/entityRef"},{"type":"object","required":["isOnline"],"properties":{"isOnline":{"type":"boolean"}}}]},"routerList":{"type":"array","items":{"$ref":"#/components/schemas/routerDetail"}},"routerPatch":{"type":"object","properties":{"cost":{"type":"integer","maximum":65535,"minimum":0,"nullable":true},"disabled":{"type":"boolean","nullable":true},"name":{"type":"string"},"noTraversal":{"type":"boolean","nullable":true},"tags":{"$ref":"#/components/schemas/tags"}}},"routerUpdate":{"type":"object","required":["name"],"properties":{"cost":{"type":"integer","maximum":65535,"minimum":0,"nullable":true},"disabled":{"type":"boolean","nullable":true},"name":{"type":"string"},"noTraversal":{"type":"boolean","nullable":true},"tags":{"$ref":"#/components/schemas/tags"}}},"sdkInfo":{"description":"SDK information an authenticating client may provide","type":"object","properties":{"appId":{"type":"string","maxLength":255},"appVersion":{"type":"string","maxLength":255},"branch":{"type":"string","maxLength":255},"revision":{"type":"string","maxLength":255},"type":{"type":"string","maxLength":255},"version":{"type":"string","maxLength":255}}},"semantic":{"type":"string","enum":["AllOf","AnyOf"]},"serviceConfigAssign":{"type":"object","required":["serviceId","configId"],"properties":{"configId":{"type":"string"},"serviceId":{"type":"string"}}},"serviceConfigDetail":{"type":"object","required":["serviceId","service","configId","config"],"properties":{"config":{"$ref":"#/components/schemas/entityRef"},"configId":{"type":"string"},"service":{"$ref":"#/components/schemas/entityRef"},"serviceId":{"type":"string"}},"example":{"config":{"_links":{"self":{"href":"./identities/13347602-ba34-4ff7-8082-e533ba945744"}},"id":"13347602-ba34-4ff7-8082-e533ba945744","name":"test-config-02fade09-fcc3-426c-854e-18539726bdc6","urlName":"configs"},"service":{"_links":{"self":{"href":"./services/913a8c63-17a6-44d7-82b3-9f6eb997cf8e"}},"id":"913a8c63-17a6-44d7-82b3-9f6eb997cf8e","name":"netcat4545-egress-r2","urlName":"services"}}},"serviceConfigList":{"type":"array","items":{"$ref":"#/components/schemas/serviceConfigDetail"}},"serviceConfigsAssignList":{"type":"array","items":{"$ref":"#/components/schemas/serviceConfigAssign"}},"serviceCreate":{"type":"object","required":["name","encryptionRequired"],"properties":{"configs":{"type":"array","items":{"type":"string"}},"encryptionRequired":{"description":"Describes whether connections must support end-to-end encryption on both sides of the connection.","type":"boolean"},"maxIdleTimeMillis":{"type":"integer"},"name":{"type":"string"},"roleAttributes":{"type":"array","items":{"type":"string"}},"tags":{"$ref":"#/components/schemas/tags"},"terminatorStrategy":{"type":"string"}}},"serviceDetail":{"type":"object","allOf":[{"$ref":"#/components/schemas/baseEntity"},{"type":"object","required":["name","maxIdleTimeMillis","terminatorStrategy","roleAttributes","permissions","configs","config","encryptionRequired","postureQueries"],"properties":{"config":{"description":"map of config data for this service keyed by the config type name. Only configs of the types requested will be returned.","type":"object","additionalProperties":{"type":"object","additionalProperties":{"type":"object"}}},"configs":{"type":"array","items":{"type":"string"}},"encryptionRequired":{"description":"Describes whether connections must support end-to-end encryption on both sides of the connection. Read-only property, set at create.","type":"boolean"},"maxIdleTimeMillis":{"type":"integer"},"name":{"type":"string"},"permissions":{"$ref":"#/components/schemas/dialBindArray"},"postureQueries":{"type":"array","items":{"$ref":"#/components/schemas/postureQueries"}},"roleAttributes":{"$ref":"#/components/schemas/attributes"},"terminatorStrategy":{"type":"string"}}}]},"serviceEdgeRouterPolicyCreate":{"type":"object","required":["name","semantic"],"properties":{"edgeRouterRoles":{"$ref":"#/components/schemas/roles"},"name":{"type":"string"},"semantic":{"$ref":"#/components/schemas/semantic"},"serviceRoles":{"$ref":"#/components/schemas/roles"},"tags":{"$ref":"#/components/schemas/tags"}}},"serviceEdgeRouterPolicyDetail":{"type":"object","allOf":[{"$ref":"#/components/schemas/baseEntity"},{"type":"object","required":["name","semantic","edgeRouterRoles","edgeRouterRolesDisplay","serviceRoles","serviceRolesDisplay"],"properties":{"edgeRouterRoles":{"$ref":"#/components/schemas/roles"},"edgeRouterRolesDisplay":{"$ref":"#/components/schemas/namedRoles"},"name":{"type":"string"},"semantic":{"$ref":"#/components/schemas/semantic"},"serviceRoles":{"$ref":"#/components/schemas/roles"},"serviceRolesDisplay":{"$ref":"#/components/schemas/namedRoles"}}}]},"serviceEdgeRouterPolicyList":{"type":"array","items":{"$ref":"#/components/schemas/serviceEdgeRouterPolicyDetail"}},"serviceEdgeRouterPolicyPatch":{"type":"object","properties":{"edgeRouterRoles":{"$ref":"#/components/schemas/roles"},"name":{"type":"string"},"semantic":{"$ref":"#/components/schemas/semantic"},"serviceRoles":{"$ref":"#/components/schemas/roles"},"tags":{"$ref":"#/components/schemas/tags"}}},"serviceEdgeRouterPolicyUpdate":{"type":"object","required":["name","semantic"],"properties":{"edgeRouterRoles":{"$ref":"#/components/schemas/roles"},"name":{"type":"string"},"semantic":{"$ref":"#/components/schemas/semantic"},"serviceRoles":{"$ref":"#/components/schemas/roles"},"tags":{"$ref":"#/components/schemas/tags"}}},"serviceList":{"type":"array","items":{"$ref":"#/components/schemas/serviceDetail"}},"servicePatch":{"type":"object","properties":{"configs":{"type":"array","items":{"type":"string"}},"encryptionRequired":{"description":"Describes whether connections must support end-to-end encryption on both sides of the connection. Read-only property, set at create.","type":"boolean"},"maxIdleTimeMillis":{"type":"integer"},"name":{"type":"string"},"roleAttributes":{"type":"array","items":{"type":"string"}},"tags":{"$ref":"#/components/schemas/tags"},"terminatorStrategy":{"type":"string"}}},"servicePolicyCreate":{"type":"object","required":["name","type","semantic"],"properties":{"identityRoles":{"$ref":"#/components/schemas/roles"},"name":{"type":"string"},"postureCheckRoles":{"$ref":"#/components/schemas/roles"},"semantic":{"$ref":"#/components/schemas/semantic"},"serviceRoles":{"$ref":"#/components/schemas/roles"},"tags":{"$ref":"#/components/schemas/tags"},"type":{"$ref":"#/components/schemas/dialBind"}}},"servicePolicyDetail":{"type":"object","allOf":[{"$ref":"#/components/schemas/baseEntity"},{"type":"object","required":["name","type","semantic","serviceRoles","serviceRolesDisplay","identityRoles","identityRolesDisplay","postureCheckRoles","postureCheckRolesDisplay"],"properties":{"identityRoles":{"$ref":"#/components/schemas/roles"},"identityRolesDisplay":{"$ref":"#/components/schemas/namedRoles"},"name":{"type":"string"},"postureCheckRoles":{"$ref":"#/components/schemas/roles"},"postureCheckRolesDisplay":{"$ref":"#/components/schemas/namedRoles"},"semantic":{"$ref":"#/components/schemas/semantic"},"serviceRoles":{"$ref":"#/components/schemas/roles"},"serviceRolesDisplay":{"$ref":"#/components/schemas/namedRoles"},"type":{"$ref":"#/components/schemas/dialBind"}}}]},"servicePolicyList":{"type":"array","items":{"$ref":"#/components/schemas/servicePolicyDetail"}},"servicePolicyPatch":{"type":"object","properties":{"identityRoles":{"$ref":"#/components/schemas/roles"},"name":{"type":"string"},"postureCheckRoles":{"$ref":"#/components/schemas/roles"},"semantic":{"$ref":"#/components/schemas/semantic"},"serviceRoles":{"$ref":"#/components/schemas/roles"},"tags":{"$ref":"#/components/schemas/tags"},"type":{"$ref":"#/components/schemas/dialBind"}}},"servicePolicyUpdate":{"type":"object","required":["name","type","semantic"],"properties":{"identityRoles":{"$ref":"#/components/schemas/roles"},"name":{"type":"string"},"postureCheckRoles":{"$ref":"#/components/schemas/roles"},"semantic":{"$ref":"#/components/schemas/semantic"},"serviceRoles":{"$ref":"#/components/schemas/roles"},"tags":{"$ref":"#/components/schemas/tags"},"type":{"$ref":"#/components/schemas/dialBind"}}},"serviceUpdate":{"type":"object","required":["name"],"properties":{"configs":{"type":"array","items":{"type":"string"}},"encryptionRequired":{"description":"Describes whether connections must support end-to-end encryption on both sides of the connection. Read-only property, set at create.","type":"boolean"},"maxIdleTimeMillis":{"type":"integer"},"name":{"type":"string"},"roleAttributes":{"type":"array","items":{"type":"string"}},"tags":{"$ref":"#/components/schemas/tags"},"terminatorStrategy":{"type":"string"}}},"sessionDetail":{"type":"object","allOf":[{"$ref":"#/components/schemas/baseEntity"},{"type":"object","required":["type","apiSessionId","apiSession","serviceId","service","token","edgeRouters","identityId"],"properties":{"apiSession":{"$ref":"#/components/schemas/entityRef"},"apiSessionId":{"type":"string"},"edgeRouters":{"type":"array","items":{"$ref":"#/components/schemas/sessionEdgeRouter"}},"identityId":{"type":"string"},"service":{"$ref":"#/components/schemas/entityRef"},"serviceId":{"type":"string"},"token":{"type":"string"},"type":{"$ref":"#/components/schemas/dialBind"}}}]},"sessionEdgeRouter":{"allOf":[{"$ref":"#/components/schemas/commonEdgeRouterProperties"},{"type":"object","required":["urls"],"properties":{"urls":{"type":"object","additionalProperties":{"type":"string"}}}}]},"sessionManagementDetail":{"allOf":[{"$ref":"#/components/schemas/sessionDetail"},{"type":"object","properties":{"servicePolicies":{"type":"array","items":{"$ref":"#/components/schemas/entityRef"}}}}]},"sessionManagementList":{"type":"array","items":{"$ref":"#/components/schemas/sessionManagementDetail"}},"sessionRoutePathDetail":{"type":"object","properties":{"routePath":{"type":"array","items":{"type":"string"}}}},"specBodyDetail":{"type":"string"},"specDetail":{"type":"object","allOf":[{"$ref":"#/components/schemas/baseEntity"},{"type":"object","required":["name"],"properties":{"name":{"type":"string"}}}]},"specList":{"type":"array","items":{"$ref":"#/components/schemas/specDetail"}},"subTags":{"type":"object","additionalProperties":{"type":"object"}},"tags":{"description":"A map of user defined fields and values. The values are limited to the following types/values: null, string, boolean","allOf":[{"$ref":"#/components/schemas/subTags"}],"nullable":true},"terminatorCost":{"type":"integer","maximum":65535,"minimum":0},"terminatorCostMap":{"type":"object","additionalProperties":{"$ref":"#/components/schemas/terminatorCost"}},"terminatorCreate":{"type":"object","required":["service","router","address","binding"],"properties":{"address":{"type":"string"},"binding":{"type":"string"},"cost":{"$ref":"#/components/schemas/terminatorCost"},"identity":{"type":"string"},"identitySecret":{"type":"string","format":"byte"},"precedence":{"$ref":"#/components/schemas/terminatorPrecedence"},"router":{"type":"string"},"service":{"type":"string"},"tags":{"$ref":"#/components/schemas/tags"}}},"terminatorDetail":{"type":"object","allOf":[{"$ref":"#/components/schemas/baseEntity"},{"type":"object","required":["serviceId","service","routerId","router","binding","address","identity","cost","precedence","dynamicCost"],"properties":{"address":{"type":"string"},"binding":{"type":"string"},"cost":{"$ref":"#/components/schemas/terminatorCost"},"dynamicCost":{"$ref":"#/components/schemas/terminatorCost"},"identity":{"type":"string"},"precedence":{"$ref":"#/components/schemas/terminatorPrecedence"},"router":{"$ref":"#/components/schemas/entityRef"},"routerId":{"type":"string"},"service":{"$ref":"#/components/schemas/entityRef"},"serviceId":{"type":"string"}}}]},"terminatorList":{"type":"array","items":{"$ref":"#/components/schemas/terminatorDetail"}},"terminatorPatch":{"type":"object","properties":{"address":{"type":"string"},"binding":{"type":"string"},"cost":{"$ref":"#/components/schemas/terminatorCost"},"precedence":{"$ref":"#/components/schemas/terminatorPrecedence"},"router":{"type":"string"},"service":{"type":"string"},"tags":{"$ref":"#/components/schemas/tags"}}},"terminatorPrecedence":{"type":"string","enum":["default","required","failed"]},"terminatorPrecedenceMap":{"type":"object","additionalProperties":{"$ref":"#/components/schemas/terminatorPrecedence"}},"terminatorUpdate":{"type":"object","required":["service","router","address","binding"],"properties":{"address":{"type":"string"},"binding":{"type":"string"},"cost":{"$ref":"#/components/schemas/terminatorCost"},"precedence":{"$ref":"#/components/schemas/terminatorPrecedence"},"router":{"type":"string"},"service":{"type":"string"},"tags":{"$ref":"#/components/schemas/tags"}}},"traceDetail":{"type":"object","properties":{"enabled":{"type":"boolean"},"traceId":{"type":"string"},"until":{"type":"string","format":"date-time"}}},"traceDetailEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/components/schemas/traceDetail"},"meta":{"$ref":"#/components/schemas/meta"}}},"traceSpec":{"type":"object","properties":{"channels":{"type":"array","items":{"type":"string"}},"duration":{"type":"string"},"enabled":{"type":"boolean"},"traceId":{"type":"string"}}},"username":{"type":"string","maxLength":100,"minLength":4},"usernameNullable":{"type":"string","maxLength":100,"minLength":4,"nullable":true},"version":{"type":"object","properties":{"apiVersions":{"type":"object","additionalProperties":{"type":"object","additionalProperties":{"$ref":"#/components/schemas/apiVersion"}}},"buildDate":{"type":"string","example":"2020-02-11 16:09:08"},"capabilities":{"type":"array","items":{"type":"string"}},"revision":{"type":"string","example":"ea556fc18740"},"runtimeVersion":{"type":"string","example":"go1.13.5"},"version":{"type":"string","example":"v0.9.0"}}},"versionInfo":{"type":"object","required":["os","version","arch","buildDate","revision"],"properties":{"arch":{"type":"string"},"buildDate":{"type":"string"},"os":{"type":"string"},"revision":{"type":"string"},"version":{"type":"string"}}}}}},"bundle":{"consumes":["application/json"],"produces":["application/json"],"schemes":["https"],"swagger":"2.0","info":{"description":"OpenZiti Edge Management API","title":"Ziti Edge Management","contact":{"name":"OpenZiti","url":"https://openziti.discourse.group","email":"help@openziti.org"},"license":{"name":"Apache 2.0","url":"https://www.apache.org/licenses/LICENSE-2.0.html"},"version":"0.26.35"},"host":"demo.ziti.dev","basePath":"/edge/management/v1","paths":{"/":{"get":{"security":[],"tags":["Informational"],"summary":"Returns version information","operationId":"listRoot","responses":{"200":{"description":"Version information for the controller","schema":{"$ref":"#/definitions/listVersionEnvelope"}}}}},"/.well-known/est/cacerts":{"get":{"security":[],"description":"This endpoint is used during enrollments to bootstrap trust between enrolling clients and the Ziti Edge API.\\nThis endpoint returns a base64 encoded PKCS7 store. The content can be base64 decoded and parsed by any library\\nthat supports parsing PKCS7 stores.\\n","produces":["application/pkcs7-mime"],"tags":["Well Known"],"summary":"Get CA Cert Store","operationId":"listWellKnownCas","responses":{"200":{"description":"A base64 encoded PKCS7 store","schema":{"type":"string","example":"MIIMUQYJKoZIhvcNAQcCoIIMQjCCDD4CAQExADALBgkqhkiG9w0BBwGgggwkMIIG\\nBjCCA+6gAwIBAgICEAAwDQYJKoZIhvcNAQELBQAwgZcxCzAJBgNVBAYTAlVTMRcw\\nFQYDVQQIDA5Ob3J0aCBDYXJvbGluYTESMBAGA1UEBwwJQ2hhcmxvdHRlMRMwEQYD\\nVQQKDApOZXRGb3VuZHJ5MSkwJwYDVQQLDCBOZXRGb3VuZHJ5IENlcnRpZmljYXRl\\nIEF1dGhvcml0eTEbMBkGA1UEAwwSTmV0Rm91bmRyeSBSb290IENBMB4XDTE4MDUx\\nODE2NTcyM1oXDTI4MDUxNTE2NTcyM1owgYsxCzAJBgNVBAYTAlVTMRcwFQYDVQQI\\nDA5Ob3J0aCBDYXJvbGluYTETMBEGA1UECgwKTmV0Rm91bmRyeTEpMCcGA1UECwwg\\nTmV0Rm91bmRyeSBDZXJ0aWZpY2F0ZSBBdXRob3JpdHkxIzAhBgNVBAMMGk5ldEZv\\ndW5kcnkgSW50ZXJtZWRpYXRlIENBMIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIIC\\nCgKCAgEAsb1EPhMUweS9WpjT7L54xAOmZqugJ6fhSrFfLUwNUy172q+ASvZTpT1z\\nKIPcZpGmPB3TX2bHaAR67BbRkUR11JgWE3U8+FsGrYmPZtaKM6fg8Mh0WZ41oMYQ\\nNJyQixOktrgqfybyJoT5PeT5AA7QQmd8mku2X9nkAu6gWPf2nHNc7SeQdijmyQQa\\nVK3oqyaxOzWzsU/XbfMEz/ObkefUxgt5Z6jlK0xcW0Q+QgtawMKLUiuo6obWRPcl\\n7Hm9Sze8XJS5pbvS5JkUszxoRZuDVHZylrlHIpA/IL+BnvS+M7SP28UWe9skrv/s\\n6ACpJtuPJ1EYf5fakugOpY7i+hq7YNi//csbc49Qjn2OtttrR7JcTaHUEU1I/tQb\\nQGAtNkI4pJjRVUdDawQFQlWHZD1COixNLErs2HzAI00DhLrY6SKITI/kjN0Xx010\\nXdMcdfay0PLWm6RwxiRmMQFL4GNIC895NF1q6xV4W4rWgqUNlcvKpy+i1chWpRbU\\nHe16ul0qh10fcESrRvAbXn5YrQJLrwbSr+85ubN8lYdNLE0qg2cIXZlUilarZZzW\\nghtCe+KkUpjfRuAi/CqfSwNK3QXEfeVEK6S49mHeSekOizFIw7fmDhCz9vXwMOnb\\nryRSLEJks0gIRcSDVChXheAqC98y4kcQdniNWFnqJXoqA+rrSokCAwEAAaNmMGQw\\nHQYDVR0OBBYEFK8UXC/sq6dGVFAqEXHsQDzqzwuUMB8GA1UdIwQYMBaAFEHz6RRu\\nOuXj2mwAzOeUinfWeivpMBIGA1UdEwEB/wQIMAYBAf8CAQAwDgYDVR0PAQH/BAQD\\nAgGGMA0GCSqGSIb3DQEBCwUAA4ICAQBDAAaOE2Nbb49eOjyTNxIeOB+ZKQjJ1hUE\\ngRrootAA8NYbtKW/vyxTWnNi5XOGXd4DFS9OKZ0mL/7NyLc0mbTwPH2ZT8KTPUTS\\nCpo6yktZ/7TMjyAtWZiOMg2EH+6m/nlNSXk/v5fb8+JQLdZfpxoA017dHh3tc8l7\\nKOskCZNwQHgF/YMXrPXUNbsGkXRuJLtpjPw5O9GvPys7p+a1aJH1WCTly9zfB6j+\\nrMF+UGCPDT30sxitVlohik83j6pKLgEAP/gi8nJbILlTP7ce+gJeHR2tfDvmK91X\\n6QgCF2STUFBU7/9H1/pPRRykOxQpAd8xqSgqGEyp9Ie4tysZjwoUEnG8IVJ5ykrI\\nFximvnb4B+LABV9WEo08n8m1R8wEryrISi8fBPn3Pr5nuayOfFLa15CLTkZF40FN\\n8ika1qNZy8bWRDwTZJQUUb7VCheRWcMwdZdNmhl3J+VZLpQ+ruW7b2ajwacHz5Nw\\nBHKNcmxXb/4vHq/BnlcayHnSqT6036+OZQ+owDegcYmWV6LaM7xLErjHz2EE38M2\\nYSiW5SU1zluDe+iHb6l3Gd3Fj/X1gkMWFgYh0XPMSUSyimLNYzy4THKzmWlcQNFo\\nLLiIDbLrMt+vk+vBkIsNTTPXRJOFPBhmIF6uIUj+2YhzNotX/pQtqMKms3pPlmHq\\ndH6biwygETCCBhYwggP+oAMCAQICCQDquKpymLJ5WzANBgkqhkiG9w0BAQsFADCB\\nlzELMAkGA1UEBhMCVVMxFzAVBgNVBAgMDk5vcnRoIENhcm9saW5hMRIwEAYDVQQH\\nDAlDaGFybG90dGUxEzARBgNVBAoMCk5ldEZvdW5kcnkxKTAnBgNVBAsMIE5ldEZv\\ndW5kcnkgQ2VydGlmaWNhdGUgQXV0aG9yaXR5MRswGQYDVQQDDBJOZXRGb3VuZHJ5\\nIFJvb3QgQ0EwHhcNMTgwNTE4MTY1NDQ3WhcNMzgwNTEzMTY1NDQ3WjCBlzELMAkG\\nA1UEBhMCVVMxFzAVBgNVBAgMDk5vcnRoIENhcm9saW5hMRIwEAYDVQQHDAlDaGFy\\nbG90dGUxEzARBgNVBAoMCk5ldEZvdW5kcnkxKTAnBgNVBAsMIE5ldEZvdW5kcnkg\\nQ2VydGlmaWNhdGUgQXV0aG9yaXR5MRswGQYDVQQDDBJOZXRGb3VuZHJ5IFJvb3Qg\\nQ0EwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQDKq/Xa+749Cr3WJGYD\\nDIEtNKIRnTFc6TeiRSm/O7hG2+1Nrh/dObjZJuDjsopWP8NFA/DwlNyEphYKAeSw\\nHDmu+4nFd6ifoeDE2lYq6bNhLcgN+A3MlN5Phb2rnO32YYZwHXGWov+jtd2gaK0f\\nWsH8CQxn6n2v7qvPMTeYFP8p4jqTZw2bvZWw+LMYTFCy541DFqQLQasMg10mXRAV\\nXO7Oa9y+D1re1zLq4wS6u8ItJoKzfmvZkMvD90C/tQ4u0iJaL7GB2SE9MOPDeGVv\\npnoSAIkSVmvRDUAj2x9PuukykzoL1OAWzc5Cg+5LxRmLejVE7PvPcHaTtNag2tRD\\nw2vbMeFKN8NvQH1QYcaPWZe4Vl9b6DAuTaH5RN919H/F+ZHyjZybVPwC14lflneI\\nKyNy8JEV/YMIbEADWnuiedzDehk2Opn+0+9Zr2X/xfjCo8iWHFbNaVnQX7wdRaOo\\n783lEouncqe46FDBLBpyAuDKHQpIT3MK8rkC/1yBNxsH44vMweUZuK0u7PC9KHtm\\npQfuflYGfxA34kY6WU3jzyQHetoLYjoxTqNEEjuGpwy2o1j7RaCBEFIbYlnlbhpE\\nWFTaQf96z2GQ6m1U3y7JyDflHSu9Fo1JNkG3qXsjDwda/6W7NRJRgdFrhnOwrm7F\\n6L9X4P1HnzU/VJL66LwPmiHVjQIDAQABo2MwYTAdBgNVHQ4EFgQUQfPpFG465ePa\\nbADM55SKd9Z6K+kwHwYDVR0jBBgwFoAUQfPpFG465ePabADM55SKd9Z6K+kwDwYD\\nVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAYYwDQYJKoZIhvcNAQELBQADggIB\\nACfU74aKWROaxnue8tZb5PFkEbnDRcRrKXRhnptA0vrgB4ydnYxX9hEBZD8o6PBy\\n3rewvl5meSOBE6zyb4JD80lHdzHSVFIwbzsNOeEjCslv/PA/3Y+J7DCt6gPNMDeY\\nuEssdqeSiMoYz2gnven4flSMKgTAJd3/SpVrn35HzXiU9MkmFVpPEMnTctOjw+Jn\\ncCkG5+D9N14dxtgZ/tUfbH+GUfhyGVxRdPrX5KQqAyapMfEaMXXa8KNs7PG+sDiS\\nWI+Sg9jUGtxgkfKdVNtFW+QMXyy7eT3iXPA+1r2hFAhgfIaGtBJUhxPHMhKtjbAg\\nAX+6+2D3GAbaD1+lcQHhKry3hygQ3OX79FJW6zyPS0tiV/LfovHqX/3x9q5PTVBO\\nwEOS2/LCc4R2M7S+HIPf4eSJ+nH4uCIdJ42WCror/mRsuL7geCksi70GHuCynP4y\\nqQFszu/UtbBEsN8loTnLpOInxaGB1Y8UPm14b2Lo1/3HkoMVh0/UaHJ0TmnZ1r7m\\nfGhfRyAZYRdvT1sB+Eb4b5A2zEZqsTc9IwFOhnI4ZilPoZ5s2xejqrVw3GSvovEh\\ndprrQmvxuh+VQ23y/+/4z9b2xWyDu2zVveB4whqPe2rkgxJrEl4GfLk2DW+dN6j8\\n3Zl4lPoUZYwzkC6raCaHyFlAoaTbqz0H6rvVJYxJPS6UoQAxAA==\\n"}}}}},"/api-sessions":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Returns a list of active API sessions. The resources can be sorted, filtered, and paginated. This endpoint\\nrequires admin access.\\n","produces":["application/json; charset=utf-8"],"tags":["API Session"],"summary":"List active API sessions","operationId":"listAPISessions","parameters":[{"type":"integer","name":"limit","in":"query"},{"type":"integer","name":"offset","in":"query"},{"type":"string","name":"filter","in":"query"}],"responses":{"200":{"description":"A list of active API Sessions","schema":{"$ref":"#/definitions/listApiSessionsEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"/api-sessions/{id}":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a single API Session by id. Requires admin access.","tags":["API Session"],"summary":"Retrieves a single API Session","operationId":"detailAPISessions","responses":{"200":{"description":"Retrieves a singular API Session by id","schema":{"$ref":"#/definitions/detailApiSessionEnvelope"}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"delete":{"security":[{"ztSession":[]}],"description":"Deletes and API sesion by id. Requires admin access.","tags":["API Session"],"summary":"Deletes an API Sessions","operationId":"deleteAPISessions","responses":{"200":{"description":"The delete request was successful and the resource has been removed","schema":{"$ref":"#/definitions/empty"}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"403":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/auth-policies":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of Auth Policies","tags":["Auth Policy"],"summary":"List Auth Policies","operationId":"listAuthPolicies","parameters":[{"type":"integer","name":"limit","in":"query"},{"type":"integer","name":"offset","in":"query"},{"type":"string","name":"filter","in":"query"}],"responses":{"200":{"description":"A list of Auth Policies","schema":{"$ref":"#/definitions/listAuthPoliciesEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Creates an Auth Policy. Requires admin access.","tags":["Auth Policy"],"summary":"Creates an Auth Policy","operationId":"createAuthPolicy","parameters":[{"description":"An Auth Policy to create","name":"authPolicy","in":"body","required":true,"schema":{"$ref":"#/definitions/authPolicyCreate"}}],"responses":{"201":{"description":"The create request was successful and the resource has been added at the following location","schema":{"$ref":"#/definitions/createEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"/auth-policies/{id}":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a single Auth Policy by id. Requires admin access.","tags":["Auth Policy"],"summary":"Retrieves a single Auth Policy","operationId":"detailAuthPolicy","responses":{"200":{"description":"A singular Auth Policy resource","schema":{"$ref":"#/definitions/detailAuthPolicyEnvelope"}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"put":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update all fields on an Auth Policy by id. Requires admin access.","tags":["Auth Policy"],"summary":"Update all fields on an Auth Policy","operationId":"updateAuthPolicy","parameters":[{"description":"An Auth Policy update object","name":"authPolicy","in":"body","required":true,"schema":{"$ref":"#/definitions/authPolicyUpdate"}}],"responses":{"200":{"description":"The update request was successful and the resource has been altered","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"delete":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Delete an Auth Policy by id. Requires admin access.\\n","tags":["Auth Policy"],"summary":"Delete an Auth Policy","operationId":"deleteAuthPolicy","responses":{"200":{"description":"The delete request was successful and the resource has been removed","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"patch":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update only the supplied fields on an Auth Policy by id. Requires admin access.","tags":["Auth Policy"],"summary":"Update the supplied fields on an Auth Policy","operationId":"patchAuthPolicy","parameters":[{"description":"An Auth Policy patch object","name":"authPolicy","in":"body","required":true,"schema":{"$ref":"#/definitions/authPolicyPatch"}}],"responses":{"200":{"description":"The patch request was successful and the resource has been altered","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/authenticate":{"post":{"security":[],"description":"Allowed authentication methods include \\"password\\", \\"cert\\", and \\"ext-jwt\\"\\n","tags":["Authentication"],"summary":"Authenticate via a method supplied via a query string parameter","operationId":"authenticate","parameters":[{"name":"auth","in":"body","schema":{"$ref":"#/definitions/authenticate"}}],"responses":{"200":{"description":"The API session associated with the session used to issue the request","schema":{"$ref":"#/definitions/currentApiSessionDetailEnvelope"},"examples":{"default":{"data":{"_links":{"self":{"href":"./current-api-session"}},"configTypes":[],"createdAt":"2020-03-09T19:03:49.1883693Z","expiresAt":"2020-03-09T19:34:21.5600897Z","id":"27343114-b44f-406e-9981-f3c4f2f28d54","identity":{"_links":{"self":{"href":"./identities/66352d7b-a6b2-4ce9-85bb-9f18e318704d"}},"id":"66352d7b-a6b2-4ce9-85bb-9f18e318704d","name":"Default Admin","urlName":"identities"},"tags":[{"userField1":123},{"userField2":"asdf"}],"token":"28bb0ed2-0577-4632-ae70-d17106b92871","updatedAt":"2020-03-09T19:04:21.5600897Z"},"meta":{}}}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The authentication request could not be processed as the credentials are invalid","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"INVALID_AUTH","message":"The authentication request failed","requestId":"5952ed10-3091-474f-a691-47ebab6990dc"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"enum":["password","cert","ext-jwt"],"type":"string","name":"method","in":"query","required":true}]},"/authenticate/mfa":{"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Completes MFA authentication by submitting a MFA time based one time token or backup code.","tags":["Authentication","MFA"],"summary":"Complete MFA authentication","operationId":"authenticateMfa","parameters":[{"description":"An MFA validation request","name":"mfaAuth","in":"body","required":true,"schema":{"$ref":"#/definitions/mfaCode"}}],"responses":{"200":{"description":"Base empty response","schema":{"$ref":"#/definitions/empty"}},"401":{"description":"Base empty response","schema":{"$ref":"#/definitions/empty"}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"/authenticators":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Returns a list of authenticators associated to identities. The resources can be sorted, filtered, and paginated.\\nThis endpoint requires admin access.\\n","tags":["Authenticator"],"summary":"List authenticators","operationId":"listAuthenticators","parameters":[{"type":"integer","name":"limit","in":"query"},{"type":"integer","name":"offset","in":"query"},{"type":"string","name":"filter","in":"query"}],"responses":{"200":{"description":"A list of authenticators","schema":{"$ref":"#/definitions/listAuthenticatorsEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Creates an authenticator for a specific identity. Requires admin access.\\n","tags":["Authenticator"],"summary":"Creates an authenticator","operationId":"createAuthenticator","parameters":[{"description":"A Authenticator create object","name":"authenticator","in":"body","required":true,"schema":{"$ref":"#/definitions/authenticatorCreate"}}],"responses":{"201":{"description":"The create request was successful and the resource has been added at the following location","schema":{"$ref":"#/definitions/createEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"/authenticators/{id}":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a single authenticator by id. Requires admin access.","tags":["Authenticator"],"summary":"Retrieves a single authenticator","operationId":"detailAuthenticator","responses":{"200":{"description":"A singular authenticator resource","schema":{"$ref":"#/definitions/detailAuthenticatorEnvelope"}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"put":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update all fields on an authenticator by id. Requires admin access.","tags":["Authenticator"],"summary":"Update all fields on an authenticator","operationId":"updateAuthenticator","parameters":[{"description":"An authenticator put object","name":"authenticator","in":"body","required":true,"schema":{"$ref":"#/definitions/authenticatorUpdate"}}],"responses":{"200":{"description":"The update request was successful and the resource has been altered","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"delete":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Delete an authenticator by id. Deleting all authenticators for an identity will make it impossible to log in.\\nRequires admin access.\\n","tags":["Authenticator"],"summary":"Delete an Authenticator","operationId":"deleteAuthenticator","responses":{"200":{"description":"The delete request was successful and the resource has been removed","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"patch":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update the supplied fields on an authenticator by id. Requires admin access.","tags":["Authenticator"],"summary":"Update the supplied fields on an authenticator","operationId":"patchAuthenticator","parameters":[{"description":"An authenticator patch object","name":"authenticator","in":"body","required":true,"schema":{"$ref":"#/definitions/authenticatorPatch"}}],"responses":{"200":{"description":"The patch request was successful and the resource has been altered","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/authenticators/{id}/re-enroll":{"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Allows an authenticator to be reverted to an enrollment and allows re-enrollment to occur. On success the \\ncreated enrollment record response is provided and the source authenticator record will be deleted. The \\nenrollment created depends on the authenticator. UPDB authenticators result in UPDB enrollments, CERT\\nauthenticators result in OTT enrollments, CERT + CA authenticators result in OTTCA enrollments.\\n","tags":["Authenticator"],"summary":"Reverts an authenticator to an enrollment","operationId":"reEnrollAuthenticator","parameters":[{"description":"A reEnrollment request","name":"reEnroll","in":"body","required":true,"schema":{"$ref":"#/definitions/reEnroll"}}],"responses":{"201":{"description":"The create request was successful and the resource has been added at the following location","schema":{"$ref":"#/definitions/createEnvelope"}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/cas":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of CA resources; supports filtering, sorting, and pagination. Requires admin access.","tags":["Certificate Authority"],"summary":"List CAs","operationId":"listCas","parameters":[{"type":"integer","name":"limit","in":"query"},{"type":"integer","name":"offset","in":"query"},{"type":"string","name":"filter","in":"query"}],"responses":{"200":{"description":"A list of Certificate Authorities (CAs)","schema":{"$ref":"#/definitions/listCasEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Creates a CA in an unverified state. Requires admin access.","tags":["Certificate Authority"],"summary":"Creates a CA","operationId":"createCa","parameters":[{"description":"A CA to create","name":"ca","in":"body","required":true,"schema":{"$ref":"#/definitions/caCreate"}}],"responses":{"201":{"description":"The create request was successful and the resource has been added at the following location","schema":{"$ref":"#/definitions/createEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"/cas/{id}":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a single CA by id. Requires admin access.","tags":["Certificate Authority"],"summary":"Retrieves a single CA","operationId":"detailCa","responses":{"200":{"description":"A singular Certificate Authority (CA) resource","schema":{"$ref":"#/definitions/detailCaEnvelope"}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"put":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update all fields on a CA by id. Requires admin access.","tags":["Certificate Authority"],"summary":"Update all fields on a CA","operationId":"updateCa","parameters":[{"description":"A CA update object","name":"ca","in":"body","required":true,"schema":{"$ref":"#/definitions/caUpdate"}}],"responses":{"200":{"description":"The update request was successful and the resource has been altered","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"delete":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Delete a CA by id. Deleting a CA will delete its associated certificate authenticators. This can make it\\nimpossible for identities to authenticate if they no longer have any valid authenticators. Requires admin access.\\n","tags":["Certificate Authority"],"summary":"Delete a CA","operationId":"deleteCa","responses":{"200":{"description":"The delete request was successful and the resource has been removed","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"patch":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update only the supplied fields on a CA by id. Requires admin access.","tags":["Certificate Authority"],"summary":"Update the supplied fields on a CA","operationId":"patchCa","parameters":[{"description":"A CA patch object","name":"ca","in":"body","required":true,"schema":{"$ref":"#/definitions/caPatch"}}],"responses":{"200":{"description":"The patch request was successful and the resource has been altered","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/cas/{id}/jwt":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"For CA auto enrollment, the enrollment JWT is static and provided on each CA resource. This endpoint provides\\nthe jwt as a text response.\\n","produces":["application/jwt"],"tags":["Certificate Authority"],"summary":"Retrieve the enrollment JWT for a CA","operationId":"getCaJwt","responses":{"200":{"description":"The result is the JWT text to validate the CA","schema":{"type":"string"},"examples":{"application/jwt":"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbSI6ImNhIiwiaXNzIjoiaHR0cHM6Ly9sb2NhbGhvc3Q6MTI 4MC8ifQ.Ot6lhNBSOw8ygHytdI5l7WDf9EWadOj44UPvJ0c-8mJ54fClWM3uMZrAHSSfV6KmOSZOeBBJe4VlNyoD-_MOECP0BzYSnSQP3E zJb0VlM-fFmGcKNGW157icyZNISfO43JL_Lw2QPBzTgikqSIj9eZnocC3BeAmZCHsVznnLfHWqDldcmuxnu-5MNOSrWV1x9iVcgLFlLHXK 2PLA4qIiZmlQTrQjpHJmUaoJ07mnj8hMKzxB3wBG8kpazjEo7HDRCO06aBH4eqFgf_l0iT8Dzcb31jquWMGUoSXPhf4lVJh_FiNcR1wVx- UiHLbG5h23Aqf1UJF-F38rc1FElKz0Zg"}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/cas/{id}/verify":{"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Allows a CA to become verified by submitting a certificate in PEM format that has been signed by the target CA.\\nThe common name on the certificate must match the verificationToken property of the CA. Unverfieid CAs can not\\nbe used for enrollment/authentication. Requires admin access.\\n","consumes":["text/plain"],"tags":["Certificate Authority"],"summary":"Verify a CA","operationId":"verifyCa","parameters":[{"description":"A PEM formatted certificate signed by the target CA with the common name matching the CA\'s validationToken","name":"certificate","in":"body","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Base empty response","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/config-types":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of config-type resources; supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Config"],"summary":"List config-types","operationId":"listConfigTypes","parameters":[{"type":"integer","name":"limit","in":"query"},{"type":"integer","name":"offset","in":"query"},{"type":"string","name":"filter","in":"query"}],"responses":{"200":{"description":"A list of config-types","schema":{"$ref":"#/definitions/listConfigTypesEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"tags":["Config"],"summary":"Create a config-type. Requires admin access.","operationId":"createConfigType","parameters":[{"description":"A config-type to create","name":"configType","in":"body","required":true,"schema":{"$ref":"#/definitions/configTypeCreate"}}],"responses":{"201":{"description":"The create request was successful and the resource has been added at the following location","schema":{"$ref":"#/definitions/createEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"/config-types/{id}":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a single config-type by id. Requires admin access.","tags":["Config"],"summary":"Retrieves a single config-type","operationId":"detailConfigType","responses":{"200":{"description":"A singular config-type resource","schema":{"$ref":"#/definitions/detailConfigTypeEnvelope"}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"put":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update all fields on a config-type by id. Requires admin access.","tags":["Config"],"summary":"Update all fields on a config-type","operationId":"updateConfigType","parameters":[{"description":"A config-type update object","name":"configType","in":"body","required":true,"schema":{"$ref":"#/definitions/configTypeUpdate"}}],"responses":{"200":{"description":"The update request was successful and the resource has been altered","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"delete":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Delete a config-type by id. Removing a configuration type that are in use will result in a 409 conflict HTTP status code and error. All configurations of a type must be removed first.","tags":["Config"],"summary":"Delete a config-type","operationId":"deleteConfigType","responses":{"200":{"description":"The delete request was successful and the resource has been removed","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"409":{"description":"The resource requested to be removed/altered cannot be as it is referenced by another object.","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"causeMessage":"referenced by /some-resource/05f4f710-c155-4a74-86d5-77558eb9cb42","code":"CONFLICT_CANNOT_MODIFY_REFERENCED","message":"The resource cannot be deleted/modified. Remove all referencing resources first.","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"patch":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update the supplied fields on a config-type. Requires admin access.","tags":["Config"],"summary":"Update the supplied fields on a config-type","operationId":"patchConfigType","parameters":[{"description":"A config-type patch object","name":"configType","in":"body","required":true,"schema":{"$ref":"#/definitions/configTypePatch"}}],"responses":{"200":{"description":"The patch request was successful and the resource has been altered","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/config-types/{id}/configs":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Lists the configs associated to a config-type. Requires admin access.","tags":["Config"],"summary":"Lists the configs of a specific config-type","operationId":"listConfigsForConfigType","responses":{"200":{"description":"A list of configs","schema":{"$ref":"#/definitions/listConfigsEnvelope"}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/configs":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of config resources; supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Config"],"summary":"List configs","operationId":"listConfigs","parameters":[{"type":"integer","name":"limit","in":"query"},{"type":"integer","name":"offset","in":"query"},{"type":"string","name":"filter","in":"query"}],"responses":{"200":{"description":"A list of configs","schema":{"$ref":"#/definitions/listConfigsEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Create a config resource. Requires admin access.","tags":["Config"],"summary":"Create a config resource","operationId":"createConfig","parameters":[{"description":"A config to create","name":"config","in":"body","required":true,"schema":{"$ref":"#/definitions/configCreate"}}],"responses":{"201":{"description":"The create request was successful and the resource has been added at the following location","schema":{"$ref":"#/definitions/createEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"/configs/{id}":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a single config by id. Requires admin access.","tags":["Config"],"summary":"Retrieves a single config","operationId":"detailConfig","responses":{"200":{"description":"A singular config resource","schema":{"$ref":"#/definitions/detailConfigEnvelope"}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"put":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update all fields on a config by id. Requires admin access.","tags":["Config"],"summary":"Update all fields on a config","operationId":"updateConfig","parameters":[{"description":"A config update object","name":"config","in":"body","required":true,"schema":{"$ref":"#/definitions/configUpdate"}}],"responses":{"200":{"description":"The update request was successful and the resource has been altered","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"delete":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Delete a config by id. Requires admin access.","tags":["Config"],"summary":"Delete a config","operationId":"deleteConfig","responses":{"200":{"description":"The delete request was successful and the resource has been removed","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"409":{"description":"The resource requested to be removed/altered cannot be as it is referenced by another object.","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"causeMessage":"referenced by /some-resource/05f4f710-c155-4a74-86d5-77558eb9cb42","code":"CONFLICT_CANNOT_MODIFY_REFERENCED","message":"The resource cannot be deleted/modified. Remove all referencing resources first.","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"patch":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update the supplied fields on a config. Requires admin access.","tags":["Config"],"summary":"Update the supplied fields on a config","operationId":"patchConfig","parameters":[{"description":"A config patch object","name":"config","in":"body","required":true,"schema":{"$ref":"#/definitions/configPatch"}}],"responses":{"200":{"description":"The patch request was successful and the resource has been altered","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/configs/{id}/services":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of service resources that reference a given config; supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Config"],"summary":"List services referenced by a config","operationId":"listConfigServices","parameters":[{"type":"integer","name":"limit","in":"query"},{"type":"integer","name":"offset","in":"query"},{"type":"string","name":"filter","in":"query"}],"responses":{"200":{"description":"A list of services","schema":{"$ref":"#/definitions/listServicesEnvelope"}},"400":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/controllers":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of controllers","tags":["Controllers"],"summary":"List controllers","operationId":"listControllers","parameters":[{"type":"integer","name":"limit","in":"query"},{"type":"integer","name":"offset","in":"query"},{"type":"string","name":"filter","in":"query"}],"responses":{"200":{"description":"A list of controllers","schema":{"$ref":"#/definitions/listControllersEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"/current-api-session":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves the API session that was used to issue the current request","tags":["Current API Session"],"summary":"Return the current API session","operationId":"getCurrentAPISession","responses":{"200":{"description":"The API session associated with the session used to issue the request","schema":{"$ref":"#/definitions/currentApiSessionDetailEnvelope"},"examples":{"default":{"data":{"_links":{"self":{"href":"./current-api-session"}},"configTypes":[],"createdAt":"2020-03-09T19:03:49.1883693Z","expiresAt":"2020-03-09T19:34:21.5600897Z","id":"27343114-b44f-406e-9981-f3c4f2f28d54","identity":{"_links":{"self":{"href":"./identities/66352d7b-a6b2-4ce9-85bb-9f18e318704d"}},"id":"66352d7b-a6b2-4ce9-85bb-9f18e318704d","name":"Default Admin","urlName":"identities"},"tags":[{"userField1":123},{"userField2":"asdf"}],"token":"28bb0ed2-0577-4632-ae70-d17106b92871","updatedAt":"2020-03-09T19:04:21.5600897Z"},"meta":{}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"delete":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Terminates the current API session","tags":["Current API Session"],"summary":"Logout","responses":{"200":{"description":"Base empty response","schema":{"$ref":"#/definitions/empty"}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"/current-identity":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Returns the identity associated with the API sessions used to issue the current request","tags":["Current Identity"],"summary":"Return the current identity","operationId":"getCurrentIdentity","responses":{"200":{"description":"The identity associated with the API Session used to issue the request","schema":{"$ref":"#/definitions/currentIdentityDetailEnvelope"},"examples":{"default":{"data":{"_links":{"edge-router-policies":{"href":"./identities/66352d7b-a6b2-4ce9-85bb-9f18e318704d/edge-routers"},"self":{"href":"./identities/66352d7b-a6b2-4ce9-85bb-9f18e318704d"},"service-policies":{"href":"./identities/66352d7b-a6b2-4ce9-85bb-9f18e318704d/identities"}},"authenticators":{"updb":{"username":"admin"}},"createdAt":"2020-01-13T16:38:13.6854788Z","enrollment":{},"id":"66352d7b-a6b2-4ce9-85bb-9f18e318704d","isAdmin":true,"isDefaultAdmin":true,"name":"Default Admin","roleAttributes":[],"tags":{},"type":{"_links":{"self":{"href":"./identity-types/User"}},"id":"User","name":"User","urlName":"identity-types"},"updatedAt":"2020-01-13T16:38:13.6854788Z"},"meta":{}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"/current-identity/authenticators":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of authenticators assigned to the current API session\'s identity; supports filtering, sorting, and pagination.","tags":["Current API Session"],"summary":"List authenticators for the current identity","operationId":"listCurrentIdentityAuthenticators","parameters":[{"type":"integer","name":"limit","in":"query"},{"type":"integer","name":"offset","in":"query"},{"type":"string","name":"filter","in":"query"}],"responses":{"200":{"description":"A list of authenticators","schema":{"$ref":"#/definitions/listAuthenticatorsEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"/current-identity/authenticators/{id}":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a single authenticator by id. Will only show authenticators assigned to the API session\'s identity.","tags":["Current API Session"],"summary":"Retrieve an authenticator for the current identity","operationId":"detailCurrentIdentityAuthenticator","responses":{"200":{"description":"A singular authenticator resource","schema":{"$ref":"#/definitions/detailAuthenticatorEnvelope"}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"put":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update all fields on an authenticator by id.  Will only update authenticators assigned to the API session\'s\\nidentity.\\n","tags":["Current API Session"],"summary":"Update all fields on an authenticator of this identity","operationId":"updateCurrentIdentityAuthenticator","parameters":[{"description":"An authenticator put object","name":"authenticator","in":"body","required":true,"schema":{"$ref":"#/definitions/authenticatorUpdateWithCurrent"}}],"responses":{"200":{"description":"The update request was successful and the resource has been altered","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"patch":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update the supplied fields on an authenticator by id. Will only update authenticators assigned to the API\\nsession\'s identity.\\n","tags":["Current API Session"],"summary":"Update the supplied fields on an authenticator of this identity","operationId":"patchCurrentIdentityAuthenticator","parameters":[{"description":"An authenticator patch object","name":"authenticator","in":"body","required":true,"schema":{"$ref":"#/definitions/authenticatorPatchWithCurrent"}}],"responses":{"200":{"description":"The patch request was successful and the resource has been altered","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/current-identity/authenticators/{id}/extend":{"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"This endpoint only functions for certificates issued by the controller. 3rd party certificates are not handled.\\nAllows an identity to extend its certificate\'s expiration date by using its current and valid client certificate to submit a CSR. This CSR may be passed in using a new private key, thus allowing private key rotation.\\nThe response from this endpoint is a new client certificate which the client must  be verified via the /authenticators/{id}/extend-verify endpoint.\\nAfter verification is completion any new connections must be made with new certificate. Prior to verification the old client certificate remains active.","tags":["Current API Session","Enroll","Extend Enrollment"],"summary":"Allows the current identity to recieve a new certificate associated with a certificate based authenticator","operationId":"extendCurrentIdentityAuthenticator","parameters":[{"name":"extend","in":"body","required":true,"schema":{"$ref":"#/definitions/identityExtendEnrollmentRequest"}}],"responses":{"200":{"description":"A response containg the identity\'s new certificate","schema":{"$ref":"#/definitions/identityExtendEnrollmentEnvelope"}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/current-identity/authenticators/{id}/extend-verify":{"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"After submitting a CSR for a new client certificate the resulting public certificate must be re-submitted to this endpoint to verify receipt.\\nAfter receipt, the new client certificate must be used for new authentication requests.","tags":["Current API Session","Enroll","Extend Enrollment"],"summary":"Allows the current identity to validate reciept of a new client certificate","operationId":"extendVerifyCurrentIdentityAuthenticator","parameters":[{"name":"extend","in":"body","required":true,"schema":{"$ref":"#/definitions/identityExtendValidateEnrollmentRequest"}}],"responses":{"200":{"description":"Base empty response","schema":{"$ref":"#/definitions/empty"}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/current-identity/mfa":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Returns details about the current MFA enrollment. If enrollment has not been completed it will return the current MFA configuration details necessary to complete a `POST /current-identity/mfa/verify`.\\n","tags":["Current Identity","MFA"],"summary":"Returns the current status of MFA enrollment","operationId":"detailMfa","responses":{"200":{"description":"The details of an MFA enrollment","schema":{"$ref":"#/definitions/detailMfaEnvelope"}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Allows authenticator based MFA enrollment. If enrollment has already been completed, it must be disabled before attempting to re-enroll. Subsequent enrollment request is completed via `POST /current-identity/mfa/verify`\\n","tags":["Current Identity","MFA"],"summary":"Initiate MFA enrollment","operationId":"enrollMfa","responses":{"201":{"description":"The create request was successful and the resource has been added at the following location","schema":{"$ref":"#/definitions/createEnvelope"}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"409":{"description":"The identity is already enrolled in MFA","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":null,"cause":null,"causeMessage":"","code":"ALREADY_MFA_ENROLLED","message":"The identity is already enrolled in MFA","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"delete":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Disable MFA for the current identity. Requires a current valid time based one time password if MFA enrollment has been completed. If not, code should be an empty string. If one time passwords are not available and admin account can be used to remove MFA from the identity via `DELETE /identities/<id>/mfa`.\\n","tags":["Current Identity","MFA"],"summary":"Disable MFA for the current identity","operationId":"deleteMfa","parameters":[{"type":"string","name":"mfa-validation-code","in":"header"}],"responses":{"200":{"description":"Base empty response","schema":{"$ref":"#/definitions/empty"}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"/current-identity/mfa/qr-code":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Shows an QR code image for unverified MFA enrollments. 404s if the MFA enrollment has been completed or not started.\\n","produces":["image/png","application/json"],"tags":["Current Identity","MFA"],"summary":"Show a QR code for unverified MFA enrollments","operationId":"detailMfaQrCode","responses":{"200":{"description":"OK"},"404":{"description":"No MFA enrollment or MFA enrollment is completed"}}}},"/current-identity/mfa/recovery-codes":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Allows the viewing of recovery codes of an MFA enrollment. Requires a current valid time based one time password to interact with. Available after a completed MFA enrollment.\\n","tags":["Current Identity","MFA"],"summary":"For a completed MFA enrollment view the current recovery codes","operationId":"detailMfaRecoveryCodes","parameters":[{"description":"An MFA validation request","name":"mfaValidation","in":"body","schema":{"$ref":"#/definitions/mfaCode"}},{"type":"string","name":"mfa-validation-code","in":"header"}],"responses":{"200":{"description":"The recovery codes of an MFA enrollment","schema":{"$ref":"#/definitions/detailMfaRecoveryCodesEnvelope"}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Allows regeneration of recovery codes of an MFA enrollment. Requires a current valid time based one time password to interact with. Available after a completed MFA enrollment. This replaces all existing recovery codes.\\n","tags":["Current Identity","MFA"],"summary":"For a completed MFA enrollment regenerate the recovery codes","operationId":"createMfaRecoveryCodes","parameters":[{"description":"An MFA validation request","name":"mfaValidation","in":"body","required":true,"schema":{"$ref":"#/definitions/mfaCode"}}],"responses":{"200":{"description":"Base empty response","schema":{"$ref":"#/definitions/empty"}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"/current-identity/mfa/verify":{"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Completes MFA enrollment by accepting a time based one time password as verification. Called after MFA enrollment has been initiated via `POST /current-identity/mfa`.\\n","tags":["Current Identity","MFA"],"summary":"Complete MFA enrollment by verifying a time based one time token","operationId":"verifyMfa","parameters":[{"description":"An MFA validation request","name":"mfaValidation","in":"body","required":true,"schema":{"$ref":"#/definitions/mfaCode"}}],"responses":{"200":{"description":"Base empty response","schema":{"$ref":"#/definitions/empty"}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"/database/check-data-integrity":{"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Starts a data integrity scan on the datastore. Requires admin access. Only once instance may run at a time, including runs of fixDataIntegrity.","tags":["Database"],"summary":"Starts a data integrity scan on the datastore","operationId":"checkDataIntegrity","responses":{"202":{"description":"Base empty response","schema":{"$ref":"#/definitions/empty"}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"/database/data-integrity-results":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Returns any results found from in-progress integrity checks. Requires admin access.","tags":["Database"],"summary":"Returns any results found from in-progress integrity checks","operationId":"dataIntegrityResults","responses":{"200":{"description":"A list of data integrity issues found","schema":{"$ref":"#/definitions/dataIntegrityCheckResultEnvelope"}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"/database/fix-data-integrity":{"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Runs a data integrity scan on the datastore, attempts to fix any issues it can, and returns any found issues. Requires admin access. Only once instance may run at a time, including runs of checkDataIntegrity.","tags":["Database"],"summary":"Runs a data integrity scan on the datastore, attempts to fix any issues it can and returns any found issues","operationId":"fixDataIntegrity","responses":{"202":{"description":"Base empty response","schema":{"$ref":"#/definitions/empty"}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"/database/snapshot":{"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Create a new database snapshot. Requires admin access.","tags":["Database"],"summary":"Create a new database snapshot","operationId":"createDatabaseSnapshot","responses":{"200":{"description":"Base empty response","schema":{"$ref":"#/definitions/empty"}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"/edge-router-policies":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of edge router policy resources; supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Edge Router Policy"],"summary":"List edge router policies","operationId":"listEdgeRouterPolicies","parameters":[{"type":"integer","name":"limit","in":"query"},{"type":"integer","name":"offset","in":"query"},{"type":"string","name":"filter","in":"query"}],"responses":{"200":{"description":"A list of edge router policies","schema":{"$ref":"#/definitions/listEdgeRouterPoliciesEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Create an edge router policy resource. Requires admin access.","tags":["Edge Router Policy"],"summary":"Create an edge router policy resource","operationId":"createEdgeRouterPolicy","parameters":[{"description":"An edge router policy to create","name":"policy","in":"body","required":true,"schema":{"$ref":"#/definitions/edgeRouterPolicyCreate"}}],"responses":{"201":{"description":"The create request was successful and the resource has been added at the following location","schema":{"$ref":"#/definitions/createEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"/edge-router-policies/{id}":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a single edge router policy by id. Requires admin access.","tags":["Edge Router Policy"],"summary":"Retrieves a single edge router policy","operationId":"detailEdgeRouterPolicy","responses":{"200":{"description":"A single edge router policy","schema":{"$ref":"#/definitions/detailEdgeRouterPolicyEnvelope"}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"put":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update all fields on an edge router policy by id. Requires admin access.","tags":["Edge Router Policy"],"summary":"Update all fields on an edge router policy","operationId":"updateEdgeRouterPolicy","parameters":[{"description":"An edge router policy update object","name":"policy","in":"body","required":true,"schema":{"$ref":"#/definitions/edgeRouterPolicyUpdate"}}],"responses":{"200":{"description":"The update request was successful and the resource has been altered","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"delete":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Delete an edge router policy by id. Requires admin access.","tags":["Edge Router Policy"],"summary":"Delete an edge router policy","operationId":"deleteEdgeRouterPolicy","responses":{"200":{"description":"The delete request was successful and the resource has been removed","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"409":{"description":"The resource requested to be removed/altered cannot be as it is referenced by another object.","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"causeMessage":"referenced by /some-resource/05f4f710-c155-4a74-86d5-77558eb9cb42","code":"CONFLICT_CANNOT_MODIFY_REFERENCED","message":"The resource cannot be deleted/modified. Remove all referencing resources first.","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"patch":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update the supplied fields on an edge router policy. Requires admin access.","tags":["Edge Router Policy"],"summary":"Update the supplied fields on an edge router policy","operationId":"patchEdgeRouterPolicy","parameters":[{"description":"An edge router policy patch object","name":"policy","in":"body","required":true,"schema":{"$ref":"#/definitions/edgeRouterPolicyPatch"}}],"responses":{"200":{"description":"The patch request was successful and the resource has been altered","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/edge-router-policies/{id}/edge-routers":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of edge routers an edge router policy resources affects; supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Edge Router Policy"],"summary":"List edge routers a policy affects","operationId":"listEdgeRouterPolicyEdgeRouters","responses":{"200":{"description":"A list of edge routers","schema":{"$ref":"#/definitions/listEdgeRoutersEnvelope"}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/edge-router-policies/{id}/identities":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of identities an edge router policy resources affects; supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Edge Router Policy"],"summary":"List identities an edge router policy affects","operationId":"listEdgeRouterPolicyIdentities","responses":{"200":{"description":"A list of identities","schema":{"$ref":"#/definitions/listIdentitiesEnvelope"}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/edge-router-role-attributes":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of role attributes in use by edge routers; supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Role Attributes"],"summary":"List role attributes in use by edge routers","operationId":"listEdgeRouterRoleAttributes","parameters":[{"type":"integer","name":"limit","in":"query"},{"type":"integer","name":"offset","in":"query"},{"type":"string","name":"filter","in":"query"}],"responses":{"200":{"description":"A list of role attributes","schema":{"$ref":"#/definitions/listRoleAttributesEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"/edge-routers":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of edge router resources; supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Edge Router"],"summary":"List edge routers","operationId":"listEdgeRouters","parameters":[{"type":"integer","name":"limit","in":"query"},{"type":"integer","name":"offset","in":"query"},{"type":"string","name":"filter","in":"query"},{"type":"array","items":{"type":"string"},"collectionFormat":"multi","name":"roleFilter","in":"query"},{"type":"string","name":"roleSemantic","in":"query"}],"responses":{"200":{"description":"A list of edge routers","schema":{"$ref":"#/definitions/listEdgeRoutersEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Create a edge router resource. Requires admin access.","tags":["Edge Router"],"summary":"Create an edge router","operationId":"createEdgeRouter","parameters":[{"description":"A edge router to create","name":"edgeRouter","in":"body","required":true,"schema":{"$ref":"#/definitions/edgeRouterCreate"}}],"responses":{"201":{"description":"The create request was successful and the resource has been added at the following location","schema":{"$ref":"#/definitions/createEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"/edge-routers/{id}":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a single edge router by id. Requires admin access.","tags":["Edge Router"],"summary":"Retrieves a single edge router","operationId":"detailEdgeRouter","responses":{"200":{"description":"A singular edge router resource","schema":{"$ref":"#/definitions/detailedEdgeRouterEnvelope"}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"put":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update all fields on an edge router by id. Requires admin access.","tags":["Edge Router"],"summary":"Update all fields on an edge router","operationId":"updateEdgeRouter","parameters":[{"description":"An edge router update object","name":"edgeRouter","in":"body","required":true,"schema":{"$ref":"#/definitions/edgeRouterUpdate"}}],"responses":{"200":{"description":"The update request was successful and the resource has been altered","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"delete":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Delete an edge router by id. Requires admin access.","tags":["Edge Router"],"summary":"Delete an edge router","operationId":"deleteEdgeRouter","responses":{"200":{"description":"The delete request was successful and the resource has been removed","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"409":{"description":"The resource requested to be removed/altered cannot be as it is referenced by another object.","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"causeMessage":"referenced by /some-resource/05f4f710-c155-4a74-86d5-77558eb9cb42","code":"CONFLICT_CANNOT_MODIFY_REFERENCED","message":"The resource cannot be deleted/modified. Remove all referencing resources first.","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"patch":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update the supplied fields on an edge router. Requires admin access.","tags":["Edge Router"],"summary":"Update the supplied fields on an edge router","operationId":"patchEdgeRouter","parameters":[{"description":"An edge router patch object","name":"edgeRouter","in":"body","required":true,"schema":{"$ref":"#/definitions/edgeRouterPatch"}}],"responses":{"200":{"description":"The patch request was successful and the resource has been altered","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/edge-routers/{id}/edge-router-policies":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of edge router policies that apply to the specified edge router.","tags":["Edge Router"],"summary":"List the edge router policies that affect an edge router","operationId":"listEdgeRouterEdgeRouterPolicies","responses":{"200":{"description":"A list of edge router policies","schema":{"$ref":"#/definitions/listEdgeRouterPoliciesEnvelope"}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/edge-routers/{id}/identities":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of identities that may access services via the given edge router. Supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Edge Router"],"summary":"List associated identities","operationId":"listEdgeRouterIdentities","responses":{"200":{"description":"A list of identities","schema":{"$ref":"#/definitions/listIdentitiesEnvelope"}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/edge-routers/{id}/re-enroll":{"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Removes current certificate based authentication mechanisms and reverts the edge router into a state where enrollment must be performed.\\nThe router retains all other properties and associations. If the router is currently connected, it will be disconnected and any\\nattemps to reconnect will fail until the enrollment process is completed with the newly generated JWT.\\n\\nIf the edge router has an existing outstanding enrollment JWT it will be replaced. The previous JWT will no longer be usable to\\ncomplete the enrollment process.\\n","tags":["Edge Router"],"summary":"Re-enroll an edge router","operationId":"reEnrollEdgeRouter","responses":{"200":{"description":"Base empty response","schema":{"$ref":"#/definitions/empty"}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/edge-routers/{id}/service-edge-router-policies":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of service policies policies that apply to the specified edge router.","tags":["Edge Router"],"summary":"List the service policies that affect an edge router","operationId":"listEdgeRouterServiceEdgeRouterPolicies","responses":{"200":{"description":"A list of service policies","schema":{"$ref":"#/definitions/listServicePoliciesEnvelope"}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/edge-routers/{id}/services":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of services that may be accessed via the given edge router. Supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Edge Router"],"summary":"List associated services","operationId":"listEdgeRouterServices","responses":{"200":{"description":"A list of services","schema":{"$ref":"#/definitions/listServicesEnvelope"}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/enrollments":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of outstanding enrollments; supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Enrollment"],"summary":"List outstanding enrollments","operationId":"listEnrollments","parameters":[{"type":"integer","name":"limit","in":"query"},{"type":"integer","name":"offset","in":"query"},{"type":"string","name":"filter","in":"query"}],"responses":{"200":{"description":"A list of enrollments","schema":{"$ref":"#/definitions/listEnrollmentsEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Creates a new OTT, OTTCA, or UPDB enrollment for a specific identity. If an enrollment of the same type is already outstanding the request will fail with a 409 conflict. If desired, an existing enrollment can be refreshed by `enrollments/:id/refresh` or deleted.","tags":["Enrollment"],"summary":"Create an outstanding enrollment for an identity","operationId":"createEnrollment","parameters":[{"description":"An enrollment to create","name":"enrollment","in":"body","required":true,"schema":{"$ref":"#/definitions/enrollmentCreate"}}],"responses":{"201":{"description":"The create request was successful and the resource has been added at the following location","schema":{"$ref":"#/definitions/createEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"409":{"description":"The request could not be completed due to a conflict of configuration or state","schema":{"$ref":"#/definitions/apiErrorEnvelope"}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"/enrollments/{id}":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a single outstanding enrollment by id. Requires admin access.","tags":["Enrollment"],"summary":"Retrieves an outstanding enrollment","operationId":"detailEnrollment","responses":{"200":{"description":"A singular enrollment resource","schema":{"$ref":"#/definitions/detailEnrollmentEnvelope"}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"delete":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Delete an outstanding enrollment by id. Requires admin access.","tags":["Enrollment"],"summary":"Delete an outstanding enrollment","operationId":"deleteEnrollment","responses":{"200":{"description":"The delete request was successful and the resource has been removed","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/enrollments/{id}/refresh":{"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"For expired or unexpired enrollments, reset the expiration window. A new JWT will be generated and must be used for the enrollment.","tags":["Enrollment"],"summary":"Refreshes an enrollment record\'s expiration window","operationId":"refreshEnrollment","parameters":[{"description":"An enrollment refresh request","name":"refresh","in":"body","required":true,"schema":{"$ref":"#/definitions/enrollmentRefresh"}}],"responses":{"200":{"description":"The create request was successful and the resource has been added at the following location","schema":{"$ref":"#/definitions/createEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/enumerated-capabilities":{"get":{"security":[],"tags":["Informational"],"summary":"Returns all capabilities this version of the controller is aware of, enabled or not.","operationId":"listEnumeratedCapabilities","responses":{"200":{"description":"A typed and enumerated list of capabilities","schema":{"$ref":"#/definitions/listEnumeratedCapabilitiesEnvelope"}}}}},"/external-jwt-signers":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of external JWT signers for authentication","tags":["External JWT Signer"],"summary":"List External JWT Signers","operationId":"listExternalJwtSigners","parameters":[{"type":"integer","name":"limit","in":"query"},{"type":"integer","name":"offset","in":"query"},{"type":"string","name":"filter","in":"query"}],"responses":{"200":{"description":"A list of External JWT Signers","schema":{"$ref":"#/definitions/listExternalJwtSignersEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Creates an External JWT Signer. Requires admin access.","tags":["External JWT Signer"],"summary":"Creates an External JWT Signer","operationId":"createExternalJwtSigner","parameters":[{"description":"An External JWT Signer to create","name":"externalJwtSigner","in":"body","required":true,"schema":{"$ref":"#/definitions/externalJwtSignerCreate"}}],"responses":{"201":{"description":"The create request was successful and the resource has been added at the following location","schema":{"$ref":"#/definitions/createEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"/external-jwt-signers/{id}":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a single External JWT Signer by id. Requires admin access.","tags":["External JWT Signer"],"summary":"Retrieves a single External JWT Signer","operationId":"detailExternalJwtSigner","responses":{"200":{"description":"A singular External JWT Signer resource","schema":{"$ref":"#/definitions/detailExternalJwtSignerEnvelope"}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"put":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update all fields on an External JWT Signer by id. Requires admin access.","tags":["External JWT Signer"],"summary":"Update all fields on an External JWT Signer","operationId":"updateExternalJwtSigner","parameters":[{"description":"An External JWT Signer update object","name":"externalJwtSigner","in":"body","required":true,"schema":{"$ref":"#/definitions/externalJwtSignerUpdate"}}],"responses":{"200":{"description":"The update request was successful and the resource has been altered","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"delete":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Delete an External JWT Signer by id. Requires admin access.\\n","tags":["External JWT Signer"],"summary":"Delete an External JWT Signer","operationId":"deleteExternalJwtSigner","responses":{"200":{"description":"The delete request was successful and the resource has been removed","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"patch":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update only the supplied fields on an External JWT Signer by id. Requires admin access.","tags":["External JWT Signer"],"summary":"Update the supplied fields on an External JWT Signer","operationId":"patchExternalJwtSigner","parameters":[{"description":"An External JWT Signer patch object","name":"externalJwtSigner","in":"body","required":true,"schema":{"$ref":"#/definitions/externalJwtSignerPatch"}}],"responses":{"200":{"description":"The patch request was successful and the resource has been altered","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/identities":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of identity resources; supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Identity"],"summary":"List identities","operationId":"listIdentities","parameters":[{"type":"integer","name":"limit","in":"query"},{"type":"integer","name":"offset","in":"query"},{"type":"string","name":"filter","in":"query"},{"type":"array","items":{"type":"string"},"collectionFormat":"multi","name":"roleFilter","in":"query"},{"type":"string","name":"roleSemantic","in":"query"}],"responses":{"200":{"description":"A list of identities","schema":{"$ref":"#/definitions/listIdentitiesEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Create an identity resource. Requires admin access.","tags":["Identity"],"summary":"Create an identity resource","operationId":"createIdentity","parameters":[{"description":"An identity to create","name":"identity","in":"body","required":true,"schema":{"$ref":"#/definitions/identityCreate"}}],"responses":{"201":{"description":"The create request was successful and the resource has been added at the following location","schema":{"$ref":"#/definitions/createEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"/identities/{id}":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a single identity by id. Requires admin access.","tags":["Identity"],"summary":"Retrieves a single identity","operationId":"detailIdentity","responses":{"200":{"description":"A single identity","schema":{"$ref":"#/definitions/detailIdentityEnvelope"}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"put":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update all fields on an identity by id. Requires admin access.","tags":["Identity"],"summary":"Update all fields on an identity","operationId":"updateIdentity","parameters":[{"description":"An identity update object","name":"identity","in":"body","required":true,"schema":{"$ref":"#/definitions/identityUpdate"}}],"responses":{"200":{"description":"The update request was successful and the resource has been altered","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"delete":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Delete an identity by id. Requires admin access.","tags":["Identity"],"summary":"Delete an identity","operationId":"deleteIdentity","responses":{"200":{"description":"The delete request was successful and the resource has been removed","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"409":{"description":"The resource requested to be removed/altered cannot be as it is referenced by another object.","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"causeMessage":"referenced by /some-resource/05f4f710-c155-4a74-86d5-77558eb9cb42","code":"CONFLICT_CANNOT_MODIFY_REFERENCED","message":"The resource cannot be deleted/modified. Remove all referencing resources first.","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"patch":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update the supplied fields on an identity. Requires admin access.","tags":["Identity"],"summary":"Update the supplied fields on an identity","operationId":"patchIdentity","parameters":[{"description":"An identity patch object","name":"identity","in":"body","required":true,"schema":{"$ref":"#/definitions/identityPatch"}}],"responses":{"200":{"description":"The patch request was successful and the resource has been altered","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/identities/{id}/authenticators":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Returns a list of authenticators associated to the identity specified\\n","tags":["Identity"],"summary":"Retrieve the current authenticators of a specific identity","operationId":"getIdentityAuthenticators","responses":{"200":{"description":"A list of authenticators","schema":{"$ref":"#/definitions/listAuthenticatorsEnvelope"}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/identities/{id}/disable":{"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Reject an identity\'s API session requests for N minutes or indefinitely if 0.\\n","tags":["Identity"],"summary":"Set an identity as disabled","operationId":"disableIdentity","parameters":[{"description":"Disable parameters","name":"disable","in":"body","required":true,"schema":{"$ref":"#/definitions/disableParams"}}],"responses":{"200":{"description":"Base empty response","schema":{"$ref":"#/definitions/empty"}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/identities/{id}/edge-router-policies":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of edge router policies that apply to the specified identity.","tags":["Identity"],"summary":"List the edge router policies that affect an identity","operationId":"listIdentitysEdgeRouterPolicies","responses":{"200":{"description":"A list of edge router policies","schema":{"$ref":"#/definitions/listEdgeRouterPoliciesEnvelope"}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/identities/{id}/edge-routers":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of edge-routers that the given identity may use to access services. Supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Identity"],"summary":"List accessible edge-routers","operationId":"listIdentityEdgeRouters","responses":{"200":{"description":"A list of edge routers","schema":{"$ref":"#/definitions/listEdgeRoutersEnvelope"}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/identities/{id}/enable":{"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Allows an admin to remove disabled statuses from an identity.\\n","tags":["Identity"],"summary":"Clears all disabled state from an identity","operationId":"enableIdentity","responses":{"200":{"description":"Base empty response","schema":{"$ref":"#/definitions/empty"}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/identities/{id}/enrollments":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Returns a list of enrollments associated to the identity specified\\n","tags":["Identity"],"summary":"Retrieve the current enrollments of a specific identity","operationId":"getIdentityEnrollments","responses":{"200":{"description":"A list of enrollments","schema":{"$ref":"#/definitions/listEnrollmentsEnvelope"}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/identities/{id}/failed-service-requests":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Returns a list of service session requests that failed due to posture checks. The entries will contain\\nevery policy that was verified against and every failed check in each policy. Each check will include\\nthe historical posture data and posture check configuration.\\n","tags":["Identity"],"summary":"Retrieve a list of the most recent service failure requests due to posture checks","operationId":"getIdentityFailedServiceRequests","responses":{"200":{"description":"Returns a list of service request failures","schema":{"$ref":"#/definitions/failedServiceRequestEnvelope"}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/identities/{id}/mfa":{"delete":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Allows an admin to remove MFA enrollment from a specific identity. Requires admin.\\n","tags":["Identity","MFA"],"summary":"Remove MFA from an identitity","operationId":"removeIdentityMfa","responses":{"200":{"description":"Base empty response","schema":{"$ref":"#/definitions/empty"}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/identities/{id}/policy-advice/{serviceId}":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Analyzes policies to see if the given identity should be able to dial or bind the given service. |\\nWill check services policies to see if the identity can access the service. Will check edge router policies |\\nto check if the identity and service have access to common edge routers so that a connnection can be made. |\\nWill also check if at least one edge router is on-line. Requires admin access.\\n","tags":["Identity"],"summary":"Analyze policies relating the given identity and service","operationId":"getIdentityPolicyAdvice","responses":{"200":{"description":"Returns the document that represents the policy advice","schema":{"$ref":"#/definitions/getIdentityPolicyAdviceEnvelope"}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true},{"type":"string","description":"The id of a service","name":"serviceId","in":"path","required":true}]},"/identities/{id}/posture-data":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Returns a nested map data represeting the posture data of the identity.\\nThis data should be considered volatile.\\n","tags":["Identity"],"summary":"Retrieve the curent posture data for a specific identity.","operationId":"getIdentityPostureData","responses":{"200":{"description":"Returns the document that represents posture data","schema":{"$ref":"#/definitions/postureDataEnvelope"}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/identities/{id}/service-configs":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of service configs associated to a specific identity","tags":["Identity"],"summary":"List the service configs associated a specific identity","operationId":"listIdentitysServiceConfigs","responses":{"200":{"description":"A list of service configs","schema":{"$ref":"#/definitions/listServiceConfigsEnvelope"}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Associate service configs to a specific identity","tags":["Identity"],"summary":"Associate service configs for a specific identity","operationId":"associateIdentitysServiceConfigs","parameters":[{"description":"A service config patch object","name":"serviceConfigs","in":"body","required":true,"schema":{"$ref":"#/definitions/serviceConfigsAssignList"}}],"responses":{"200":{"description":"Base empty response","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"delete":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Remove service configs from a specific identity","tags":["Identity"],"summary":"Remove associated service configs from a specific identity","operationId":"disassociateIdentitysServiceConfigs","parameters":[{"description":"An array of service and config id pairs to remove","name":"serviceConfigIdPairs","in":"body","schema":{"$ref":"#/definitions/serviceConfigsAssignList"}}],"responses":{"200":{"description":"Base empty response","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/identities/{id}/service-policies":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of service policies that apply to the specified identity.","tags":["Identity"],"summary":"List the service policies that affect an identity","operationId":"listIdentityServicePolicies","responses":{"200":{"description":"A list of service policies","schema":{"$ref":"#/definitions/listServicePoliciesEnvelope"}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/identities/{id}/services":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of services that the given identity has access to. Supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Identity"],"summary":"List accessible services","operationId":"listIdentityServices","parameters":[{"type":"string","name":"filter","in":"query"},{"enum":["dial","bind"],"type":"string","name":"policyType","in":"query"}],"responses":{"200":{"description":"A list of services","schema":{"$ref":"#/definitions/listServicesEnvelope"}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/identities/{id}/trace":{"put":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Allows an admin to enable/disable data flow tracing for an identity\\n","tags":["Identity","Tracing"],"summary":"Enable/disable data flow tracing for an identity","operationId":"updateIdentityTracing","parameters":[{"description":"A traceSpec object","name":"traceSpec","in":"body","required":true,"schema":{"$ref":"#/definitions/traceSpec"}}],"responses":{"200":{"description":"Returns the document that represents the trace state","schema":{"$ref":"#/definitions/traceDetailEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/identity-role-attributes":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of role attributes in use by identities; supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Role Attributes"],"summary":"List role attributes in use by identities","operationId":"listIdentityRoleAttributes","parameters":[{"type":"integer","name":"limit","in":"query"},{"type":"integer","name":"offset","in":"query"},{"type":"string","name":"filter","in":"query"}],"responses":{"200":{"description":"A list of role attributes","schema":{"$ref":"#/definitions/listRoleAttributesEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"/identity-types":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of identity types; supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Identity"],"summary":"List available identity types","operationId":"listIdentityTypes","parameters":[{"type":"integer","name":"limit","in":"query"},{"type":"integer","name":"offset","in":"query"},{"type":"string","name":"filter","in":"query"}],"responses":{"200":{"description":"A list of identity types","schema":{"$ref":"#/definitions/listIdentityTypesEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"/identity-types/{id}":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a single identity type by id. Requires admin access.","tags":["Identity"],"summary":"Retrieves a identity type","operationId":"detailIdentityType","responses":{"200":{"description":"A single identity type","schema":{"$ref":"#/definitions/detailIdentityTypeEnvelope"}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/network-jwts":{"get":{"description":"Returns a list of JWTs for trusting a network","tags":["Enrollment"],"summary":"Returns a list of JWTs suitable for bootstrapping network trust.","operationId":"listNetworkJWTs","responses":{"200":{"description":"A list of network JWTs","schema":{"$ref":"#/definitions/listNetworkJWTsEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"/posture-check-role-attributes":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of role attributes in use by posture checks; supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Role Attributes"],"summary":"List role attributes in use by posture checks","operationId":"listPostureCheckRoleAttributes","parameters":[{"type":"integer","name":"limit","in":"query"},{"type":"integer","name":"offset","in":"query"},{"type":"string","name":"filter","in":"query"}],"responses":{"200":{"description":"A list of role attributes","schema":{"$ref":"#/definitions/listRoleAttributesEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"/posture-check-types":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of posture check types\\n","produces":["application/json; charset=utf-8"],"tags":["Posture Checks"],"summary":"List a subset of posture check types","operationId":"listPostureCheckTypes","parameters":[{"type":"integer","name":"limit","in":"query"},{"type":"integer","name":"offset","in":"query"},{"type":"string","name":"filter","in":"query"}],"responses":{"200":{"description":"A list of posture check types","schema":{"$ref":"#/definitions/listPostureCheckTypesEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"/posture-check-types/{id}":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a single posture check type by id","tags":["Posture Checks"],"summary":"Retrieves a single posture check type","operationId":"detailPostureCheckType","responses":{"200":{"description":"Retrieves a singular posture check type by id","schema":{"$ref":"#/definitions/detailPostureCheckTypeEnvelope"}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/posture-checks":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of posture checks\\n","produces":["application/json; charset=utf-8"],"tags":["Posture Checks"],"summary":"List a subset of posture checks","operationId":"listPostureChecks","parameters":[{"type":"integer","name":"limit","in":"query"},{"type":"integer","name":"offset","in":"query"},{"type":"string","name":"filter","in":"query"},{"type":"array","items":{"type":"string"},"collectionFormat":"multi","name":"roleFilter","in":"query"},{"type":"string","name":"roleSemantic","in":"query"}],"responses":{"200":{"description":"A list of posture checks","schema":{"$ref":"#/definitions/listPostureCheckEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Creates a Posture Checks","tags":["Posture Checks"],"summary":"Creates a Posture Checks","operationId":"createPostureCheck","parameters":[{"description":"A Posture Check to create","name":"postureCheck","in":"body","required":true,"schema":{"$ref":"#/definitions/postureCheckCreate"}}],"responses":{"201":{"description":"The create request was successful and the resource has been added at the following location","schema":{"$ref":"#/definitions/createEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"/posture-checks/{id}":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a single Posture Checks by id","tags":["Posture Checks"],"summary":"Retrieves a single Posture Checks","operationId":"detailPostureCheck","responses":{"200":{"description":"Retrieves a singular posture check by id","schema":{"$ref":"#/definitions/detailPostureCheckEnvelope"}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"put":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update all fields on a Posture Checks by id","tags":["Posture Checks"],"summary":"Update all fields on a Posture Checks","operationId":"updatePostureCheck","parameters":[{"description":"A Posture Check update object","name":"postureCheck","in":"body","required":true,"schema":{"$ref":"#/definitions/postureCheckUpdate"}}],"responses":{"200":{"description":"The update request was successful and the resource has been altered","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"delete":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Deletes and Posture Checks by id","tags":["Posture Checks"],"summary":"Deletes an Posture Checks","operationId":"deletePostureCheck","responses":{"200":{"description":"The delete request was successful and the resource has been removed","schema":{"$ref":"#/definitions/empty"}},"403":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"patch":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update only the supplied fields on a Posture Checks by id","tags":["Posture Checks"],"summary":"Update the supplied fields on a Posture Checks","operationId":"patchPostureCheck","parameters":[{"description":"A Posture Check patch object","name":"postureCheck","in":"body","required":true,"schema":{"$ref":"#/definitions/postureCheckPatch"}}],"responses":{"200":{"description":"The patch request was successful and the resource has been altered","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/routers":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of router resources; supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Router"],"summary":"List routers","operationId":"listRouters","parameters":[{"type":"integer","name":"limit","in":"query"},{"type":"integer","name":"offset","in":"query"},{"type":"string","name":"filter","in":"query"}],"responses":{"200":{"description":"A list of specifications","schema":{"$ref":"#/definitions/listRoutersEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Create a router resource. Requires admin access.","tags":["Router"],"summary":"Create a router resource","operationId":"createRouter","parameters":[{"description":"A router to create","name":"router","in":"body","required":true,"schema":{"$ref":"#/definitions/routerCreate"}}],"responses":{"201":{"description":"The create request was successful and the resource has been added at the following location","schema":{"$ref":"#/definitions/createEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"/routers/{id}":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a single router by id. Requires admin access.","tags":["Router"],"summary":"Retrieves a single router","operationId":"detailRouter","responses":{"200":{"description":"A single router","schema":{"$ref":"#/definitions/detailRouterEnvelope"}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"put":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update all fields on a router by id. Requires admin access.","tags":["Router"],"summary":"Update all fields on a router","operationId":"updateRouter","parameters":[{"description":"A router update object","name":"router","in":"body","required":true,"schema":{"$ref":"#/definitions/routerUpdate"}}],"responses":{"200":{"description":"The update request was successful and the resource has been altered","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"delete":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Delete a router by id. Requires admin access.","tags":["Router"],"summary":"Delete a router","operationId":"deleteRouter","responses":{"200":{"description":"The delete request was successful and the resource has been removed","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"409":{"description":"The resource requested to be removed/altered cannot be as it is referenced by another object.","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"causeMessage":"referenced by /some-resource/05f4f710-c155-4a74-86d5-77558eb9cb42","code":"CONFLICT_CANNOT_MODIFY_REFERENCED","message":"The resource cannot be deleted/modified. Remove all referencing resources first.","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"patch":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update the supplied fields on a router. Requires admin access.","tags":["Router"],"summary":"Update the supplied fields on a router","operationId":"patchRouter","parameters":[{"description":"A router patch object","name":"router","in":"body","required":true,"schema":{"$ref":"#/definitions/routerPatch"}}],"responses":{"200":{"description":"The patch request was successful and the resource has been altered","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/service-edge-router-policies":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of service edge router policy resources; supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Service Edge Router Policy"],"summary":"List service edge router policies","operationId":"listServiceEdgeRouterPolicies","parameters":[{"type":"integer","name":"limit","in":"query"},{"type":"integer","name":"offset","in":"query"},{"type":"string","name":"filter","in":"query"}],"responses":{"200":{"description":"A list of service edge router policies","schema":{"$ref":"#/definitions/listServiceEdgeRouterPoliciesEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Create a service edge router policy resource. Requires admin access.","tags":["Service Edge Router Policy"],"summary":"Create a service edge router policy resource","operationId":"createServiceEdgeRouterPolicy","parameters":[{"description":"A service edge router policy to create","name":"policy","in":"body","required":true,"schema":{"$ref":"#/definitions/serviceEdgeRouterPolicyCreate"}}],"responses":{"201":{"description":"The create request was successful and the resource has been added at the following location","schema":{"$ref":"#/definitions/createEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"/service-edge-router-policies/{id}":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a single service edge policy by id. Requires admin access.","tags":["Service Edge Router Policy"],"summary":"Retrieves a single service edge policy","operationId":"detailServiceEdgeRouterPolicy","responses":{"200":{"description":"A single service edge router policy","schema":{"$ref":"#/definitions/detailServiceEdgePolicyEnvelope"}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"put":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update all fields on a service edge policy by id. Requires admin access.","tags":["Service Edge Router Policy"],"summary":"Update all fields on a service edge policy","operationId":"updateServiceEdgeRouterPolicy","parameters":[{"description":"A service edge router policy update object","name":"policy","in":"body","required":true,"schema":{"$ref":"#/definitions/serviceEdgeRouterPolicyUpdate"}}],"responses":{"200":{"description":"The update request was successful and the resource has been altered","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"delete":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Delete a service edge policy by id. Requires admin access.","tags":["Service Edge Router Policy"],"summary":"Delete a service edge policy","operationId":"deleteServiceEdgeRouterPolicy","responses":{"200":{"description":"The delete request was successful and the resource has been removed","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"409":{"description":"The resource requested to be removed/altered cannot be as it is referenced by another object.","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"causeMessage":"referenced by /some-resource/05f4f710-c155-4a74-86d5-77558eb9cb42","code":"CONFLICT_CANNOT_MODIFY_REFERENCED","message":"The resource cannot be deleted/modified. Remove all referencing resources first.","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"patch":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update the supplied fields on a service edge policy. Requires admin access.","tags":["Service Edge Router Policy"],"summary":"Update the supplied fields on a service edge policy","operationId":"patchServiceEdgeRouterPolicy","parameters":[{"description":"A service edge router policy patch object","name":"policy","in":"body","required":true,"schema":{"$ref":"#/definitions/serviceEdgeRouterPolicyPatch"}}],"responses":{"200":{"description":"The patch request was successful and the resource has been altered","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/service-edge-router-policies/{id}/edge-routers":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"List the edge routers that a service edge router policy applies to","tags":["Service Edge Router Policy"],"summary":"List the edge routers that a service edge router policy applies to","operationId":"listServiceEdgeRouterPolicyEdgeRouters","responses":{"200":{"description":"A list of edge routers","schema":{"$ref":"#/definitions/listEdgeRoutersEnvelope"}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/service-edge-router-policies/{id}/services":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"List the services that a service edge router policy applies to","tags":["Service Edge Router Policy"],"summary":"List the services that a service edge router policy applies to","operationId":"listServiceEdgeRouterPolicyServices","responses":{"200":{"description":"A list of services","schema":{"$ref":"#/definitions/listServicesEnvelope"}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/service-policies":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of service policy resources; supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Service Policy"],"summary":"List service policies","operationId":"listServicePolicies","parameters":[{"type":"integer","name":"limit","in":"query"},{"type":"integer","name":"offset","in":"query"},{"type":"string","name":"filter","in":"query"}],"responses":{"200":{"description":"A list of service policies","schema":{"$ref":"#/definitions/listServicePoliciesEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Create a service policy resource. Requires admin access.","tags":["Service Policy"],"summary":"Create a service policy resource","operationId":"createServicePolicy","parameters":[{"description":"A service policy to create","name":"policy","in":"body","required":true,"schema":{"$ref":"#/definitions/servicePolicyCreate"}}],"responses":{"201":{"description":"The create request was successful and the resource has been added at the following location","schema":{"$ref":"#/definitions/createEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"/service-policies/{id}":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a single service policy by id. Requires admin access.","tags":["Service Policy"],"summary":"Retrieves a single service policy","operationId":"detailServicePolicy","responses":{"200":{"description":"A single service policy","schema":{"$ref":"#/definitions/detailServicePolicyEnvelop"}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"put":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update all fields on a service policy by id. Requires admin access.","tags":["Service Policy"],"summary":"Update all fields on a service policy","operationId":"updateServicePolicy","parameters":[{"description":"A service policy update object","name":"policy","in":"body","required":true,"schema":{"$ref":"#/definitions/servicePolicyUpdate"}}],"responses":{"200":{"description":"The update request was successful and the resource has been altered","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"delete":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Delete a service policy by id. Requires admin access.","tags":["Service Policy"],"summary":"Delete a service policy","operationId":"deleteServicePolicy","responses":{"200":{"description":"The delete request was successful and the resource has been removed","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"409":{"description":"The resource requested to be removed/altered cannot be as it is referenced by another object.","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"causeMessage":"referenced by /some-resource/05f4f710-c155-4a74-86d5-77558eb9cb42","code":"CONFLICT_CANNOT_MODIFY_REFERENCED","message":"The resource cannot be deleted/modified. Remove all referencing resources first.","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"patch":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update the supplied fields on a service policy. Requires admin access.","tags":["Service Policy"],"summary":"Update the supplied fields on a service policy","operationId":"patchServicePolicy","parameters":[{"description":"A service policy patch object","name":"policy","in":"body","required":true,"schema":{"$ref":"#/definitions/servicePolicyPatch"}}],"responses":{"200":{"description":"The patch request was successful and the resource has been altered","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/service-policies/{id}/identities":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of identity resources that are affected by a service policy; supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Service Policy"],"summary":"List identities a service policy affects","operationId":"listServicePolicyIdentities","parameters":[{"type":"integer","name":"limit","in":"query"},{"type":"integer","name":"offset","in":"query"},{"type":"string","name":"filter","in":"query"}],"responses":{"200":{"description":"A list of identities","schema":{"$ref":"#/definitions/listIdentitiesEnvelope"}},"400":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/service-policies/{id}/posture-checks":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of posture check resources that are affected by a service policy; supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Service Policy"],"summary":"List posture check a service policy includes","operationId":"listServicePolicyPostureChecks","parameters":[{"type":"integer","name":"limit","in":"query"},{"type":"integer","name":"offset","in":"query"},{"type":"string","name":"filter","in":"query"}],"responses":{"200":{"description":"A list of posture checks","schema":{"$ref":"#/definitions/listPostureCheckEnvelope"}},"400":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/service-policies/{id}/services":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of service resources that are affected by a service policy; supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Service Policy"],"summary":"List services a service policy affects","operationId":"listServicePolicyServices","parameters":[{"type":"integer","name":"limit","in":"query"},{"type":"integer","name":"offset","in":"query"},{"type":"string","name":"filter","in":"query"}],"responses":{"200":{"description":"A list of services","schema":{"$ref":"#/definitions/listServicesEnvelope"}},"400":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/service-role-attributes":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of role attributes in use by services; supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Role Attributes"],"summary":"List role attributes in use by services","operationId":"listServiceRoleAttributes","parameters":[{"type":"integer","name":"limit","in":"query"},{"type":"integer","name":"offset","in":"query"},{"type":"string","name":"filter","in":"query"}],"responses":{"200":{"description":"A list of role attributes","schema":{"$ref":"#/definitions/listRoleAttributesEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"/services":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of config resources; supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Service"],"summary":"List services","operationId":"listServices","parameters":[{"type":"integer","name":"limit","in":"query"},{"type":"integer","name":"offset","in":"query"},{"type":"string","name":"filter","in":"query"},{"type":"array","items":{"type":"string"},"collectionFormat":"multi","name":"configTypes","in":"query"},{"type":"array","items":{"type":"string"},"collectionFormat":"multi","name":"roleFilter","in":"query"},{"type":"string","name":"roleSemantic","in":"query"}],"responses":{"200":{"description":"A list of services","schema":{"$ref":"#/definitions/listServicesEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Create a services resource. Requires admin access.","tags":["Service"],"summary":"Create a services resource","operationId":"createService","parameters":[{"description":"A service to create","name":"service","in":"body","required":true,"schema":{"$ref":"#/definitions/serviceCreate"}}],"responses":{"201":{"description":"The create request was successful and the resource has been added at the following location","schema":{"$ref":"#/definitions/createEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"/services/{id}":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a single service by id. Requires admin access.","tags":["Service"],"summary":"Retrieves a single service","operationId":"detailService","responses":{"200":{"description":"A single service","schema":{"$ref":"#/definitions/detailServiceEnvelope"}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"put":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update all fields on a service by id. Requires admin access.","tags":["Service"],"summary":"Update all fields on a service","operationId":"updateService","parameters":[{"description":"A service update object","name":"service","in":"body","required":true,"schema":{"$ref":"#/definitions/serviceUpdate"}}],"responses":{"200":{"description":"The update request was successful and the resource has been altered","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"delete":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Delete a service by id. Requires admin access.","tags":["Service"],"summary":"Delete a service","operationId":"deleteService","responses":{"200":{"description":"The delete request was successful and the resource has been removed","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"409":{"description":"The resource requested to be removed/altered cannot be as it is referenced by another object.","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"causeMessage":"referenced by /some-resource/05f4f710-c155-4a74-86d5-77558eb9cb42","code":"CONFLICT_CANNOT_MODIFY_REFERENCED","message":"The resource cannot be deleted/modified. Remove all referencing resources first.","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"patch":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update the supplied fields on a service. Requires admin access.","tags":["Service"],"summary":"Update the supplied fields on a service","operationId":"patchService","parameters":[{"description":"A service patch object","name":"service","in":"body","required":true,"schema":{"$ref":"#/definitions/servicePatch"}}],"responses":{"200":{"description":"The patch request was successful and the resource has been altered","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/services/{id}/configs":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of config resources associated to a specific service; supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Service"],"summary":"List configs associated to a specific service","operationId":"listServiceConfig","parameters":[{"type":"integer","name":"limit","in":"query"},{"type":"integer","name":"offset","in":"query"},{"type":"string","name":"filter","in":"query"}],"responses":{"200":{"description":"A list of configs","schema":{"$ref":"#/definitions/listConfigsEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/services/{id}/edge-routers":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of edge-routers that may be used to access the given service. Supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Service"],"summary":"List accessible edge-routers","operationId":"listServiceEdgeRouters","parameters":[{"type":"integer","name":"limit","in":"query"},{"type":"integer","name":"offset","in":"query"},{"type":"string","name":"filter","in":"query"}],"responses":{"200":{"description":"A list of edge routers","schema":{"$ref":"#/definitions/listEdgeRoutersEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/services/{id}/identities":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of identities that have access to this service. Supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Service"],"summary":"List identities with access","operationId":"listServiceIdentities","parameters":[{"type":"integer","name":"limit","in":"query"},{"type":"integer","name":"offset","in":"query"},{"type":"string","name":"filter","in":"query"},{"enum":["dial","bind"],"type":"string","name":"policyType","in":"query"}],"responses":{"200":{"description":"A list of identities","schema":{"$ref":"#/definitions/listIdentitiesEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/services/{id}/service-edge-router-policies":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of service edge router policy resources that affect a specific service; supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Service"],"summary":"List service edge router policies that affect a specific service","operationId":"listServiceServiceEdgeRouterPolicies","parameters":[{"type":"integer","name":"limit","in":"query"},{"type":"integer","name":"offset","in":"query"},{"type":"string","name":"filter","in":"query"}],"responses":{"200":{"description":"A list of service edge router policies","schema":{"$ref":"#/definitions/listServiceEdgeRouterPoliciesEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/services/{id}/service-policies":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of service policy resources that affect specific service; supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Service"],"summary":"List service policies that affect a specific service","operationId":"listServiceServicePolicies","parameters":[{"type":"integer","name":"limit","in":"query"},{"type":"integer","name":"offset","in":"query"},{"type":"string","name":"filter","in":"query"}],"responses":{"200":{"description":"A list of service policies","schema":{"$ref":"#/definitions/listServicePoliciesEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/services/{id}/terminators":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of terminator resources that are assigned specific service; supports filtering, sorting, and pagination.\\n","tags":["Service"],"summary":"List of terminators assigned to a service","operationId":"listServiceTerminators","parameters":[{"type":"integer","name":"limit","in":"query"},{"type":"integer","name":"offset","in":"query"},{"type":"string","name":"filter","in":"query"}],"responses":{"200":{"description":"A list of terminators","schema":{"$ref":"#/definitions/listTerminatorsEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/sessions":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of active sessions resources; supports filtering, sorting, and pagination. Requires admin access.\\n\\nSessions are tied to an API session and are moved when an API session times out or logs out. Active sessions\\n(i.e. Ziti SDK connected to an edge router) will keep the session and API session marked as active.\\n","tags":["Session"],"summary":"List sessions","operationId":"listSessions","parameters":[{"type":"integer","name":"limit","in":"query"},{"type":"integer","name":"offset","in":"query"},{"type":"string","name":"filter","in":"query"}],"responses":{"200":{"description":"A list of sessions","schema":{"$ref":"#/definitions/listSessionsManagementEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"/sessions/{id}":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a single session by id. Requires admin access.","tags":["Session"],"summary":"Retrieves a single session","operationId":"detailSession","responses":{"200":{"description":"A single session","schema":{"$ref":"#/definitions/detailSessionManagementEnvelope"}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"delete":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Delete a session by id. Requires admin access.","tags":["Session"],"summary":"Delete a session","operationId":"deleteSession","responses":{"200":{"description":"The delete request was successful and the resource has been removed","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"409":{"description":"The resource requested to be removed/altered cannot be as it is referenced by another object.","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"causeMessage":"referenced by /some-resource/05f4f710-c155-4a74-86d5-77558eb9cb42","code":"CONFLICT_CANNOT_MODIFY_REFERENCED","message":"The resource cannot be deleted/modified. Remove all referencing resources first.","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/sessions/{id}/route-path":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a single session\'s route path by id. Requires admin access.","tags":["Session"],"summary":"Retrieves a single session\'s router path","operationId":"detailSessionRoutePath","responses":{"200":{"description":"A single session\'s route path","schema":{"$ref":"#/definitions/detailSessionRoutePathEnvelope"}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/specs":{"get":{"security":[],"description":"Returns a list of spec files embedded within the controller for consumption/documentation/code geneartion","tags":["Informational"],"summary":"Returns a list of API specs","operationId":"listSpecs","responses":{"200":{"description":"A list of specifications","schema":{"$ref":"#/definitions/listSpecsEnvelope"}}}}},"/specs/{id}":{"get":{"security":[],"description":"Returns single spec resource embedded within the controller for consumption/documentation/code geneartion","tags":["Informational"],"summary":"Return a single spec resource","operationId":"detailSpec","responses":{"200":{"description":"A single specification","schema":{"$ref":"#/definitions/detailSpecEnvelope"}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/specs/{id}/spec":{"get":{"security":[],"description":"Return the body of the specification (i.e. Swagger, OpenAPI 2.0, 3.0, etc).","produces":["text/yaml","application/json"],"tags":["Informational"],"summary":"Returns the spec\'s file","operationId":"detailSpecBody","responses":{"200":{"description":"Returns the document that represents the specification","schema":{"$ref":"#/definitions/detailSpecBodyEnvelope"}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/summary":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"This endpoint is usefull for UIs that wish to display UI elements with counts.","tags":["Informational"],"summary":"Returns a list of accessible resource counts","operationId":"listSummary","responses":{"200":{"description":"Entity counts scopped to the current identitie\'s access","schema":{"$ref":"#/definitions/listSummaryCountsEnvelope"}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"/terminators":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of terminator resources; supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Terminator"],"summary":"List terminators","operationId":"listTerminators","parameters":[{"type":"integer","name":"limit","in":"query"},{"type":"integer","name":"offset","in":"query"},{"type":"string","name":"filter","in":"query"}],"responses":{"200":{"description":"A list of terminators","schema":{"$ref":"#/definitions/listTerminatorsEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Create a terminator resource. Requires admin access.","tags":["Terminator"],"summary":"Create a terminator resource","operationId":"createTerminator","parameters":[{"description":"A terminator to create","name":"terminator","in":"body","required":true,"schema":{"$ref":"#/definitions/terminatorCreate"}}],"responses":{"201":{"description":"The create request was successful and the resource has been added at the following location","schema":{"$ref":"#/definitions/createEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"/terminators/{id}":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a single terminator by id. Requires admin access.","tags":["Terminator"],"summary":"Retrieves a single terminator","operationId":"detailTerminator","responses":{"200":{"description":"A single terminator","schema":{"$ref":"#/definitions/detailTerminatorEnvelope"}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"put":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update all fields on a terminator by id. Requires admin access.","tags":["Terminator"],"summary":"Update all fields on a terminator","operationId":"updateTerminator","parameters":[{"description":"A terminator update object","name":"terminator","in":"body","required":true,"schema":{"$ref":"#/definitions/terminatorUpdate"}}],"responses":{"200":{"description":"The update request was successful and the resource has been altered","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"delete":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Delete a terminator by id. Requires admin access.","tags":["Terminator"],"summary":"Delete a terminator","operationId":"deleteTerminator","responses":{"200":{"description":"The delete request was successful and the resource has been removed","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"409":{"description":"The resource requested to be removed/altered cannot be as it is referenced by another object.","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"causeMessage":"referenced by /some-resource/05f4f710-c155-4a74-86d5-77558eb9cb42","code":"CONFLICT_CANNOT_MODIFY_REFERENCED","message":"The resource cannot be deleted/modified. Remove all referencing resources first.","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"patch":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update the supplied fields on a terminator. Requires admin access.","tags":["Terminator"],"summary":"Update the supplied fields on a terminator","operationId":"patchTerminator","parameters":[{"description":"A terminator patch object","name":"terminator","in":"body","required":true,"schema":{"$ref":"#/definitions/terminatorPatch"}}],"responses":{"200":{"description":"The patch request was successful and the resource has been altered","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/transit-routers":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a list of router resources; supports filtering, sorting, and pagination. Requires admin access.\\n","tags":["Router"],"summary":"List routers","operationId":"listTransitRouters","parameters":[{"type":"integer","name":"limit","in":"query"},{"type":"integer","name":"offset","in":"query"},{"type":"string","name":"filter","in":"query"}],"responses":{"200":{"description":"A list of specifications","schema":{"$ref":"#/definitions/listRoutersEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"post":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Create a router resource. Requires admin access.","tags":["Router"],"summary":"Create a router resource","operationId":"createTransitRouter","parameters":[{"description":"A router to create","name":"router","in":"body","required":true,"schema":{"$ref":"#/definitions/routerCreate"}}],"responses":{"201":{"description":"The create request was successful and the resource has been added at the following location","schema":{"$ref":"#/definitions/createEnvelope"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}}},"/transit-routers/{id}":{"get":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Retrieves a single router by id. Requires admin access.","tags":["Router"],"summary":"Retrieves a single router","operationId":"detailTransitRouter","responses":{"200":{"description":"A single router","schema":{"$ref":"#/definitions/detailRouterEnvelope"}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"put":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update all fields on a router by id. Requires admin access.","tags":["Router"],"summary":"Update all fields on a router","operationId":"updateTransitRouter","parameters":[{"description":"A router update object","name":"router","in":"body","required":true,"schema":{"$ref":"#/definitions/routerUpdate"}}],"responses":{"200":{"description":"The update request was successful and the resource has been altered","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"delete":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Delete a router by id. Requires admin access.","tags":["Router"],"summary":"Delete a router","operationId":"deleteTransitRouter","responses":{"200":{"description":"The delete request was successful and the resource has been removed","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"409":{"description":"The resource requested to be removed/altered cannot be as it is referenced by another object.","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"causeMessage":"referenced by /some-resource/05f4f710-c155-4a74-86d5-77558eb9cb42","code":"CONFLICT_CANNOT_MODIFY_REFERENCED","message":"The resource cannot be deleted/modified. Remove all referencing resources first.","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"patch":{"security":[{"ztSession":[]},{"oauth2":["openid"]}],"description":"Update the supplied fields on a router. Requires admin access.","tags":["Router"],"summary":"Update the supplied fields on a router","operationId":"patchTransitRouter","parameters":[{"description":"A router patch object","name":"router","in":"body","required":true,"schema":{"$ref":"#/definitions/routerPatch"}}],"responses":{"200":{"description":"The patch request was successful and the resource has been altered","schema":{"$ref":"#/definitions/empty"}},"400":{"description":"The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error\'s code, message, and cause fields can be inspected for further information","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":{"details":{"context":"(root)","field":"(root)","property":"fooField3"},"field":"(root)","message":"(root): fooField3 is required","type":"required","value":{"fooField":"abc","fooField2":"def"}},"causeMessage":"schema validation failed","code":"COULD_NOT_VALIDATE","message":"The supplied request contains an invalid document","requestId":"ac6766d6-3a09-44b3-8d8a-1b541d97fdd9"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"401":{"description":"The supplied session does not have the correct access rights to request this resource","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"cause":"","causeMessage":"","code":"UNAUTHORIZED","message":"The request could not be completed. The session is not authorized or the credentials are invalid","requestId":"0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"404":{"description":"The requested resource does not exist","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{"id":"71a3000f-7dda-491a-9b90-a19f4ee6c406"}},"cause":null,"causeMessage":"","code":"NOT_FOUND","message":"The resource requested was not found or is no longer available","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}},"429":{"description":"The resource requested is rate limited and the rate limit has been exceeded","schema":{"$ref":"#/definitions/apiErrorEnvelope"},"examples":{"application/json":{"error":{"args":{"urlVars":{}},"causeMessage":"you have hit a rate limit in the requested operation","code":"RATE_LIMITED","message":"The resource is rate limited and the rate limit has been exceeded. Please try again later","requestId":"270908d6-f2ef-4577-b973-67bec18ae376"},"meta":{"apiEnrollmentVersion":"0.0.1","apiVersion":"0.0.1"}}}}}},"parameters":[{"type":"string","description":"The id of the requested resource","name":"id","in":"path","required":true}]},"/version":{"get":{"security":[],"tags":["Informational"],"summary":"Returns version information","operationId":"listVersion","responses":{"200":{"description":"Version information for the controller","schema":{"$ref":"#/definitions/listVersionEnvelope"}}}}}},"definitions":{"apiAddress":{"type":"object","properties":{"url":{"type":"string"},"version":{"type":"string"}}},"apiAddressArray":{"type":"array","items":{"$ref":"#/definitions/apiAddress"}},"apiAddressList":{"type":"object","additionalProperties":{"$ref":"#/definitions/apiAddressArray"}},"apiError":{"type":"object","properties":{"args":{"$ref":"#/definitions/apiErrorArgs"},"cause":{"$ref":"#/definitions/apiErrorCause"},"causeMessage":{"type":"string"},"code":{"type":"string"},"data":{"type":"object","additionalProperties":true},"message":{"type":"string"},"requestId":{"type":"string"}}},"apiErrorArgs":{"type":"object","properties":{"urlVars":{"type":"object","additionalProperties":{"type":"string"}}}},"apiErrorCause":{"allOf":[{"$ref":"#/definitions/apiFieldError"},{"$ref":"#/definitions/apiError"}]},"apiErrorEnvelope":{"type":"object","required":["meta","error"],"properties":{"error":{"$ref":"#/definitions/apiError"},"meta":{"$ref":"#/definitions/meta"}}},"apiFieldError":{"type":"object","properties":{"field":{"type":"string"},"reason":{"type":"string"},"value":{"description":"can be any value - string, number, boolean, array or object"}}},"apiSessionDetail":{"description":"An API Session object","type":"object","allOf":[{"$ref":"#/definitions/baseEntity"},{"type":"object","required":["token","identity","identityId","configTypes","ipAddress","authQueries","cachedUpdatedAt","isMfaRequired","isMfaComplete","authenticatorId","isCertExtendable"],"properties":{"authQueries":{"$ref":"#/definitions/authQueryList"},"authenticatorId":{"type":"string"},"cachedLastActivityAt":{"type":"string","format":"date-time"},"configTypes":{"type":"array","items":{"type":"string"}},"identity":{"$ref":"#/definitions/entityRef"},"identityId":{"type":"string"},"ipAddress":{"type":"string"},"isCertExtendable":{"type":"boolean"},"isMfaComplete":{"type":"boolean"},"isMfaRequired":{"type":"boolean"},"lastActivityAt":{"type":"string","format":"date-time"},"token":{"type":"string"}}}]},"apiSessionList":{"type":"array","items":{"$ref":"#/definitions/apiSessionDetail"}},"apiSessionPostureData":{"type":"object","required":["mfa"],"properties":{"endpointState":{"$ref":"#/definitions/postureDataEndpointState"},"mfa":{"$ref":"#/definitions/postureDataMfa"},"sdkInfo":{"$ref":"#/definitions/sdkInfo"}}},"apiVersion":{"type":"object","required":["path"],"properties":{"apiBaseUrls":{"type":"array","items":{"type":"string"}},"path":{"type":"string"},"version":{"type":"string"}}},"attributes":{"description":"A set of strings used to loosly couple this resource to policies","type":"array","items":{"type":"string"},"x-nullable":true,"x-omitempty":true},"authPolicyCreate":{"description":"A Auth Policy resource","type":"object","required":["name","primary","secondary"],"properties":{"name":{"type":"string"},"primary":{"$ref":"#/definitions/authPolicyPrimary"},"secondary":{"$ref":"#/definitions/authPolicySecondary"},"tags":{"$ref":"#/definitions/tags"}}},"authPolicyDetail":{"description":"A Auth Policy resource","type":"object","allOf":[{"$ref":"#/definitions/baseEntity"},{"type":"object","required":["name","primary","secondary"],"properties":{"name":{"type":"string"},"primary":{"$ref":"#/definitions/authPolicyPrimary"},"secondary":{"$ref":"#/definitions/authPolicySecondary"}}}]},"authPolicyList":{"description":"An array of Auth Policies resources","type":"array","items":{"$ref":"#/definitions/authPolicyDetail"}},"authPolicyPatch":{"description":"A Auth Policy resource","type":"object","properties":{"name":{"type":"string","x-nullable":true},"primary":{"$ref":"#/definitions/authPolicyPrimaryPatch"},"secondary":{"$ref":"#/definitions/authPolicySecondaryPatch"},"tags":{"$ref":"#/definitions/tags"}}},"authPolicyPrimary":{"type":"object","required":["updb","cert","extJwt"],"properties":{"cert":{"$ref":"#/definitions/authPolicyPrimaryCert"},"extJwt":{"$ref":"#/definitions/authPolicyPrimaryExtJwt"},"updb":{"$ref":"#/definitions/authPolicyPrimaryUpdb"}}},"authPolicyPrimaryCert":{"type":"object","required":["allowed","allowExpiredCerts"],"properties":{"allowExpiredCerts":{"type":"boolean"},"allowed":{"type":"boolean"}}},"authPolicyPrimaryCertPatch":{"type":"object","properties":{"allowExpiredCerts":{"type":"boolean","x-nullable":true},"allowed":{"type":"boolean","x-nullable":true}},"x-nullable":true},"authPolicyPrimaryExtJwt":{"type":"object","required":["allowed","allowedSigners"],"properties":{"allowed":{"type":"boolean"},"allowedSigners":{"type":"array","items":{"type":"string"}}}},"authPolicyPrimaryExtJwtPatch":{"type":"object","properties":{"allowed":{"type":"boolean","x-nullable":true},"allowedSigners":{"type":"array","items":{"type":"string"},"x-nullable":true}},"x-nullable":true},"authPolicyPrimaryPatch":{"type":"object","properties":{"cert":{"$ref":"#/definitions/authPolicyPrimaryCertPatch"},"extJwt":{"$ref":"#/definitions/authPolicyPrimaryExtJwtPatch"},"updb":{"$ref":"#/definitions/authPolicyPrimaryUpdbPatch"}}},"authPolicyPrimaryUpdb":{"type":"object","required":["allowed","minPasswordLength","requireSpecialChar","requireNumberChar","requireMixedCase","maxAttempts","lockoutDurationMinutes"],"properties":{"allowed":{"type":"boolean"},"lockoutDurationMinutes":{"type":"integer"},"maxAttempts":{"type":"integer"},"minPasswordLength":{"type":"integer"},"requireMixedCase":{"type":"boolean"},"requireNumberChar":{"type":"boolean"},"requireSpecialChar":{"type":"boolean"}}},"authPolicyPrimaryUpdbPatch":{"type":"object","properties":{"allowed":{"type":"boolean","x-nullable":true},"lockoutDurationMinutes":{"type":"integer","x-nullable":true},"maxAttempts":{"type":"integer","x-nullable":true},"minPasswordLength":{"type":"integer","x-nullable":true},"requireMixedCase":{"type":"boolean","x-nullable":true},"requireNumberChar":{"type":"boolean","x-nullable":true},"requireSpecialChar":{"type":"boolean","x-nullable":true}},"x-nullable":true},"authPolicySecondary":{"type":"object","required":["requireTotp"],"properties":{"requireExtJwtSigner":{"type":"string","x-nullable":true,"x-omit-empty":false},"requireTotp":{"type":"boolean"}}},"authPolicySecondaryPatch":{"type":"object","properties":{"requireExtJwtSigner":{"type":"string","x-nullable":true},"requireTotp":{"type":"boolean","x-nullable":true}},"x-nullable":true},"authPolicyUpdate":{"$ref":"#/definitions/authPolicyCreate"},"authQueryDetail":{"type":"object","required":["provider"],"properties":{"clientId":{"type":"string"},"format":{"$ref":"#/definitions/mfaFormats"},"httpMethod":{"type":"string"},"httpUrl":{"type":"string"},"id":{"type":"string"},"maxLength":{"type":"integer"},"minLength":{"type":"integer"},"provider":{"$ref":"#/definitions/mfaProviders"},"scopes":{"type":"array","items":{"type":"string"}},"typeId":{"$ref":"#/definitions/authQueryType"}}},"authQueryList":{"type":"array","items":{"$ref":"#/definitions/authQueryDetail"}},"authQueryType":{"type":"string","enum":["MFA","TOTP","EXT-JWT"]},"authenticate":{"description":"A generic authenticate object meant for use with the /authenticate path. Required fields depend on authentication method.","type":"object","properties":{"configTypes":{"$ref":"#/definitions/configTypes"},"envInfo":{"$ref":"#/definitions/envInfo"},"password":{"$ref":"#/definitions/password"},"sdkInfo":{"$ref":"#/definitions/sdkInfo"},"username":{"$ref":"#/definitions/username"}}},"authenticatorCreate":{"description":"Creates an authenticator for a specific identity which can be used for API authentication","type":"object","required":["method","identityId"],"properties":{"certPem":{"description":"The client certificate the identity will login with. Used only for method=\'cert\'","type":"string"},"identityId":{"description":"The id of an existing identity that will be assigned this authenticator","type":"string"},"method":{"description":"The type of authenticator to create; which will dictate which properties on this object are required.","type":"string"},"password":{"description":"The password the identity will login with. Used only for method=\'updb\'","type":"string"},"tags":{"$ref":"#/definitions/tags"},"username":{"description":"The username that the identity will login with. Used only for method=\'updb\'","type":"string"}}},"authenticatorDetail":{"description":"A singular authenticator resource","type":"object","allOf":[{"$ref":"#/definitions/baseEntity"},{"type":"object","required":["method","identityId","identity"],"properties":{"certPem":{"type":"string"},"fingerprint":{"type":"string"},"identity":{"$ref":"#/definitions/entityRef"},"identityId":{"type":"string"},"isIssuedByNetwork":{"type":"boolean"},"method":{"type":"string"},"username":{"type":"string"}}}]},"authenticatorList":{"description":"An array of authenticator resources","type":"array","items":{"$ref":"#/definitions/authenticatorDetail"}},"authenticatorPatch":{"description":"All of the fields on an authenticator that may be updated","type":"object","properties":{"password":{"$ref":"#/definitions/passwordNullable"},"tags":{"$ref":"#/definitions/tags"},"username":{"$ref":"#/definitions/usernameNullable"}}},"authenticatorPatchWithCurrent":{"description":"All of the fields on an authenticator that may be updated","type":"object","allOf":[{"$ref":"#/definitions/authenticatorPatch"},{"type":"object","required":["currentPassword"],"properties":{"currentPassword":{"$ref":"#/definitions/password"}}}]},"authenticatorUpdate":{"description":"All of the fields on an authenticator that will be updated","type":"object","required":["username","password"],"properties":{"password":{"$ref":"#/definitions/password"},"tags":{"$ref":"#/definitions/tags"},"username":{"$ref":"#/definitions/username"}}},"authenticatorUpdateWithCurrent":{"description":"All of the fields on an authenticator that will be updated","type":"object","allOf":[{"$ref":"#/definitions/authenticatorUpdate"},{"type":"object","required":["currentPassword"],"properties":{"currentPassword":{"$ref":"#/definitions/password"}}}]},"baseEntity":{"description":"Fields shared by all Edge API entities","type":"object","required":["id","createdAt","updatedAt","_links"],"properties":{"_links":{"$ref":"#/definitions/links"},"createdAt":{"type":"string","format":"date-time"},"id":{"type":"string"},"tags":{"$ref":"#/definitions/tags"},"updatedAt":{"type":"string","format":"date-time"}}},"caCreate":{"description":"A create Certificate Authority (CA) object","type":"object","required":["name","certPem","isAutoCaEnrollmentEnabled","isOttCaEnrollmentEnabled","isAuthEnabled","identityRoles"],"properties":{"certPem":{"type":"string","example":"-----BEGIN CERTIFICATE-----\\nMIICUjCCAdmgAwIBAgIJANooo7NB+dZZMAoGCCqGSM49BAMCMF4xCzAJBgNVBAYT\\nAlVTMQswCQYDVQQIDAJOQzETMBEGA1UECgwKTmV0Rm91bmRyeTEtMCsGA1UEAwwk\\nTmV0Rm91bmRyeSBaaXRpIEV4dGVybmFsIEFQSSBSb290IENBMB4XDTE4MTExNTEy\\nNTcwOVoXDTM4MTExMDEyNTcwOVowXjELMAkGA1UEBhMCVVMxCzAJBgNVBAgMAk5D\\nMRMwEQYDVQQKDApOZXRGb3VuZHJ5MS0wKwYDVQQDDCROZXRGb3VuZHJ5IFppdGkg\\nRXh0ZXJuYWwgQVBJIFJvb3QgQ0EwdjAQBgcqhkjOPQIBBgUrgQQAIgNiAARwq61Z\\nIaqbaw0PDt3frJZaHjkxfZhwYrykI1GlbRNd/jix03lVG9qvpN5Og9fQfFFcFmD/\\n3vCE9S6O0npm0mADQxcBcxbMRAH5dtBuCuiJW6qAAbPgiM32vqSxBiFt0KejYzBh\\nMB0GA1UdDgQWBBRx1OVGuc/jdltDc8YBtkw8Tbr4fjAfBgNVHSMEGDAWgBRx1OVG\\nuc/jdltDc8YBtkw8Tbr4fjAPBgNVHRMBAf8EBTADAQH/MA4GA1UdDwEB/wQEAwIB\\nhjAKBggqhkjOPQQDAgNnADBkAjBDRxNZUaIVpkQKnAgJukl3ysd3/i7Z6hDyIEms\\nkllz/+ZvmdBp9iedV5o5BvJUggACMCv+UBFlJH7pmsOCo/F45Kk178YsCC7gaMxE\\n1ZG1zveyMvsYsH04C9FndE6w2MLvlA==\\n-----END CERTIFICATE-----\\n"},"externalIdClaim":{"$ref":"#/definitions/externalIdClaim"},"identityNameFormat":{"type":"string"},"identityRoles":{"$ref":"#/definitions/roles"},"isAuthEnabled":{"type":"boolean","example":true},"isAutoCaEnrollmentEnabled":{"type":"boolean","example":true},"isOttCaEnrollmentEnabled":{"type":"boolean","example":true},"name":{"type":"string","example":"Test 3rd Party External CA"},"tags":{"$ref":"#/definitions/tags"}}},"caDetail":{"description":"A Certificate Authority (CA) resource","type":"object","allOf":[{"$ref":"#/definitions/baseEntity"},{"type":"object","required":["name","fingerprint","certPem","isVerified","isAutoCaEnrollmentEnabled","isOttCaEnrollmentEnabled","isAuthEnabled","identityRoles","identityNameFormat"],"properties":{"certPem":{"type":"string"},"externalIdClaim":{"$ref":"#/definitions/externalIdClaim"},"fingerprint":{"type":"string"},"identityNameFormat":{"type":"string"},"identityRoles":{"$ref":"#/definitions/roles"},"isAuthEnabled":{"type":"boolean","example":true},"isAutoCaEnrollmentEnabled":{"type":"boolean","example":true},"isOttCaEnrollmentEnabled":{"type":"boolean","example":true},"isVerified":{"type":"boolean","example":false},"name":{"type":"string"},"verificationToken":{"type":"string","format":"uuid"}}}]},"caList":{"description":"An array of Certificate Authority (CA) resources","type":"array","items":{"$ref":"#/definitions/caDetail"}},"caPatch":{"type":"object","properties":{"externalIdClaim":{"$ref":"#/definitions/externalIdClaimPatch"},"identityNameFormat":{"type":"string","x-nullable":true},"identityRoles":{"$ref":"#/definitions/roles"},"isAuthEnabled":{"type":"boolean","x-nullable":true,"example":true},"isAutoCaEnrollmentEnabled":{"type":"boolean","x-nullable":true,"example":true},"isOttCaEnrollmentEnabled":{"type":"boolean","x-nullable":true,"example":true},"name":{"type":"string","x-nullable":true,"example":"My CA"},"tags":{"$ref":"#/definitions/tags"}}},"caUpdate":{"type":"object","required":["name","isAutoCaEnrollmentEnabled","isOttCaEnrollmentEnabled","isAuthEnabled","identityRoles","identityNameFormat"],"properties":{"externalIdClaim":{"$ref":"#/definitions/externalIdClaim"},"identityNameFormat":{"type":"string"},"identityRoles":{"$ref":"#/definitions/roles"},"isAuthEnabled":{"type":"boolean","example":true},"isAutoCaEnrollmentEnabled":{"type":"boolean","example":true},"isOttCaEnrollmentEnabled":{"type":"boolean","example":true},"name":{"type":"string","example":"My CA"},"tags":{"$ref":"#/definitions/tags"}}},"capabilities":{"type":"string","enum":["OIDC_AUTH","HA_CONTROLLER"]},"commonEdgeRouterProperties":{"type":"object","required":["hostname","name","supportedProtocols","syncStatus","isOnline","cost","noTraversal","disabled"],"properties":{"appData":{"$ref":"#/definitions/tags"},"cost":{"type":"integer","maximum":65535,"minimum":0,"x-nullable":true},"disabled":{"type":"boolean"},"hostname":{"type":"string"},"isOnline":{"type":"boolean"},"name":{"type":"string"},"noTraversal":{"type":"boolean","x-nullable":true},"supportedProtocols":{"type":"object","additionalProperties":{"type":"string"}},"syncStatus":{"type":"string"}}},"configCreate":{"description":"A config create object","type":"object","required":["name","configTypeId","data"],"properties":{"configTypeId":{"description":"The id of a config-type that the data section will match","type":"string"},"data":{"description":"Data payload is defined by the schema of the config-type defined in the type parameter","type":"object","additionalProperties":true,"x-nullable":false},"name":{"type":"string","example":"default.ziti-tunneler-server.v1"},"tags":{"$ref":"#/definitions/tags"}},"example":{"configTypeId":"cea49285-6c07-42cf-9f52-09a9b115c783","data":{"hostname":"example.com","port":80},"name":"test-config"}},"configDetail":{"description":"A config resource","type":"object","allOf":[{"$ref":"#/definitions/baseEntity"},{"type":"object","required":["name","configTypeId","configType","data"],"properties":{"configType":{"$ref":"#/definitions/entityRef"},"configTypeId":{"type":"string"},"data":{"description":"The data section of a config is based on the schema of its type","type":"object"},"name":{"type":"string"}}}]},"configList":{"description":"An array of config resources","type":"array","items":{"$ref":"#/definitions/configDetail"}},"configPatch":{"description":"A config patch object","type":"object","properties":{"data":{"description":"Data payload is defined by the schema of the config-type defined in the type parameter","type":"object","additionalProperties":true},"name":{"type":"string","example":"default.ziti-tunneler-server.v1"},"tags":{"$ref":"#/definitions/tags"}},"example":{"data":{"hostname":"example.com","port":80},"name":"example-config-name"}},"configTypeCreate":{"description":"A config-type create object","type":"object","required":["name"],"properties":{"name":{"type":"string","example":"ziti-tunneler-server.v1"},"schema":{"description":"A JSON schema to enforce configuration against","type":"object","additionalProperties":true},"tags":{"$ref":"#/definitions/tags"}}},"configTypeDetail":{"description":"A config-type resource","type":"object","allOf":[{"$ref":"#/definitions/baseEntity"},{"type":"object","required":["name","schema"],"properties":{"name":{"type":"string","example":"ziti-tunneler-server.v1"},"schema":{"description":"A JSON schema to enforce configuration against","type":"object","additionalProperties":true}}}]},"configTypeList":{"description":"An array of config-type resources","type":"array","items":{"$ref":"#/definitions/configTypeDetail"}},"configTypePatch":{"description":"A config-type patch object","type":"object","properties":{"name":{"type":"string","example":"ziti-tunneler-server.v1"},"schema":{"description":"A JSON schema to enforce configuration against","type":"object","additionalProperties":true},"tags":{"$ref":"#/definitions/tags"}}},"configTypeUpdate":{"description":"A config-type update object","type":"object","required":["name"],"properties":{"name":{"type":"string","example":"ziti-tunneler-server.v1"},"schema":{"description":"A JSON schema to enforce configuration against","type":"object","additionalProperties":true},"tags":{"$ref":"#/definitions/tags"}}},"configTypes":{"description":"Specific configuration types that should be returned","type":"array","items":{"type":"string"}},"configUpdate":{"description":"A config update object","type":"object","required":["name","data"],"properties":{"data":{"description":"Data payload is defined by the schema of the config-type defined in the type parameter","type":"object","additionalProperties":true,"x-nullable":false},"name":{"type":"string","example":"default.ziti-tunneler-server.v1"},"tags":{"$ref":"#/definitions/tags"}},"example":{"data":{"hostname":"example.com","port":80},"name":"example-config-name"}},"controllerDetail":{"description":"A controller resource","type":"object","allOf":[{"$ref":"#/definitions/baseEntity"},{"type":"object","required":["name","certPem","fingerprint","isOnline","lastJoinedAt"],"properties":{"apiAddresses":{"$ref":"#/definitions/apiAddressList"},"certPem":{"type":"string"},"ctrlAddress":{"type":"string","x-nullable":true},"fingerprint":{"type":"string"},"isOnline":{"type":"boolean"},"lastJoinedAt":{"type":"string","format":"date-time"},"name":{"type":"string"}}}]},"controllersList":{"description":"An array of controller resources","type":"array","items":{"$ref":"#/definitions/controllerDetail"}},"createEnvelope":{"type":"object","properties":{"data":{"$ref":"#/definitions/createLocation"},"meta":{"$ref":"#/definitions/meta"}}},"createLocation":{"type":"object","properties":{"_links":{"$ref":"#/definitions/links"},"id":{"type":"string"}}},"currentApiSessionDetail":{"description":"An API Session object for the current API session","type":"object","allOf":[{"$ref":"#/definitions/apiSessionDetail"},{"type":"object","required":["expiresAt","expirationSeconds"],"properties":{"expirationSeconds":{"type":"integer"},"expiresAt":{"type":"string","format":"date-time"}}}]},"currentApiSessionDetailEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/currentApiSessionDetail"},"meta":{"$ref":"#/definitions/meta"}}},"currentIdentityDetailEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/identityDetail"},"meta":{"$ref":"#/definitions/meta"}}},"dataIntegrityCheckDetail":{"type":"object","required":["description","fixed"],"properties":{"description":{"type":"string"},"fixed":{"type":"boolean"}}},"dataIntegrityCheckDetailList":{"type":"array","items":{"$ref":"#/definitions/dataIntegrityCheckDetail"}},"dataIntegrityCheckDetails":{"type":"object","required":["inProgress","fixingErrors","tooManyErrors","startTime","endTime","error","results"],"properties":{"endTime":{"type":"string","format":"date-time"},"error":{"type":"string"},"fixingErrors":{"type":"boolean"},"inProgress":{"type":"boolean"},"results":{"$ref":"#/definitions/dataIntegrityCheckDetailList"},"startTime":{"type":"string","format":"date-time"},"tooManyErrors":{"type":"boolean"}}},"dataIntegrityCheckResultEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/dataIntegrityCheckDetails"},"meta":{"$ref":"#/definitions/meta"}}},"detailApiSessionEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/apiSessionDetail"},"meta":{"$ref":"#/definitions/meta"}}},"detailAuthPolicyEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/authPolicyDetail"},"meta":{"$ref":"#/definitions/meta"}}},"detailAuthenticatorEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/authenticatorDetail"},"meta":{"$ref":"#/definitions/meta"}}},"detailCaEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/caDetail"},"meta":{"$ref":"#/definitions/meta"}}},"detailConfigEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/configDetail"},"meta":{"$ref":"#/definitions/meta"}}},"detailConfigTypeEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/configTypeDetail"},"meta":{"$ref":"#/definitions/meta"}}},"detailEdgeRouterPolicyEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/edgeRouterPolicyDetail"},"meta":{"$ref":"#/definitions/meta"}}},"detailEnrollmentEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/enrollmentDetail"},"meta":{"$ref":"#/definitions/meta"}}},"detailExternalJwtSignerEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/externalJwtSignerDetail"},"meta":{"$ref":"#/definitions/meta"}}},"detailIdentityEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/identityDetail"},"meta":{"$ref":"#/definitions/meta"}}},"detailIdentityTypeEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/identityTypeDetail"},"meta":{"$ref":"#/definitions/meta"}}},"detailMfa":{"type":"object","allOf":[{"$ref":"#/definitions/baseEntity"},{"required":["isVerified"],"properties":{"isVerified":{"type":"boolean"},"provisioningUrl":{"description":"Not provided if MFA verification has been completed","type":"string"},"recoveryCodes":{"description":"Not provided if MFA verification has been completed","type":"array","items":{"type":"string"}}}}]},"detailMfaEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/detailMfa"},"meta":{"$ref":"#/definitions/meta"}}},"detailMfaRecoveryCodes":{"type":"object","allOf":[{"$ref":"#/definitions/baseEntity"},{"required":["recoveryCodes"],"properties":{"recoveryCodes":{"type":"array","items":{"type":"string"}}}}]},"detailMfaRecoveryCodesEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/detailMfaRecoveryCodes"},"meta":{"$ref":"#/definitions/meta"}}},"detailPostureCheckEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/postureCheckDetail"},"meta":{"$ref":"#/definitions/meta"}}},"detailPostureCheckTypeEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/postureCheckTypeDetail"},"meta":{"$ref":"#/definitions/meta"}}},"detailRouterEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/routerDetail"},"meta":{"$ref":"#/definitions/meta"}}},"detailServiceEdgePolicyEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/serviceEdgeRouterPolicyDetail"},"meta":{"$ref":"#/definitions/meta"}}},"detailServiceEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/serviceDetail"},"meta":{"$ref":"#/definitions/meta"}}},"detailServicePolicyEnvelop":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/servicePolicyDetail"},"meta":{"$ref":"#/definitions/meta"}}},"detailSessionManagementEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/sessionManagementDetail"},"meta":{"$ref":"#/definitions/meta"}}},"detailSessionRoutePathEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/sessionRoutePathDetail"},"meta":{"$ref":"#/definitions/meta"}}},"detailSpecBodyEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/specBodyDetail"},"meta":{"$ref":"#/definitions/meta"}}},"detailSpecEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/specDetail"},"meta":{"$ref":"#/definitions/meta"}}},"detailTerminatorEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/terminatorDetail"},"meta":{"$ref":"#/definitions/meta"}}},"detailedEdgeRouterEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/edgeRouterDetail"},"meta":{"$ref":"#/definitions/meta"}}},"dialBind":{"type":"string","enum":["Dial","Bind","Invalid"]},"dialBindArray":{"type":"array","items":{"$ref":"#/definitions/dialBind"}},"disableParams":{"type":"object","required":["durationMinutes"],"properties":{"durationMinutes":{"type":"integer"}}},"edgeRouterCreate":{"description":"An edge router create object","type":"object","required":["name"],"properties":{"appData":{"$ref":"#/definitions/tags"},"cost":{"type":"integer","maximum":65535,"minimum":0,"x-nullable":true},"disabled":{"type":"boolean","x-nullable":true},"isTunnelerEnabled":{"type":"boolean"},"name":{"type":"string"},"noTraversal":{"type":"boolean","x-nullable":true},"roleAttributes":{"$ref":"#/definitions/attributes"},"tags":{"$ref":"#/definitions/tags"}}},"edgeRouterDetail":{"description":"A detail edge router resource","type":"object","allOf":[{"$ref":"#/definitions/baseEntity"},{"$ref":"#/definitions/commonEdgeRouterProperties"},{"type":"object","required":["isVerified","roleAttributes","os","version","arch","buildDate","revision","isTunnelerEnabled"],"properties":{"certPem":{"type":"string","x-nullable":true,"x-omitempty":false},"enrollmentCreatedAt":{"type":"string","format":"date-time","x-nullable":true},"enrollmentExpiresAt":{"type":"string","format":"date-time","x-nullable":true},"enrollmentJwt":{"type":"string","x-nullable":true},"enrollmentToken":{"type":"string","x-nullable":true},"fingerprint":{"type":"string"},"isTunnelerEnabled":{"type":"boolean"},"isVerified":{"type":"boolean"},"roleAttributes":{"$ref":"#/definitions/attributes"},"unverifiedCertPem":{"type":"string","x-nullable":true,"x-omitempty":false},"unverifiedFingerprint":{"type":"string","x-nullable":true,"x-omitempty":false},"versionInfo":{"$ref":"#/definitions/versionInfo"}}}],"example":{"_links":{"edge-router-policies":{"href":"./edge-routers/b0766b8d-bd1a-4d28-8415-639b29d3c83d/edge-routers"},"self":{"href":"./edge-routers/b0766b8d-bd1a-4d28-8415-639b29d3c83d"}},"cost":0,"createdAt":"2020-03-16T17:13:31.5807454Z","enrollmentCreatedAt":"2020-03-16T17:13:31.5777637Z","enrollmentExpiresAt":"2020-03-16T17:18:31.5777637Z","enrollmentJwt":"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbSI6ImVyb3R0IiwiZXhwIjoxNTg0Mzc5MTExLCJpc3MiOiJodHRwczovL 2xvY2FsaG9zdDoxMjgwIiwianRpIjoiMzBhMWYwZWEtZDM5Yi00YWFlLWI4NTItMzA0Y2YxYzMwZDFmIiwic3ViIjoiYjA3NjZiOGQtYmQxYS00ZDI 4LTg0MTUtNjM5YjI5ZDNjODNkIn0.UsyQhCPORQ5tQnYWY7S88LNvV9iFS5Hy-P4aJaClZzEICobKgnQoyQblJcdMvk3cGKwyFqAnQtt0tDZkb8tHz Vqyv6bilHcAFuMRrdwXRqdXquabSN5geu2qBUnyzL7Mf2X85if8sbMida6snB4oLZsVRF3CRn4ODBJdeiVJ_Z4rgD-zW2IwtXPApT7ALyiiw2cN4EH 8pqQ7tpZKqztE0PGEbBQFPGKUFnm7oXyvSUo17EsFJUv5gUlBzfKKGolh5io4ptp22HZrqsqSnqDSOnYEZHonr5Yljuwiktrlh-JKiK6GGns5OAJMP dO9lgM4yHSpF2ILbqhWMV93Y3zMOg","enrollmentToken":"30a1f0ea-d39b-4aae-b852-304cf1c30d1f","fingerprint":null,"hostname":"","id":"b0766b8d-bd1a-4d28-8415-639b29d3c83d","isOnline":false,"isTunnelerEnabled":false,"isVerified":false,"name":"TestRouter-e33c837f-3222-4b40-bcd6-b3458fd5156e","noTraversal":false,"roleAttributes":["eastCoast","sales","test"],"supportedProtocols":{},"tags":{},"updatedAt":"2020-03-16T17:13:31.5807454Z"}},"edgeRouterList":{"description":"A list of edge router resources","type":"array","items":{"$ref":"#/definitions/edgeRouterDetail"}},"edgeRouterPatch":{"description":"An edge router patch object","type":"object","properties":{"appData":{"$ref":"#/definitions/tags"},"cost":{"type":"integer","maximum":65535,"minimum":0,"x-nullable":true},"disabled":{"type":"boolean","x-nullable":true},"isTunnelerEnabled":{"type":"boolean"},"name":{"type":"string","x-nullable":true},"noTraversal":{"type":"boolean","x-nullable":true},"roleAttributes":{"$ref":"#/definitions/attributes"},"tags":{"$ref":"#/definitions/tags"}}},"edgeRouterPolicyCreate":{"required":["name","semantic"],"properties":{"edgeRouterRoles":{"$ref":"#/definitions/roles"},"identityRoles":{"$ref":"#/definitions/roles"},"name":{"type":"string"},"semantic":{"$ref":"#/definitions/semantic"},"tags":{"$ref":"#/definitions/tags"}}},"edgeRouterPolicyDetail":{"type":"object","allOf":[{"$ref":"#/definitions/baseEntity"},{"type":"object","required":["name","semantic","edgeRouterRoles","edgeRouterRolesDisplay","identityRoles","identityRolesDisplay","isSystem"],"properties":{"edgeRouterRoles":{"$ref":"#/definitions/roles"},"edgeRouterRolesDisplay":{"$ref":"#/definitions/namedRoles"},"identityRoles":{"$ref":"#/definitions/roles"},"identityRolesDisplay":{"$ref":"#/definitions/namedRoles"},"isSystem":{"type":"boolean"},"name":{"type":"string"},"semantic":{"$ref":"#/definitions/semantic"}}}]},"edgeRouterPolicyList":{"type":"array","items":{"$ref":"#/definitions/edgeRouterPolicyDetail"}},"edgeRouterPolicyPatch":{"properties":{"edgeRouterRoles":{"$ref":"#/definitions/roles"},"identityRoles":{"$ref":"#/definitions/roles"},"name":{"type":"string"},"semantic":{"$ref":"#/definitions/semantic"},"tags":{"$ref":"#/definitions/tags"}}},"edgeRouterPolicyUpdate":{"required":["name","semantic"],"properties":{"edgeRouterRoles":{"$ref":"#/definitions/roles"},"identityRoles":{"$ref":"#/definitions/roles"},"name":{"type":"string"},"semantic":{"$ref":"#/definitions/semantic"},"tags":{"$ref":"#/definitions/tags"}}},"edgeRouterUpdate":{"description":"An edge router update object","type":"object","required":["name"],"properties":{"appData":{"$ref":"#/definitions/tags"},"cost":{"type":"integer","maximum":65535,"minimum":0,"x-nullable":true},"disabled":{"type":"boolean","x-nullable":true},"isTunnelerEnabled":{"type":"boolean"},"name":{"type":"string"},"noTraversal":{"type":"boolean","x-nullable":true},"roleAttributes":{"$ref":"#/definitions/attributes"},"tags":{"$ref":"#/definitions/tags"}}},"empty":{"type":"object","required":["meta","data"],"properties":{"data":{"type":"object","example":{}},"meta":{"$ref":"#/definitions/meta"}}},"enrollmentCreate":{"type":"object","required":["method","expiresAt","identityId"],"properties":{"caId":{"type":"string","x-nullable":true},"expiresAt":{"type":"string","format":"date-time"},"identityId":{"type":"string"},"method":{"type":"string","enum":["ott","ottca","updb"]},"username":{"type":"string","x-nullable":true}}},"enrollmentDetail":{"description":"An enrollment object. Enrollments are tied to identities and potentially a CA. Depending on the\\nmethod, different fields are utilized. For example ottca enrollments use the `ca` field and updb enrollments\\nuse the username field, but not vice versa.\\n","type":"object","allOf":[{"$ref":"#/definitions/baseEntity"},{"type":"object","required":["token","method","expiresAt","details"],"properties":{"caId":{"type":"string","x-nullable":true},"edgeRouter":{"$ref":"#/definitions/entityRef"},"edgeRouterId":{"type":"string"},"expiresAt":{"type":"string","format":"date-time"},"identity":{"$ref":"#/definitions/entityRef"},"identityId":{"type":"string"},"jwt":{"type":"string"},"method":{"type":"string"},"token":{"type":"string"},"transitRouter":{"$ref":"#/definitions/entityRef"},"transitRouterId":{"type":"string"},"username":{"type":"string"}}}],"example":{"_links":{"self":{"href":"./enrollments/624fa53f-7629-4a7a-9e38-c1f4ce322c1d"}},"ca":null,"createdAt":"0001-01-01T00:00:00Z","expiresAt":"2020-03-11T20:20:24.0055543Z","id":"624fa53f-7629-4a7a-9e38-c1f4ce322c1d","identity":{"_links":{"self":{"href":"./identities/f047ac96-dc3a-408a-a6f2-0ba487c08ef9"}},"id":"f047ac96-dc3a-408a-a6f2-0ba487c08ef9","name":"updb--0f245140-7f2e-4326-badf-6aba55e52475","urlName":"identities"},"method":"updb","tags":null,"token":"1e727c8f-07e4-4a1d-a8b0-da0c7a01c6e1","updatedAt":"0001-01-01T00:00:00Z","username":"example-username"}},"enrollmentList":{"description":"An array of enrollment resources","type":"array","items":{"$ref":"#/definitions/enrollmentDetail"}},"enrollmentRefresh":{"type":"object","required":["expiresAt"],"properties":{"expiresAt":{"type":"string","format":"date-time"}}},"entityRef":{"description":"A reference to another resource and links to interact with it","type":"object","properties":{"_links":{"$ref":"#/definitions/links"},"entity":{"type":"string"},"id":{"type":"string"},"name":{"type":"string"}}},"envInfo":{"description":"Environment information an authenticating client may provide","type":"object","properties":{"arch":{"type":"string","maxLength":255},"domain":{"type":"string","maxLength":253},"hostname":{"type":"string","maxLength":253},"os":{"type":"string","maxLength":255},"osRelease":{"type":"string","maxLength":255},"osVersion":{"type":"string","maxLength":255}}},"externalIdClaim":{"type":"object","required":["location","matcher","matcherCriteria","parser","parserCriteria","index"],"properties":{"index":{"type":"integer","x-nullable":true},"location":{"type":"string","enum":["COMMON_NAME","SAN_URI","SAN_EMAIL"],"x-nullable":true},"matcher":{"type":"string","enum":["ALL","PREFIX","SUFFIX","SCHEME"],"x-nullable":true},"matcherCriteria":{"type":"string","x-nullable":true},"parser":{"type":"string","enum":["NONE","SPLIT"],"x-nullable":true},"parserCriteria":{"type":"string","x-nullable":true}}},"externalIdClaimPatch":{"type":"object","properties":{"index":{"type":"integer","x-nullable":true},"location":{"type":"string","enum":["COMMON_NAME","SAN_URI","SAN_EMAIL"],"x-nullable":true},"matcher":{"type":"string","enum":["ALL","PREFIX","SUFFIX","SCHEME"],"x-nullable":true},"matcherCriteria":{"type":"string","x-nullable":true},"parser":{"type":"string","enum":["NONE","SPLIT"],"x-nullable":true},"parserCriteria":{"type":"string","x-nullable":true}}},"externalJwtSignerCreate":{"description":"A create Certificate Authority (CA) object","type":"object","required":["name","enabled","issuer","audience"],"properties":{"audience":{"type":"string","x-nullable":true},"certPem":{"type":"string","x-nullable":true},"claimsProperty":{"type":"string","x-nullable":true},"clientId":{"type":"string","x-nullable":true},"enabled":{"type":"boolean"},"externalAuthUrl":{"type":"string","format":"url","x-nullable":true},"issuer":{"type":"string"},"jwksEndpoint":{"type":"string","format":"uri","x-nullable":true},"kid":{"type":"string","x-nullable":true},"name":{"type":"string","example":"MyApps Signer"},"scopes":{"type":"array","items":{"type":"string"},"x-nullable":true},"tags":{"$ref":"#/definitions/tags"},"useExternalId":{"type":"boolean","x-nullable":true}}},"externalJwtSignerDetail":{"description":"A External JWT Signer resource","type":"object","allOf":[{"$ref":"#/definitions/baseEntity"},{"type":"object","required":["name","certPem","jwksEndpoint","enabled","fingerprint","commonName","notAfter","notBefore","externalAuthUrl","claimsProperty","useExternalId","kid","issuer","audience","clientId","scopes"],"properties":{"audience":{"type":"string"},"certPem":{"type":"string","x-nullable":true},"claimsProperty":{"type":"string"},"clientId":{"type":"string"},"commonName":{"type":"string"},"enabled":{"type":"boolean"},"externalAuthUrl":{"type":"string","format":"url"},"fingerprint":{"type":"string"},"issuer":{"type":"string"},"jwksEndpoint":{"type":"string","format":"uri","x-nullable":true},"kid":{"type":"string"},"name":{"type":"string","example":"MyApps Signer"},"notAfter":{"type":"string","format":"date-time"},"notBefore":{"type":"string","format":"date-time"},"scopes":{"type":"array","items":{"type":"string"}},"useExternalId":{"type":"boolean"}}}]},"externalJwtSignerList":{"description":"An array of External JWT Signers resources","type":"array","items":{"$ref":"#/definitions/externalJwtSignerDetail"}},"externalJwtSignerPatch":{"type":"object","properties":{"audience":{"type":"string","x-nullable":true},"certPem":{"type":"string","x-nullable":true},"claimsProperty":{"type":"string","x-nullable":true},"clientId":{"type":"string","x-nullable":true},"enabled":{"type":"boolean","x-nullable":true},"externalAuthUrl":{"type":"string","format":"url","x-nullable":true},"issuer":{"type":"string","x-nullable":true},"jwksEndpoint":{"type":"string","format":"uri","x-nullable":true},"kid":{"type":"string","x-nullable":true},"name":{"type":"string","x-nullable":true,"example":"MyApps Signer"},"scopes":{"type":"array","items":{"type":"string"}},"tags":{"$ref":"#/definitions/tags"},"useExternalId":{"type":"boolean","x-nullable":true}}},"externalJwtSignerUpdate":{"type":"object","required":["name","enabled","issuer","audience"],"properties":{"audience":{"type":"string","x-nullable":true},"certPem":{"type":"string","x-nullable":true},"claimsProperty":{"type":"string","x-nullable":true},"clientId":{"type":"string","x-nullable":true},"enabled":{"type":"boolean"},"externalAuthUrl":{"type":"string","format":"url","x-nullable":true},"issuer":{"type":"string"},"jwksEndpoint":{"type":"string","format":"uri","x-nullable":true},"kid":{"type":"string","x-nullable":true},"name":{"type":"string","example":"MyApps Signer"},"scopes":{"type":"array","items":{"type":"string"},"x-nullable":true},"tags":{"$ref":"#/definitions/tags"},"useExternalId":{"type":"boolean","x-nullable":true}}},"failedServiceRequest":{"type":"object","properties":{"apiSessionId":{"type":"string"},"policyFailures":{"type":"array","items":{"$ref":"#/definitions/policyFailure"}},"serviceId":{"type":"string"},"serviceName":{"type":"string"},"sessionType":{"$ref":"#/definitions/dialBind"},"when":{"type":"string","format":"date-time"}}},"failedServiceRequestEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/failedServiceRequestList"},"meta":{"$ref":"#/definitions/meta"}}},"failedServiceRequestList":{"type":"array","items":{"$ref":"#/definitions/failedServiceRequest"}},"getIdentityPolicyAdviceEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/policyAdvice"},"meta":{"$ref":"#/definitions/meta"}}},"identityAuthenticators":{"type":"object","properties":{"cert":{"type":"object","properties":{"fingerprint":{"type":"string"},"id":{"type":"string"}}},"updb":{"type":"object","properties":{"id":{"type":"string"},"username":{"type":"string"}}}}},"identityCreate":{"description":"An identity to create","type":"object","required":["name","type","isAdmin"],"properties":{"appData":{"$ref":"#/definitions/tags"},"authPolicyId":{"type":"string","x-nullable":true},"defaultHostingCost":{"$ref":"#/definitions/terminatorCost"},"defaultHostingPrecedence":{"$ref":"#/definitions/terminatorPrecedence"},"enrollment":{"type":"object","properties":{"ott":{"type":"boolean"},"ottca":{"type":"string"},"updb":{"type":"string"}}},"externalId":{"type":"string","x-nullable":true},"isAdmin":{"type":"boolean"},"name":{"type":"string"},"roleAttributes":{"$ref":"#/definitions/attributes"},"serviceHostingCosts":{"$ref":"#/definitions/terminatorCostMap"},"serviceHostingPrecedences":{"$ref":"#/definitions/terminatorPrecedenceMap"},"tags":{"$ref":"#/definitions/tags"},"type":{"$ref":"#/definitions/identityType"}}},"identityDetail":{"description":"Detail of a specific identity","type":"object","allOf":[{"$ref":"#/definitions/baseEntity"},{"type":"object","required":["name","type","typeId","isDefaultAdmin","isAdmin","authenticators","enrollment","envInfo","sdkInfo","roleAttributes","hasEdgeRouterConnection","edgeRouterConnectionStatus","hasApiSession","isMfaEnabled","serviceHostingPrecedences","serviceHostingCosts","defaultHostingCost","authPolicyId","authPolicy","externalId","disabled"],"properties":{"appData":{"$ref":"#/definitions/tags"},"authPolicy":{"$ref":"#/definitions/entityRef"},"authPolicyId":{"type":"string"},"authenticators":{"$ref":"#/definitions/identityAuthenticators"},"defaultHostingCost":{"$ref":"#/definitions/terminatorCost"},"defaultHostingPrecedence":{"$ref":"#/definitions/terminatorPrecedence"},"disabled":{"type":"boolean"},"disabledAt":{"type":"string","format":"date-time","x-nullable":true},"disabledUntil":{"type":"string","format":"date-time","x-nullable":true},"edgeRouterConnectionStatus":{"type":"string","enum":["online","offline","unknown"]},"enrollment":{"$ref":"#/definitions/identityEnrollments"},"envInfo":{"$ref":"#/definitions/envInfo"},"externalId":{"type":"string","x-nullable":true},"hasApiSession":{"type":"boolean"},"hasEdgeRouterConnection":{"type":"boolean"},"isAdmin":{"type":"boolean"},"isDefaultAdmin":{"type":"boolean"},"isMfaEnabled":{"type":"boolean"},"name":{"type":"string"},"roleAttributes":{"$ref":"#/definitions/attributes"},"sdkInfo":{"$ref":"#/definitions/sdkInfo"},"serviceHostingCosts":{"$ref":"#/definitions/terminatorCostMap"},"serviceHostingPrecedences":{"$ref":"#/definitions/terminatorPrecedenceMap"},"type":{"$ref":"#/definitions/entityRef"},"typeId":{"type":"string"}}}]},"identityEnrollments":{"type":"object","properties":{"ott":{"type":"object","properties":{"expiresAt":{"type":"string","format":"date-time"},"id":{"type":"string"},"jwt":{"type":"string"},"token":{"type":"string"}}},"ottca":{"type":"object","properties":{"ca":{"$ref":"#/definitions/entityRef"},"caId":{"type":"string"},"expiresAt":{"type":"string","format":"date-time"},"id":{"type":"string"},"jwt":{"type":"string"},"token":{"type":"string"}}},"updb":{"type":"object","properties":{"expiresAt":{"type":"string","format":"date-time"},"id":{"type":"string"},"jwt":{"type":"string"},"token":{"type":"string"}}}}},"identityExtendCerts":{"type":"object","properties":{"ca":{"description":"A PEM encoded set of CA certificates","type":"string"},"clientCert":{"description":"A PEM encoded client certificate","type":"string"}}},"identityExtendEnrollmentEnvelope":{"type":"object","properties":{"data":{"$ref":"#/definitions/identityExtendCerts"},"meta":{"$ref":"#/definitions/meta"}}},"identityExtendEnrollmentRequest":{"type":"object","required":["clientCertCsr"],"properties":{"clientCertCsr":{"type":"string"}}},"identityExtendValidateEnrollmentRequest":{"type":"object","required":["clientCert"],"properties":{"clientCert":{"description":"A PEM encoded client certificate previously returned after an extension request","type":"string"}}},"identityList":{"description":"A list of identities","type":"array","items":{"$ref":"#/definitions/identityDetail"}},"identityPatch":{"type":"object","properties":{"appData":{"$ref":"#/definitions/tags"},"authPolicyId":{"type":"string","x-nullable":true},"defaultHostingCost":{"$ref":"#/definitions/terminatorCost"},"defaultHostingPrecedence":{"$ref":"#/definitions/terminatorPrecedence"},"externalId":{"type":"string","x-nullable":true},"isAdmin":{"type":"boolean","x-nullable":true},"name":{"type":"string","x-nullable":true},"roleAttributes":{"$ref":"#/definitions/attributes"},"serviceHostingCosts":{"$ref":"#/definitions/terminatorCostMap"},"serviceHostingPrecedences":{"$ref":"#/definitions/terminatorPrecedenceMap"},"tags":{"$ref":"#/definitions/tags"},"type":{"$ref":"#/definitions/identityType"}}},"identityType":{"type":"string","enum":["User","Device","Service","Router","Default"]},"identityTypeDetail":{"type":"object","allOf":[{"$ref":"#/definitions/baseEntity"},{"type":"object","properties":{"name":{"type":"string"}}}]},"identityTypeList":{"type":"array","items":{"$ref":"#/definitions/identityTypeDetail"}},"identityUpdate":{"type":"object","required":["type","name","isAdmin"],"properties":{"appData":{"$ref":"#/definitions/tags"},"authPolicyId":{"type":"string","x-nullable":true},"defaultHostingCost":{"$ref":"#/definitions/terminatorCost"},"defaultHostingPrecedence":{"$ref":"#/definitions/terminatorPrecedence"},"externalId":{"type":"string","x-nullable":true},"isAdmin":{"type":"boolean"},"name":{"type":"string"},"roleAttributes":{"$ref":"#/definitions/attributes"},"serviceHostingCosts":{"$ref":"#/definitions/terminatorCostMap"},"serviceHostingPrecedences":{"$ref":"#/definitions/terminatorPrecedenceMap"},"tags":{"$ref":"#/definitions/tags"},"type":{"$ref":"#/definitions/identityType"}}},"link":{"description":"A link to another resource","type":"object","required":["href"],"properties":{"comment":{"type":"string"},"href":{"type":"string","format":"uri"},"method":{"type":"string"}}},"links":{"description":"A map of named links","type":"object","additionalProperties":{"$ref":"#/definitions/link"},"x-omitempty":false},"listApiSessionsEnvelope":{"required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/apiSessionList"},"meta":{"$ref":"#/definitions/meta"}}},"listAuthPoliciesEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/authPolicyList"},"meta":{"$ref":"#/definitions/meta"}}},"listAuthenticatorsEnvelope":{"type":"object","properties":{"data":{"$ref":"#/definitions/authenticatorList"},"meta":{"$ref":"#/definitions/meta"}}},"listCasEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/caList"},"meta":{"$ref":"#/definitions/meta"}}},"listConfigTypesEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/configTypeList"},"meta":{"$ref":"#/definitions/meta"}}},"listConfigsEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/configList"},"meta":{"$ref":"#/definitions/meta"}}},"listControllersEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/controllersList"},"meta":{"$ref":"#/definitions/meta"}}},"listEdgeRouterPoliciesEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/edgeRouterPolicyList"},"meta":{"$ref":"#/definitions/meta"}}},"listEdgeRoutersEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/edgeRouterList"},"meta":{"$ref":"#/definitions/meta"}}},"listEnrollmentsEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/enrollmentList"},"meta":{"$ref":"#/definitions/meta"}}},"listEnumeratedCapabilitiesEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"type":"array","items":{"$ref":"#/definitions/capabilities"}},"meta":{"$ref":"#/definitions/meta"}}},"listExternalJwtSignersEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/externalJwtSignerList"},"meta":{"$ref":"#/definitions/meta"}}},"listIdentitiesEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/identityList"},"meta":{"$ref":"#/definitions/meta"}}},"listIdentityTypesEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/identityTypeList"},"meta":{"$ref":"#/definitions/meta"}}},"listNetworkJWTsEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/networkJWTList"},"meta":{"$ref":"#/definitions/meta"}}},"listPostureCheckEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"type":"array","items":{"$ref":"#/definitions/postureCheckDetail"}},"meta":{"$ref":"#/definitions/meta"}}},"listPostureCheckTypesEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/postureCheckTypeList"},"meta":{"$ref":"#/definitions/meta"}}},"listRoleAttributesEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/roleAttributesList"},"meta":{"$ref":"#/definitions/meta"}}},"listRoutersEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/routerList"},"meta":{"$ref":"#/definitions/meta"}}},"listServiceConfigsEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/serviceConfigList"},"meta":{"$ref":"#/definitions/meta"}}},"listServiceEdgeRouterPoliciesEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/serviceEdgeRouterPolicyList"},"meta":{"$ref":"#/definitions/meta"}}},"listServicePoliciesEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/servicePolicyList"},"meta":{"$ref":"#/definitions/meta"}}},"listServicesEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/serviceList"},"meta":{"$ref":"#/definitions/meta"}}},"listSessionsManagementEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/sessionManagementList"},"meta":{"$ref":"#/definitions/meta"}}},"listSpecsEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/specList"},"meta":{"$ref":"#/definitions/meta"}}},"listSummaryCounts":{"type":"object","additionalProperties":{"type":"integer"}},"listSummaryCountsEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/listSummaryCounts"},"meta":{"$ref":"#/definitions/meta"}}},"listTerminatorsEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/terminatorList"},"meta":{"$ref":"#/definitions/meta"}}},"listVersionEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/version"},"meta":{"$ref":"#/definitions/meta"}}},"meta":{"type":"object","properties":{"apiEnrollmentVersion":{"type":"string"},"apiVersion":{"type":"string"},"filterableFields":{"type":"array","items":{"type":"string"},"x-omitempty":true},"pagination":{"$ref":"#/definitions/pagination"}}},"mfaCode":{"type":"object","required":["code"],"properties":{"code":{"type":"string"}}},"mfaFormats":{"type":"string","enum":["numeric","alpha","alphaNumeric"]},"mfaProviders":{"type":"string","enum":["ziti","url"]},"namedRole":{"type":"object","properties":{"name":{"type":"string"},"role":{"type":"string"}}},"namedRoles":{"type":"array","items":{"$ref":"#/definitions/namedRole"},"x-omitempty":false},"networkJWT":{"description":"A network JWT","type":"object","allOf":[{"type":"object","required":["name","token"],"properties":{"name":{"type":"string"},"token":{"type":"string"}}}]},"networkJWTList":{"description":"An array of network JWTs","type":"array","items":{"$ref":"#/definitions/networkJWT"}},"operatingSystem":{"type":"object","required":["type","versions"],"properties":{"type":{"$ref":"#/definitions/osType"},"versions":{"type":"array","items":{"type":"string"}}}},"osType":{"type":"string","enum":["Windows","WindowsServer","Android","iOS","Linux","macOS"]},"pagination":{"type":"object","required":["limit","offset","totalCount"],"properties":{"limit":{"type":"number","format":"int64"},"offset":{"type":"number","format":"int64"},"totalCount":{"type":"number","format":"int64"}}},"password":{"type":"string","maxLength":100,"minLength":5},"passwordNullable":{"type":"string","maxLength":100,"minLength":5,"x-nullable":true},"policyAdvice":{"type":"object","properties":{"commonRouters":{"type":"array","items":{"$ref":"#/definitions/routerEntityRef"}},"identity":{"$ref":"#/definitions/entityRef"},"identityId":{"type":"string"},"identityRouterCount":{"type":"number","format":"int32"},"isBindAllowed":{"type":"boolean"},"isDialAllowed":{"type":"boolean"},"service":{"$ref":"#/definitions/entityRef"},"serviceId":{"type":"string"},"serviceRouterCount":{"type":"number","format":"int32"}}},"policyFailure":{"type":"object","properties":{"checks":{"type":"array","items":{"$ref":"#/definitions/postureCheckFailure"}},"policyId":{"type":"string"},"policyName":{"type":"string"}}},"postureCheckCreate":{"type":"object","required":["name","typeId"],"properties":{"name":{"type":"string"},"roleAttributes":{"$ref":"#/definitions/attributes"},"tags":{"$ref":"#/definitions/tags"},"typeId":{"$ref":"#/definitions/postureCheckType"}},"discriminator":"typeId"},"postureCheckDetail":{"type":"object","required":["name","typeId","version","roleAttributes","id","createdAt","updatedAt","_links","tags"],"properties":{"_links":{"$ref":"#/definitions/links"},"createdAt":{"type":"string","format":"date-time"},"id":{"type":"string"},"name":{"type":"string"},"roleAttributes":{"$ref":"#/definitions/attributes"},"tags":{"$ref":"#/definitions/tags"},"typeId":{"type":"string"},"updatedAt":{"type":"string","format":"date-time"},"version":{"type":"integer"}},"discriminator":"typeId"},"postureCheckDomainCreate":{"allOf":[{"$ref":"#/definitions/postureCheckCreate"},{"type":"object","required":["domains"],"properties":{"domains":{"type":"array","minItems":1,"items":{"type":"string"}}}}],"x-class":"DOMAIN"},"postureCheckDomainDetail":{"allOf":[{"$ref":"#/definitions/postureCheckDetail"},{"type":"object","required":["domains"],"properties":{"domains":{"type":"array","minItems":1,"items":{"type":"string"}}}}],"x-class":"DOMAIN"},"postureCheckDomainPatch":{"allOf":[{"$ref":"#/definitions/postureCheckPatch"},{"type":"object","properties":{"domains":{"type":"array","minItems":1,"items":{"type":"string"}}}}],"x-class":"DOMAIN"},"postureCheckDomainUpdate":{"allOf":[{"$ref":"#/definitions/postureCheckUpdate"},{"type":"object","required":["domains"],"properties":{"domains":{"type":"array","minItems":1,"items":{"type":"string"}}}}],"x-class":"DOMAIN"},"postureCheckFailure":{"type":"object","required":["postureCheckId","postureCheckName","postureCheckType"],"properties":{"postureCheckId":{"type":"string"},"postureCheckName":{"type":"string"},"postureCheckType":{"type":"string"}},"discriminator":"postureCheckType"},"postureCheckFailureDomain":{"allOf":[{"$ref":"#/definitions/postureCheckFailure"},{"type":"object","required":["actualValue","expectedValue"],"properties":{"actualValue":{"type":"string"},"expectedValue":{"type":"array","items":{"type":"string"}}}}],"x-class":"DOMAIN"},"postureCheckFailureMacAddress":{"allOf":[{"$ref":"#/definitions/postureCheckFailure"},{"type":"object","required":["actualValue","expectedValue"],"properties":{"actualValue":{"type":"array","items":{"type":"string"}},"expectedValue":{"type":"array","items":{"type":"string"}}}}],"x-class":"MAC"},"postureCheckFailureMfa":{"allOf":[{"$ref":"#/definitions/postureCheckFailure"},{"type":"object","required":["actualValue","expectedValue","criteria"],"properties":{"actualValue":{"$ref":"#/definitions/postureChecksFailureMfaValues"},"criteria":{"$ref":"#/definitions/postureChecksFailureMfaCriteria"},"expectedValue":{"$ref":"#/definitions/postureChecksFailureMfaValues"}}}],"x-class":"MFA"},"postureCheckFailureOperatingSystem":{"allOf":[{"$ref":"#/definitions/postureCheckFailure"},{"type":"object","required":["actualValue","expectedValue"],"properties":{"actualValue":{"$ref":"#/definitions/postureCheckFailureOperatingSystemActual"},"expectedValue":{"type":"array","minItems":1,"items":{"$ref":"#/definitions/operatingSystem"}}}}],"x-class":"OS"},"postureCheckFailureOperatingSystemActual":{"type":"object","required":["type","version"],"properties":{"type":{"type":"string"},"version":{"type":"string"}}},"postureCheckFailureProcess":{"allOf":[{"$ref":"#/definitions/postureCheckFailure"},{"type":"object","required":["actualValue","expectedValue"],"properties":{"actualValue":{"$ref":"#/definitions/postureCheckFailureProcessActual"},"expectedValue":{"$ref":"#/definitions/process"}}}],"x-class":"PROCESS"},"postureCheckFailureProcessActual":{"type":"object","required":["isRunning","hash","signerFingerprints"],"properties":{"hash":{"type":"string"},"isRunning":{"type":"boolean"},"osType":{"$ref":"#/definitions/osType"},"path":{"type":"string"},"signerFingerprints":{"type":"array","items":{"type":"string"}}}},"postureCheckFailureProcessMulti":{"allOf":[{"$ref":"#/definitions/postureCheckFailure"},{"type":"object","required":["actualValue","expectedValue","semantic"],"properties":{"actualValue":{"type":"array","items":{"$ref":"#/definitions/postureCheckFailureProcessActual"}},"expectedValue":{"type":"array","items":{"$ref":"#/definitions/processMulti"}},"semantic":{"$ref":"#/definitions/semantic"}}}],"x-class":"PROCESS_MULTI"},"postureCheckMacAddressCreate":{"allOf":[{"$ref":"#/definitions/postureCheckCreate"},{"type":"object","required":["macAddresses"],"properties":{"macAddresses":{"type":"array","minItems":1,"items":{"type":"string"}}}}],"x-class":"MAC"},"postureCheckMacAddressDetail":{"allOf":[{"$ref":"#/definitions/postureCheckDetail"},{"type":"object","required":["macAddresses"],"properties":{"macAddresses":{"type":"array","minItems":1,"items":{"type":"string"}}}}],"x-class":"MAC"},"postureCheckMacAddressPatch":{"allOf":[{"$ref":"#/definitions/postureCheckPatch"},{"type":"object","properties":{"macAddresses":{"type":"array","minItems":1,"items":{"type":"string"}}}}],"x-class":"MAC"},"postureCheckMacAddressUpdate":{"allOf":[{"$ref":"#/definitions/postureCheckUpdate"},{"type":"object","required":["macAddresses"],"properties":{"macAddresses":{"type":"array","minItems":1,"items":{"type":"string"}}}}],"x-class":"MAC"},"postureCheckMfaCreate":{"allOf":[{"$ref":"#/definitions/postureCheckCreate"},{"$ref":"#/definitions/postureCheckMfaProperties"}],"x-class":"MFA"},"postureCheckMfaDetail":{"allOf":[{"$ref":"#/definitions/postureCheckDetail"},{"$ref":"#/definitions/postureCheckMfaProperties"}],"x-class":"MFA"},"postureCheckMfaPatch":{"allOf":[{"$ref":"#/definitions/postureCheckPatch"},{"$ref":"#/definitions/postureCheckMfaPropertiesPatch"}],"x-class":"MFA"},"postureCheckMfaProperties":{"type":"object","properties":{"ignoreLegacyEndpoints":{"type":"boolean"},"promptOnUnlock":{"type":"boolean"},"promptOnWake":{"type":"boolean"},"timeoutSeconds":{"type":"integer"}}},"postureCheckMfaPropertiesPatch":{"type":"object","properties":{"ignoreLegacyEndpoints":{"type":"boolean","x-nullable":true},"promptOnUnlock":{"type":"boolean","x-nullable":true},"promptOnWake":{"type":"boolean","x-nullable":true},"timeoutSeconds":{"type":"integer","x-nullable":true}}},"postureCheckMfaUpdate":{"allOf":[{"$ref":"#/definitions/postureCheckUpdate"},{"$ref":"#/definitions/postureCheckMfaProperties"}],"x-class":"MFA"},"postureCheckOperatingSystemCreate":{"allOf":[{"$ref":"#/definitions/postureCheckCreate"},{"type":"object","required":["operatingSystems"],"properties":{"operatingSystems":{"type":"array","minItems":1,"items":{"$ref":"#/definitions/operatingSystem"}}}}],"x-class":"OS"},"postureCheckOperatingSystemDetail":{"allOf":[{"$ref":"#/definitions/postureCheckDetail"},{"type":"object","required":["operatingSystems"],"properties":{"operatingSystems":{"type":"array","items":{"$ref":"#/definitions/operatingSystem"}}}}],"x-class":"OS"},"postureCheckOperatingSystemPatch":{"allOf":[{"$ref":"#/definitions/postureCheckPatch"},{"type":"object","properties":{"operatingSystems":{"type":"array","minItems":1,"items":{"$ref":"#/definitions/operatingSystem"}}}}],"x-class":"OS"},"postureCheckOperatingSystemUpdate":{"allOf":[{"$ref":"#/definitions/postureCheckUpdate"},{"type":"object","required":["operatingSystems"],"properties":{"operatingSystems":{"type":"array","minItems":1,"items":{"$ref":"#/definitions/operatingSystem"}}}}],"x-class":"OS"},"postureCheckPatch":{"type":"object","required":["typeId"],"properties":{"name":{"type":"string"},"roleAttributes":{"$ref":"#/definitions/attributes"},"tags":{"$ref":"#/definitions/tags"},"typeId":{"$ref":"#/definitions/postureCheckType"}},"discriminator":"typeId"},"postureCheckProcessCreate":{"allOf":[{"$ref":"#/definitions/postureCheckCreate"},{"type":"object","required":["process"],"properties":{"process":{"$ref":"#/definitions/process"}}}],"x-class":"PROCESS"},"postureCheckProcessDetail":{"allOf":[{"$ref":"#/definitions/postureCheckDetail"},{"type":"object","required":["process"],"properties":{"process":{"$ref":"#/definitions/process"}}}],"x-class":"PROCESS"},"postureCheckProcessMultiCreate":{"allOf":[{"$ref":"#/definitions/postureCheckCreate"},{"type":"object","required":["semantic","processes"],"properties":{"processes":{"type":"array","minItems":1,"items":{"$ref":"#/definitions/processMulti"}},"semantic":{"$ref":"#/definitions/semantic"}}}],"x-class":"PROCESS_MULTI"},"postureCheckProcessMultiDetail":{"allOf":[{"$ref":"#/definitions/postureCheckDetail"},{"type":"object","required":["semantic","processes"],"properties":{"processes":{"type":"array","minItems":1,"items":{"$ref":"#/definitions/processMulti"}},"semantic":{"$ref":"#/definitions/semantic"}}}],"x-class":"PROCESS_MULTI"},"postureCheckProcessMultiPatch":{"allOf":[{"$ref":"#/definitions/postureCheckPatch"},{"type":"object","properties":{"processes":{"type":"array","minItems":1,"items":{"$ref":"#/definitions/processMulti"}},"semantic":{"$ref":"#/definitions/semantic"}}}],"x-class":"PROCESS_MULTI"},"postureCheckProcessMultiUpdate":{"allOf":[{"$ref":"#/definitions/postureCheckUpdate"},{"type":"object","required":["semantic","processes"],"properties":{"processes":{"type":"array","minItems":1,"items":{"$ref":"#/definitions/processMulti"}},"semantic":{"$ref":"#/definitions/semantic"}}}],"x-class":"PROCESS_MULTI"},"postureCheckProcessPatch":{"allOf":[{"$ref":"#/definitions/postureCheckPatch"},{"type":"object","properties":{"process":{"$ref":"#/definitions/process"}}}],"x-class":"PROCESS"},"postureCheckProcessUpdate":{"allOf":[{"$ref":"#/definitions/postureCheckUpdate"},{"type":"object","required":["process"],"properties":{"process":{"$ref":"#/definitions/process"}}}],"x-class":"PROCESS"},"postureCheckType":{"type":"string","enum":["OS","PROCESS","DOMAIN","MAC","MFA","PROCESS_MULTI"]},"postureCheckTypeDetail":{"allOf":[{"$ref":"#/definitions/baseEntity"},{"type":"object","required":["name","operatingSystems","version"],"properties":{"name":{"type":"string"},"operatingSystems":{"type":"array","items":{"$ref":"#/definitions/operatingSystem"}},"version":{"type":"string"}}}]},"postureCheckTypeList":{"type":"array","items":{"$ref":"#/definitions/postureCheckTypeDetail"}},"postureCheckUpdate":{"type":"object","required":["name"],"properties":{"name":{"type":"string"},"roleAttributes":{"$ref":"#/definitions/attributes"},"tags":{"$ref":"#/definitions/tags"},"typeId":{"$ref":"#/definitions/postureCheckType"}},"discriminator":"typeId"},"postureChecksFailureMfaCriteria":{"type":"object","required":["passedMfaAt","wokenAt","unlockedAt","timeoutSeconds","timeoutRemainingSeconds"],"properties":{"passedMfaAt":{"type":"string","format":"date-time"},"timeoutRemainingSeconds":{"type":"integer"},"timeoutSeconds":{"type":"integer"},"unlockedAt":{"type":"string","format":"date-time"},"wokenAt":{"type":"string","format":"date-time"}}},"postureChecksFailureMfaValues":{"type":"object","properties":{"passedMfa":{"type":"boolean","x-omitempty":false},"passedOnUnlock":{"type":"boolean","x-omitempty":false},"passedOnWake":{"type":"boolean","x-omitempty":false},"timedOut":{"type":"boolean","x-omitempty":false}}},"postureData":{"type":"object","required":["mac","domain","os","processes","apiSessionPostureData"],"properties":{"apiSessionPostureData":{"type":"object","additionalProperties":{"$ref":"#/definitions/apiSessionPostureData"}},"domain":{"$ref":"#/definitions/postureDataDomain"},"mac":{"$ref":"#/definitions/postureDataMac"},"os":{"$ref":"#/definitions/postureDataOs"},"processes":{"type":"array","items":{"$ref":"#/definitions/postureDataProcess"}}}},"postureDataBase":{"type":"object","required":["postureCheckId","timedOut","lastUpdatedAt"],"properties":{"lastUpdatedAt":{"type":"string","format":"date-time"},"postureCheckId":{"type":"string"},"timedOut":{"type":"boolean"}}},"postureDataDomain":{"type":"object","allOf":[{"$ref":"#/definitions/postureDataBase"},{"type":"object","required":["domain"],"properties":{"domain":{"type":"string"}}}]},"postureDataEndpointState":{"type":"object","required":["wokenAt","unlockedAt"],"properties":{"unlockedAt":{"type":"string","format":"date-time"},"wokenAt":{"type":"string","format":"date-time"}}},"postureDataEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/postureData"},"meta":{"$ref":"#/definitions/meta"}}},"postureDataMac":{"type":"object","allOf":[{"$ref":"#/definitions/postureDataBase"},{"type":"object","required":["addresses"],"properties":{"addresses":{"type":"array","items":{"type":"string"}}}}]},"postureDataMfa":{"type":"object","required":["apiSessionId","passedMfa","passedOnWake","passedOnUnlock","passedAt"],"properties":{"apiSessionId":{"type":"string"},"passedAt":{"type":"string","format":"date-time","x-omitempty":false},"passedMfa":{"type":"boolean","x-omitempty":false},"passedOnUnlock":{"type":"boolean","x-omitempty":false},"passedOnWake":{"type":"boolean","x-omitempty":false}}},"postureDataOs":{"type":"object","allOf":[{"$ref":"#/definitions/postureDataBase"},{"type":"object","required":["type","version","build"],"properties":{"build":{"type":"string"},"type":{"type":"string"},"version":{"type":"string"}}}]},"postureDataProcess":{"type":"object","allOf":[{"$ref":"#/definitions/postureDataBase"},{"type":"object","properties":{"binaryHash":{"type":"string"},"isRunning":{"type":"boolean"},"signerFingerprints":{"type":"array","items":{"type":"string"}}}}]},"postureQueries":{"type":"object","required":["policyId","isPassing","postureQueries"],"properties":{"isPassing":{"type":"boolean"},"policyId":{"type":"string"},"policyType":{"$ref":"#/definitions/dialBind"},"postureQueries":{"type":"array","items":{"$ref":"#/definitions/postureQuery"}}}},"postureQuery":{"type":"object","allOf":[{"$ref":"#/definitions/baseEntity"},{"type":"object","required":["queryType","isPassing","timeout","timeoutRemaining"],"properties":{"isPassing":{"type":"boolean"},"process":{"$ref":"#/definitions/postureQueryProcess"},"processes":{"type":"array","items":{"$ref":"#/definitions/postureQueryProcess"}},"queryType":{"$ref":"#/definitions/postureCheckType"},"timeout":{"type":"integer"},"timeoutRemaining":{"type":"integer"}}}]},"postureQueryProcess":{"type":"object","properties":{"osType":{"$ref":"#/definitions/osType"},"path":{"type":"string"}}},"process":{"type":"object","required":["osType","path"],"properties":{"hashes":{"type":"array","items":{"type":"string"}},"osType":{"$ref":"#/definitions/osType"},"path":{"type":"string"},"signerFingerprint":{"type":"string"}}},"processMulti":{"type":"object","required":["osType","path"],"properties":{"hashes":{"type":"array","items":{"type":"string"}},"osType":{"$ref":"#/definitions/osType"},"path":{"type":"string"},"signerFingerprints":{"type":"array","items":{"type":"string"}}}},"reEnroll":{"type":"object","required":["expiresAt"],"properties":{"expiresAt":{"type":"string","format":"date-time"}}},"roleAttributesList":{"description":"An array of role attributes","type":"array","items":{"type":"string"}},"roles":{"type":"array","items":{"type":"string"},"x-omitempty":false},"routerCreate":{"type":"object","required":["name"],"properties":{"cost":{"type":"integer","maximum":65535,"minimum":0,"x-nullable":true},"disabled":{"type":"boolean","x-nullable":true},"name":{"type":"string"},"noTraversal":{"type":"boolean","x-nullable":true},"tags":{"$ref":"#/definitions/tags"}}},"routerDetail":{"type":"object","allOf":[{"$ref":"#/definitions/baseEntity"},{"type":"object","required":["name","isVerified","isOnline","fingerprint","cost","noTraversal","disabled"],"properties":{"cost":{"type":"integer","maximum":65535,"minimum":0},"disabled":{"type":"boolean"},"enrollmentCreatedAt":{"type":"string","format":"date-time","x-nullable":true},"enrollmentExpiresAt":{"type":"string","format":"date-time","x-nullable":true},"enrollmentJwt":{"type":"string","x-nullable":true},"enrollmentToken":{"type":"string","x-nullable":true},"fingerprint":{"type":"string"},"isOnline":{"type":"boolean"},"isVerified":{"type":"boolean"},"name":{"type":"string"},"noTraversal":{"type":"boolean"},"unverifiedCertPem":{"type":"string","x-nullable":true,"x-omitempty":false},"unverifiedFingerprint":{"type":"string","x-nullable":true,"x-omitempty":false}}}]},"routerEntityRef":{"type":"object","allOf":[{"$ref":"#/definitions/entityRef"},{"type":"object","required":["isOnline"],"properties":{"isOnline":{"type":"boolean"}}}]},"routerList":{"type":"array","items":{"$ref":"#/definitions/routerDetail"}},"routerPatch":{"type":"object","properties":{"cost":{"type":"integer","maximum":65535,"minimum":0,"x-nullable":true},"disabled":{"type":"boolean","x-nullable":true},"name":{"type":"string"},"noTraversal":{"type":"boolean","x-nullable":true},"tags":{"$ref":"#/definitions/tags"}}},"routerUpdate":{"type":"object","required":["name"],"properties":{"cost":{"type":"integer","maximum":65535,"minimum":0,"x-nullable":true},"disabled":{"type":"boolean","x-nullable":true},"name":{"type":"string"},"noTraversal":{"type":"boolean","x-nullable":true},"tags":{"$ref":"#/definitions/tags"}}},"sdkInfo":{"description":"SDK information an authenticating client may provide","type":"object","properties":{"appId":{"type":"string","maxLength":255},"appVersion":{"type":"string","maxLength":255},"branch":{"type":"string","maxLength":255},"revision":{"type":"string","maxLength":255},"type":{"type":"string","maxLength":255},"version":{"type":"string","maxLength":255}}},"semantic":{"type":"string","enum":["AllOf","AnyOf"]},"serviceConfigAssign":{"type":"object","required":["serviceId","configId"],"properties":{"configId":{"type":"string"},"serviceId":{"type":"string"}}},"serviceConfigDetail":{"type":"object","required":["serviceId","service","configId","config"],"properties":{"config":{"$ref":"#/definitions/entityRef"},"configId":{"type":"string"},"service":{"$ref":"#/definitions/entityRef"},"serviceId":{"type":"string"}},"example":{"config":{"_links":{"self":{"href":"./identities/13347602-ba34-4ff7-8082-e533ba945744"}},"id":"13347602-ba34-4ff7-8082-e533ba945744","name":"test-config-02fade09-fcc3-426c-854e-18539726bdc6","urlName":"configs"},"service":{"_links":{"self":{"href":"./services/913a8c63-17a6-44d7-82b3-9f6eb997cf8e"}},"id":"913a8c63-17a6-44d7-82b3-9f6eb997cf8e","name":"netcat4545-egress-r2","urlName":"services"}}},"serviceConfigList":{"type":"array","items":{"$ref":"#/definitions/serviceConfigDetail"}},"serviceConfigsAssignList":{"type":"array","items":{"$ref":"#/definitions/serviceConfigAssign"}},"serviceCreate":{"type":"object","required":["name","encryptionRequired"],"properties":{"configs":{"type":"array","items":{"type":"string"}},"encryptionRequired":{"description":"Describes whether connections must support end-to-end encryption on both sides of the connection.","type":"boolean"},"maxIdleTimeMillis":{"type":"integer"},"name":{"type":"string"},"roleAttributes":{"type":"array","items":{"type":"string"}},"tags":{"$ref":"#/definitions/tags"},"terminatorStrategy":{"type":"string"}}},"serviceDetail":{"type":"object","allOf":[{"$ref":"#/definitions/baseEntity"},{"type":"object","required":["name","maxIdleTimeMillis","terminatorStrategy","roleAttributes","permissions","configs","config","encryptionRequired","postureQueries"],"properties":{"config":{"description":"map of config data for this service keyed by the config type name. Only configs of the types requested will be returned.","type":"object","additionalProperties":{"type":"object","additionalProperties":{"type":"object"}}},"configs":{"type":"array","items":{"type":"string"}},"encryptionRequired":{"description":"Describes whether connections must support end-to-end encryption on both sides of the connection. Read-only property, set at create.","type":"boolean"},"maxIdleTimeMillis":{"type":"integer"},"name":{"type":"string"},"permissions":{"$ref":"#/definitions/dialBindArray"},"postureQueries":{"type":"array","items":{"$ref":"#/definitions/postureQueries"}},"roleAttributes":{"$ref":"#/definitions/attributes"},"terminatorStrategy":{"type":"string"}}}]},"serviceEdgeRouterPolicyCreate":{"type":"object","required":["name","semantic"],"properties":{"edgeRouterRoles":{"$ref":"#/definitions/roles"},"name":{"type":"string"},"semantic":{"$ref":"#/definitions/semantic"},"serviceRoles":{"$ref":"#/definitions/roles"},"tags":{"$ref":"#/definitions/tags"}}},"serviceEdgeRouterPolicyDetail":{"type":"object","allOf":[{"$ref":"#/definitions/baseEntity"},{"type":"object","required":["name","semantic","edgeRouterRoles","edgeRouterRolesDisplay","serviceRoles","serviceRolesDisplay"],"properties":{"edgeRouterRoles":{"$ref":"#/definitions/roles"},"edgeRouterRolesDisplay":{"$ref":"#/definitions/namedRoles"},"name":{"type":"string"},"semantic":{"$ref":"#/definitions/semantic"},"serviceRoles":{"$ref":"#/definitions/roles"},"serviceRolesDisplay":{"$ref":"#/definitions/namedRoles"}}}]},"serviceEdgeRouterPolicyList":{"type":"array","items":{"$ref":"#/definitions/serviceEdgeRouterPolicyDetail"}},"serviceEdgeRouterPolicyPatch":{"type":"object","properties":{"edgeRouterRoles":{"$ref":"#/definitions/roles"},"name":{"type":"string"},"semantic":{"$ref":"#/definitions/semantic"},"serviceRoles":{"$ref":"#/definitions/roles"},"tags":{"$ref":"#/definitions/tags"}}},"serviceEdgeRouterPolicyUpdate":{"type":"object","required":["name","semantic"],"properties":{"edgeRouterRoles":{"$ref":"#/definitions/roles"},"name":{"type":"string"},"semantic":{"$ref":"#/definitions/semantic"},"serviceRoles":{"$ref":"#/definitions/roles"},"tags":{"$ref":"#/definitions/tags"}}},"serviceList":{"type":"array","items":{"$ref":"#/definitions/serviceDetail"}},"servicePatch":{"type":"object","properties":{"configs":{"type":"array","items":{"type":"string"}},"encryptionRequired":{"description":"Describes whether connections must support end-to-end encryption on both sides of the connection. Read-only property, set at create.","type":"boolean"},"maxIdleTimeMillis":{"type":"integer"},"name":{"type":"string"},"roleAttributes":{"type":"array","items":{"type":"string"}},"tags":{"$ref":"#/definitions/tags"},"terminatorStrategy":{"type":"string"}}},"servicePolicyCreate":{"type":"object","required":["name","type","semantic"],"properties":{"identityRoles":{"$ref":"#/definitions/roles"},"name":{"type":"string"},"postureCheckRoles":{"$ref":"#/definitions/roles"},"semantic":{"$ref":"#/definitions/semantic"},"serviceRoles":{"$ref":"#/definitions/roles"},"tags":{"$ref":"#/definitions/tags"},"type":{"$ref":"#/definitions/dialBind"}}},"servicePolicyDetail":{"type":"object","allOf":[{"$ref":"#/definitions/baseEntity"},{"type":"object","required":["name","type","semantic","serviceRoles","serviceRolesDisplay","identityRoles","identityRolesDisplay","postureCheckRoles","postureCheckRolesDisplay"],"properties":{"identityRoles":{"$ref":"#/definitions/roles"},"identityRolesDisplay":{"$ref":"#/definitions/namedRoles"},"name":{"type":"string"},"postureCheckRoles":{"$ref":"#/definitions/roles"},"postureCheckRolesDisplay":{"$ref":"#/definitions/namedRoles"},"semantic":{"$ref":"#/definitions/semantic"},"serviceRoles":{"$ref":"#/definitions/roles"},"serviceRolesDisplay":{"$ref":"#/definitions/namedRoles"},"type":{"$ref":"#/definitions/dialBind"}}}]},"servicePolicyList":{"type":"array","items":{"$ref":"#/definitions/servicePolicyDetail"}},"servicePolicyPatch":{"type":"object","properties":{"identityRoles":{"$ref":"#/definitions/roles"},"name":{"type":"string"},"postureCheckRoles":{"$ref":"#/definitions/roles"},"semantic":{"$ref":"#/definitions/semantic"},"serviceRoles":{"$ref":"#/definitions/roles"},"tags":{"$ref":"#/definitions/tags"},"type":{"$ref":"#/definitions/dialBind"}}},"servicePolicyUpdate":{"type":"object","required":["name","type","semantic"],"properties":{"identityRoles":{"$ref":"#/definitions/roles"},"name":{"type":"string"},"postureCheckRoles":{"$ref":"#/definitions/roles"},"semantic":{"$ref":"#/definitions/semantic"},"serviceRoles":{"$ref":"#/definitions/roles"},"tags":{"$ref":"#/definitions/tags"},"type":{"$ref":"#/definitions/dialBind"}}},"serviceUpdate":{"type":"object","required":["name"],"properties":{"configs":{"type":"array","items":{"type":"string"}},"encryptionRequired":{"description":"Describes whether connections must support end-to-end encryption on both sides of the connection. Read-only property, set at create.","type":"boolean"},"maxIdleTimeMillis":{"type":"integer"},"name":{"type":"string"},"roleAttributes":{"type":"array","items":{"type":"string"}},"tags":{"$ref":"#/definitions/tags"},"terminatorStrategy":{"type":"string"}}},"sessionDetail":{"type":"object","allOf":[{"$ref":"#/definitions/baseEntity"},{"type":"object","required":["type","apiSessionId","apiSession","serviceId","service","token","edgeRouters","identityId"],"properties":{"apiSession":{"$ref":"#/definitions/entityRef"},"apiSessionId":{"type":"string"},"edgeRouters":{"type":"array","items":{"$ref":"#/definitions/sessionEdgeRouter"}},"identityId":{"type":"string"},"service":{"$ref":"#/definitions/entityRef"},"serviceId":{"type":"string"},"token":{"type":"string"},"type":{"$ref":"#/definitions/dialBind"}}}]},"sessionEdgeRouter":{"allOf":[{"$ref":"#/definitions/commonEdgeRouterProperties"},{"type":"object","required":["urls"],"properties":{"urls":{"type":"object","additionalProperties":{"type":"string"}}}}]},"sessionManagementDetail":{"allOf":[{"$ref":"#/definitions/sessionDetail"},{"type":"object","properties":{"servicePolicies":{"type":"array","items":{"$ref":"#/definitions/entityRef"}}}}]},"sessionManagementList":{"type":"array","items":{"$ref":"#/definitions/sessionManagementDetail"}},"sessionRoutePathDetail":{"type":"object","properties":{"routePath":{"type":"array","items":{"type":"string"}}}},"specBodyDetail":{"type":"string"},"specDetail":{"type":"object","allOf":[{"$ref":"#/definitions/baseEntity"},{"type":"object","required":["name"],"properties":{"name":{"type":"string"}}}]},"specList":{"type":"array","items":{"$ref":"#/definitions/specDetail"}},"subTags":{"type":"object","additionalProperties":{"type":"object"}},"tags":{"description":"A map of user defined fields and values. The values are limited to the following types/values: null, string, boolean","allOf":[{"$ref":"#/definitions/subTags"}],"x-nullable":true},"terminatorCost":{"type":"integer","maximum":65535,"minimum":0},"terminatorCostMap":{"type":"object","additionalProperties":{"$ref":"#/definitions/terminatorCost"}},"terminatorCreate":{"type":"object","required":["service","router","address","binding"],"properties":{"address":{"type":"string"},"binding":{"type":"string"},"cost":{"$ref":"#/definitions/terminatorCost"},"identity":{"type":"string"},"identitySecret":{"type":"string","format":"byte"},"precedence":{"$ref":"#/definitions/terminatorPrecedence"},"router":{"type":"string"},"service":{"type":"string"},"tags":{"$ref":"#/definitions/tags"}}},"terminatorDetail":{"type":"object","allOf":[{"$ref":"#/definitions/baseEntity"},{"type":"object","required":["serviceId","service","routerId","router","binding","address","identity","cost","precedence","dynamicCost"],"properties":{"address":{"type":"string"},"binding":{"type":"string"},"cost":{"$ref":"#/definitions/terminatorCost"},"dynamicCost":{"$ref":"#/definitions/terminatorCost"},"identity":{"type":"string"},"precedence":{"$ref":"#/definitions/terminatorPrecedence"},"router":{"$ref":"#/definitions/entityRef"},"routerId":{"type":"string"},"service":{"$ref":"#/definitions/entityRef"},"serviceId":{"type":"string"}}}]},"terminatorList":{"type":"array","items":{"$ref":"#/definitions/terminatorDetail"}},"terminatorPatch":{"type":"object","properties":{"address":{"type":"string"},"binding":{"type":"string"},"cost":{"$ref":"#/definitions/terminatorCost"},"precedence":{"$ref":"#/definitions/terminatorPrecedence"},"router":{"type":"string"},"service":{"type":"string"},"tags":{"$ref":"#/definitions/tags"}}},"terminatorPrecedence":{"type":"string","enum":["default","required","failed"]},"terminatorPrecedenceMap":{"type":"object","additionalProperties":{"$ref":"#/definitions/terminatorPrecedence"}},"terminatorUpdate":{"type":"object","required":["service","router","address","binding"],"properties":{"address":{"type":"string"},"binding":{"type":"string"},"cost":{"$ref":"#/definitions/terminatorCost"},"precedence":{"$ref":"#/definitions/terminatorPrecedence"},"router":{"type":"string"},"service":{"type":"string"},"tags":{"$ref":"#/definitions/tags"}}},"traceDetail":{"type":"object","properties":{"enabled":{"type":"boolean"},"traceId":{"type":"string"},"until":{"type":"string","format":"date-time"}}},"traceDetailEnvelope":{"type":"object","required":["meta","data"],"properties":{"data":{"$ref":"#/definitions/traceDetail"},"meta":{"$ref":"#/definitions/meta"}}},"traceSpec":{"type":"object","properties":{"channels":{"type":"array","items":{"type":"string"}},"duration":{"type":"string"},"enabled":{"type":"boolean"},"traceId":{"type":"string"}}},"username":{"type":"string","maxLength":100,"minLength":4},"usernameNullable":{"type":"string","maxLength":100,"minLength":4,"x-nullable":true},"version":{"type":"object","properties":{"apiVersions":{"type":"object","additionalProperties":{"type":"object","additionalProperties":{"$ref":"#/definitions/apiVersion"}}},"buildDate":{"type":"string","example":"2020-02-11 16:09:08"},"capabilities":{"type":"array","items":{"type":"string"}},"revision":{"type":"string","example":"ea556fc18740"},"runtimeVersion":{"type":"string","example":"go1.13.5"},"version":{"type":"string","example":"v0.9.0"}}},"versionInfo":{"type":"object","required":["os","version","arch","buildDate","revision"],"properties":{"arch":{"type":"string"},"buildDate":{"type":"string"},"os":{"type":"string"},"revision":{"type":"string"},"version":{"type":"string"}}}},"securityDefinitions":{"oauth2":{"type":"oauth2","flow":"accessCode","authorizationUrl":"/oidc/authorize","tokenUrl":"/oidc/token","scopes":{"openid":"openid"}},"ztSession":{"description":"An API Key that is provided post authentication","type":"apiKey","name":"zt-session","in":"header"}}}}},"docusaurus-theme-classic":{},"docusaurus-theme-search-algolia":{},"docusaurus-theme-redoc":{},"docusaurus-plugin-client-redirects":{},"docusaurus-theme-mermaid":{},"docusaurus-bootstrap-plugin":{},"docusaurus-mdx-fallback-plugin":{}}')}}]);