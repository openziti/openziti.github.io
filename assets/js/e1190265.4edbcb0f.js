"use strict";(self.webpackChunkdocusaurus_3=self.webpackChunkdocusaurus_3||[]).push([[3918],{63690:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>u,default:()=>p,frontMatter:()=>l,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"guides/deployments/linux/router/router-configuration","title":"Router Configuration","description":"This article expands on the Linux router deployment article with configuration concepts and examples.","source":"@site/docs/guides/deployments/10-linux/20-router/30-configuration.mdx","sourceDirName":"guides/deployments/10-linux/20-router","slug":"/guides/deployments/linux/router/router-configuration","permalink":"/docs/guides/deployments/linux/router/router-configuration","draft":false,"unlisted":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/guides/deployments/10-linux/20-router/30-configuration.mdx","tags":[],"version":"current","lastUpdatedAt":1757339600000,"sidebarPosition":30,"frontMatter":{"id":"router-configuration","title":"Router Configuration","sidebar_label":"Configuration","hide_table_of_contents":false},"sidebar":"docsSidebar","previous":{"title":"Router Deployment","permalink":"/docs/guides/deployments/linux/router/deploy"},"next":{"title":"CLI Mgmt","permalink":"/docs/guides/deployments/linux/router/cli-mgmt"}}');var i=r(74848),o=r(28453),s=r(11470),a=r(19365);const l={id:"router-configuration",title:"Router Configuration",sidebar_label:"Configuration",hide_table_of_contents:!1},u=void 0,c={},d=[{value:"Config Management",id:"config-management",level:2},{value:"Identity",id:"identity",level:2},{value:"Private Key",id:"private-key",level:3},{value:"Optional Capabilities",id:"optional-capabilities",level:2},{value:"Examples",id:"examples",level:2},{value:"Public Router config.yml",id:"public-router-configyml",level:3},{value:"Private Router with Tunneler config.yml",id:"private-router-with-tunneler-configyml",level:3}];function h(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:["This article expands on the ",(0,i.jsx)(n.a,{href:"/docs/guides/deployments/linux/router/deploy",children:"Linux router deployment"})," article with configuration concepts and examples."]}),"\n",(0,i.jsx)(n.h2,{id:"config-management",children:"Config Management"}),"\n",(0,i.jsxs)(n.p,{children:["Edit the generated configuration YAML file or run ",(0,i.jsx)(n.code,{children:"ziti create config router"})," to generate one from scratch. Run ",(0,i.jsx)(n.code,{children:"ziti create config environment"})," for descriptions of the environment variables that influence the generated output."]}),"\n",(0,i.jsx)(n.h2,{id:"identity",children:"Identity"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"identity"})," configuration section defines the paths to the router's identity files: certs, keys, and a bundle of trusted root CA certificates. All of the files will be created in the specified paths at the time of router enrollment. The router will automatically renew its certificates if the path remains writable."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-text",children:"identity:\n    cert:                 /var/lib/ziti-router/client.cert\n    server_cert:          /var/lib/ziti-router/server.chain.cert\n    key:                  /var/lib/ziti-router/private.key\n    ca:                   /var/lib/ziti-router/trusted-root.cas\n"})}),"\n",(0,i.jsx)(n.h3,{id:"private-key",children:"Private Key"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.a,{href:"/docs/reference/configuration/conventions#identity",children:(0,i.jsx)(n.code,{children:"identity"})})," configuration section is common to routers and controllers, but the ",(0,i.jsx)(n.code,{children:"key"})," sub-property behaves differently for routers. If a private key exists in the path, then it will be used to sign router enrollment certificate requests. If it does not exist, then a private key will be locally generated and stored in that path."]}),"\n",(0,i.jsxs)(n.p,{children:["If present, the ",(0,i.jsx)(n.code,{children:"server_key"})," signs the router's server certificate request. Otherwise, the ",(0,i.jsx)(n.code,{children:"key"})," sub-property is used for both client and server certificate."]}),"\n",(0,i.jsxs)(n.p,{children:["The private keys' values are assumed to be ",(0,i.jsx)(n.code,{children:"file://"})," URLs if unspecified. Alternatives include ",(0,i.jsx)(n.code,{children:"pkcs11://"})," and ",(0,i.jsx)(n.code,{children:"parsec://"})," URLs for ",(0,i.jsx)(n.a,{href:"/docs/guides/hsm/",children:"hardware keys"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"optional-capabilities",children:"Optional Capabilities"}),"\n",(0,i.jsxs)(n.p,{children:["You may enable or disable capabilities of the router by including or omitting their sections in the configuration file. These are a few of the most relevant configuration sections. Refer to ",(0,i.jsx)(n.a,{href:"/docs/reference/configuration/router",children:"the router configuration reference"})," for more complete information."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"/docs/reference/configuration/router#edge",children:(0,i.jsx)(n.code,{children:"edge"})}),' - Most routers include this section which configures the router to listen for connections from endpoint identities. This is what makes a router an "edge router." Without this section, the router is a "fabric router" and communicates only with other routers and the control plane.']}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"/docs/reference/configuration/router#link",children:(0,i.jsx)(n.code,{children:"link.listeners"})})," - The ",(0,i.jsx)(n.code,{children:"link"})," section configures the router to dial and listen for other routers that are dialing in to create mesh links. Omitting the ",(0,i.jsx)(n.code,{children:"listeners"}),' sub-section makes a router "private." "Public" routers are presumed reachable and listening for other routers.']}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"/docs/reference/configuration/router#listeners",children:(0,i.jsx)(n.code,{children:"listeners[?binding == 'tunnel']"})})," - the ",(0,i.jsx)(n.code,{children:"listeners"})," section may contain a special type of binding that configures the router's built-in tunneling capabilities: ",(0,i.jsx)(n.code,{children:"binding: tunnel"}),". The tunnel's ",(0,i.jsx)(n.code,{children:"mode"})," property may be set to ",(0,i.jsx)(n.code,{children:"tproxy"}),", ",(0,i.jsx)(n.code,{children:"proxy"}),", or ",(0,i.jsx)(n.code,{children:"host"}),". Requires ",(0,i.jsx)(n.code,{children:"edge"}),".","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"tproxy"})," mode requires the ",(0,i.jsx)(n.code,{children:"CAP_NET_ADMIN"})," capability and that the host's DNS resolver is set to use the nameserver provided by the router. The ",(0,i.jsx)(n.code,{children:"tproxy"})," mode is useful for transparently proxying services and providing Ziti DNS to non-Ziti applications."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,i.jsx)("br",{}),"\n",(0,i.jsxs)(s.A,{groupId:"routerType",children:[(0,i.jsxs)(a.A,{value:"Public-Edge",label:"Public Router",children:[(0,i.jsxs)(n.p,{children:["This is an example of generating a public router configuration with the ",(0,i.jsx)(n.code,{children:"ziti"})," CLI."]}),(0,i.jsx)("br",{}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-text",children:"#!/usr/bin/env bash\n\n# working directory for the router\nexport ZITI_HOME=/var/lib/ziti-router\n\n# address and port of control plane endpoint\nexport  ZITI_CTRL_ADVERTISED_ADDRESS=ctrl.ziti.example.org \\\n        ZITI_CTRL_ADVERTISED_PORT=1280\n\n# address and port of this router\nexport  ZITI_ROUTER_ADVERTISED_ADDRESS=router1.ziti.example.org \\\n        ZITI_ROUTER_PORT=3022 \\\n        ZITI_ROUTER_LISTENER_BIND_PORT=3022\n\nziti create config router edge \\\n    --routerName router1 \\\n    --tunnelerMode none\n"})}),(0,i.jsx)(n.h3,{id:"public-router-configyml",children:"Public Router config.yml"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-text",children:'v: 3\n\nidentity:\n  cert:             "/var/lib/ziti-router/router1.cert"\n  server_cert:      "/var/lib/ziti-router/router1.server.chain.cert"\n  key:              "/var/lib/ziti-router/router1.key"\n  ca:               "/var/lib/ziti-router/router1.cas"\n\nctrl:\n  endpoint:             tls:ctrl.ziti.example.org:1280\n\nlink:\n  dialers:\n    - binding: transport\n  listeners:\n    - binding:          transport\n      bind:             tls:0.0.0.0:3022\n      advertise:        tls:router1.ziti.example.org:3022\n      options:\n        outQueueSize:   4\n\nlisteners:\n  - binding: edge\n    address: tls:0.0.0.0:3022\n    options:\n      advertise: router1.ziti.example.org:3022\n      connectTimeoutMs: 5000\n      getSessionTimeout: 60\n\nedge:\n  csr:\n    country: US\n    province: NC\n    locality: Charlotte\n    organization: NetFoundry\n    organizationalUnit: Ziti\n    sans:\n      dns:\n        - localhost\n        - router1.ziti.example.org\n      ip:\n        - "127.0.0.1"\n\nforwarder:\n  latencyProbeInterval: 0\n  xgressDialQueueLength: 1000\n  xgressDialWorkerCount: 128\n  linkDialQueueLength: 1000\n  linkDialWorkerCount: 32\n'})})]}),(0,i.jsxs)(a.A,{value:"Gateway",label:"Private Router with Tunneler",children:[(0,i.jsxs)(n.p,{children:["This is an example of generating a private router configuration with the ",(0,i.jsx)(n.code,{children:"ziti"})," CLI."]}),(0,i.jsx)("br",{}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-text",children:"#!/usr/bin/env bash\n\n# working directory for the router\nexport ZITI_HOME=/var/lib/ziti-router\n\n# address and port of control plane endpoint\nexport  ZITI_CTRL_ADVERTISED_ADDRESS=ctrl.ziti.example.org \\\n        ZITI_CTRL_ADVERTISED_PORT=1280\n\n# address and port of this router\nexport  ZITI_ROUTER_ADVERTISED_ADDRESS=router2.ziti.example.org \\\n        ZITI_ROUTER_PORT=3022 \\\n        ZITI_ROUTER_LISTENER_BIND_PORT=3022\n\nziti create config router edge \\\n    --routerName router2 \\\n    --tunnelerMode tproxy \\\n    --private\n"})}),(0,i.jsx)("br",{}),(0,i.jsxs)(n.p,{children:["Public routers dial and listen for other routers dialing mesh links. Private routers dial for mesh links but do not listen. The ",(0,i.jsx)(n.code,{children:"edge"})," capability is independent of the ",(0,i.jsx)(n.code,{children:"link"})," capability, and so both private and public routers may listen for and advertise edge connections from endpoints."]}),(0,i.jsx)("br",{}),(0,i.jsx)(n.h3,{id:"private-router-with-tunneler-configyml",children:"Private Router with Tunneler config.yml"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-text",children:'v: 3\n\nidentity:\n  cert:             "/var/lib/ziti-router/router2.cert"\n  server_cert:      "/var/lib/ziti-router/router2.server.chain.cert"\n  key:              "/var/lib/ziti-router/router2.key"\n  ca:               "/var/lib/ziti-router/router2.cas"\n\nctrl:\n  endpoint:             tls:ctrl.ziti.example.org:1280\n\nlink:\n  dialers:\n    - binding: transport\n\nlisteners:\n  - binding: edge\n    address: tls:0.0.0.0:3022\n    options:\n      advertise: router2.ziti.example.org:3022\n      connectTimeoutMs: 5000\n      getSessionTimeout: 60\n  - binding: tunnel\n    options:\n      mode: tproxy\n      resolver: udp://127.0.0.1:53\n      lanIf: \n\nedge:\n  csr:\n    country: US\n    province: NC\n    locality: Charlotte\n    organization: NetFoundry\n    organizationalUnit: Ziti\n    sans:\n      dns:\n        - localhost\n        - router2.ziti.example.org\n      ip:\n        - "127.0.0.1"\n\n\nforwarder:\n  latencyProbeInterval: 0\n  xgressDialQueueLength: 1000\n  xgressDialWorkerCount: 128\n  linkDialQueueLength: 1000\n  linkDialWorkerCount: 32\n\n'})})]})]})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},19365:(e,n,r)=>{r.d(n,{A:()=>s});r(96540);var t=r(34164);const i={tabItem:"tabItem_Ymn6"};var o=r(74848);function s({children:e,hidden:n,className:r}){return(0,o.jsx)("div",{role:"tabpanel",className:(0,t.A)(i.tabItem,r),hidden:n,children:e})}},11470:(e,n,r)=>{r.d(n,{A:()=>T});var t=r(96540),i=r(34164),o=r(23104),s=r(56347),a=r(205),l=r(57485),u=r(31682),c=r(70679);function d(e){return t.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,t.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:n,children:r}=e;return(0,t.useMemo)((()=>{const e=n??function(e){return d(e).map((({props:{value:e,label:n,attributes:r,default:t}})=>({value:e,label:n,attributes:r,default:t})))}(r);return function(e){const n=(0,u.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,r])}function p({value:e,tabValues:n}){return n.some((n=>n.value===e))}function f({queryString:e=!1,groupId:n}){const r=(0,s.W6)(),i=function({queryString:e=!1,groupId:n}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:e,groupId:n});return[(0,l.aZ)(i),(0,t.useCallback)((e=>{if(!i)return;const n=new URLSearchParams(r.location.search);n.set(i,e),r.replace({...r.location,search:n.toString()})}),[i,r])]}function g(e){const{defaultValue:n,queryString:r=!1,groupId:i}=e,o=h(e),[s,l]=(0,t.useState)((()=>function({defaultValue:e,tabValues:n}){if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!p({value:e,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const r=n.find((e=>e.default))??n[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:n,tabValues:o}))),[u,d]=f({queryString:r,groupId:i}),[g,m]=function({groupId:e}){const n=function(e){return e?`docusaurus.tab.${e}`:null}(e),[r,i]=(0,c.Dv)(n);return[r,(0,t.useCallback)((e=>{n&&i.set(e)}),[n,i])]}({groupId:i}),x=(()=>{const e=u??g;return p({value:e,tabValues:o})?e:null})();(0,a.A)((()=>{x&&l(x)}),[x]);return{selectedValue:s,selectValue:(0,t.useCallback)((e=>{if(!p({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);l(e),d(e),m(e)}),[d,m,o]),tabValues:o}}var m=r(92303);const x={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var b=r(74848);function v({className:e,block:n,selectedValue:r,selectValue:t,tabValues:s}){const a=[],{blockElementScrollPositionUntilNextRender:l}=(0,o.a_)(),u=e=>{const n=e.currentTarget,i=a.indexOf(n),o=s[i].value;o!==r&&(l(n),t(o))},c=e=>{let n=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{const r=a.indexOf(e.currentTarget)+1;n=a[r]??a[0];break}case"ArrowLeft":{const r=a.indexOf(e.currentTarget)-1;n=a[r]??a[a.length-1];break}}n?.focus()};return(0,b.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.A)("tabs",{"tabs--block":n},e),children:s.map((({value:e,label:n,attributes:t})=>(0,b.jsx)("li",{role:"tab",tabIndex:r===e?0:-1,"aria-selected":r===e,ref:e=>{a.push(e)},onKeyDown:c,onClick:u,...t,className:(0,i.A)("tabs__item",x.tabItem,t?.className,{"tabs__item--active":r===e}),children:n??e},e)))})}function y({lazy:e,children:n,selectedValue:r}){const o=(Array.isArray(n)?n:[n]).filter(Boolean);if(e){const e=o.find((e=>e.props.value===r));return e?(0,t.cloneElement)(e,{className:(0,i.A)("margin-top--md",e.props.className)}):null}return(0,b.jsx)("div",{className:"margin-top--md",children:o.map(((e,n)=>(0,t.cloneElement)(e,{key:n,hidden:e.props.value!==r})))})}function j(e){const n=g(e);return(0,b.jsxs)("div",{className:(0,i.A)("tabs-container",x.tabList),children:[(0,b.jsx)(v,{...n,...e}),(0,b.jsx)(y,{...n,...e})]})}function T(e){const n=(0,m.A)();return(0,b.jsx)(j,{...e,children:d(e.children)},String(n))}},28453:(e,n,r)=>{r.d(n,{R:()=>s,x:()=>a});var t=r(96540);const i={},o=t.createContext(i);function s(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);