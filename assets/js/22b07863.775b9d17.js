"use strict";(self.webpackChunkdocusaurus_3=self.webpackChunkdocusaurus_3||[]).push([[8473],{73969:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"reference/configuration/router","title":"Router Configuration Reference","description":"OpenZiti uses configuration files for controllers that are in the YAML format.","source":"@site/docs/reference/30-configuration/router.md","sourceDirName":"reference/30-configuration","slug":"/reference/configuration/router","permalink":"/docs/reference/configuration/router","draft":false,"unlisted":false,"editUrl":"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/reference/30-configuration/router.md","tags":[],"version":"current","lastUpdatedAt":1746195261000,"sidebarPosition":30,"frontMatter":{"sidebar_label":"Router","sidebar_position":30},"sidebar":"docsSidebar","previous":{"title":"Controller","permalink":"/docs/reference/configuration/controller"},"next":{"title":"Overview","permalink":"/docs/reference/ha/overview"}}');var t=i(74848),s=i(28453);const o={sidebar_label:"Router",sidebar_position:30},l="Router Configuration Reference",c={},d=[{value:"Sections",id:"sections",level:2},{value:"<code>ctrl</code>",id:"ctrl",level:3},{value:"<code>dialers</code>",id:"dialers",level:3},{value:"<code>edge</code>",id:"edge",level:3},{value:"<code>edge.csr</code>",id:"edgecsr",level:4},{value:"<code>forwarder</code>",id:"forwarder",level:3},{value:"<code>healthChecks</code>",id:"healthChecks",level:3},{value:"<code>identity</code>",id:"identity",level:3},{value:"<code>link</code>",id:"link",level:3},{value:"<code>listeners</code>",id:"listeners",level:3},{value:"tunnel <code>listeners</code>",id:"tunnel-listeners",level:4},{value:"<code>metrics</code>",id:"metrics",level:3},{value:"<code>trace</code>",id:"trace",level:3},{value:"<code>transport</code>",id:"transport",level:3},{value:"<code>profile</code>",id:"profile",level:3},{value:"<code>web</code>",id:"web",level:3},{value:"<code>v</code>",id:"v",level:3}];function a(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"router-configuration-reference",children:"Router Configuration Reference"})}),"\n",(0,t.jsxs)(n.p,{children:["OpenZiti uses configuration files for controllers that are in the ",(0,t.jsx)(n.a,{href:"https://yaml.org/",children:"YAML"})," format.\nAll configuration files are also subject to a set of ",(0,t.jsx)(n.a,{href:"/docs/reference/configuration/conventions",children:"conventions"})," such as\nenvironment variable substitution, identity sections, and addressing formats."]}),"\n",(0,t.jsx)(n.h2,{id:"sections",children:"Sections"}),"\n",(0,t.jsx)(n.p,{children:"The router configuration file has several top level configuration sections that group together\nrelated configuration settings."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"#ctrl",children:(0,t.jsx)(n.code,{children:"ctrl"})})," - configuration for controller addressing/connections"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"#dialers",children:(0,t.jsx)(n.code,{children:"dialers"})})," - configures dialers used when router termination is used to contact target\nservices for overlay egress"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"#edge",children:(0,t.jsx)(n.code,{children:"edge"})})," - edge specific configuration, required to enable edge functionality (e.g. edge\nSDK connectivity)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"#forwarder",children:(0,t.jsx)(n.code,{children:"forwarder"})})," - configures various forwarder settings (e.g. link latency probing, idle\nsessions, dial queues, etc.)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"#healthChecks",children:(0,t.jsx)(n.code,{children:"healthChecks"})})," - enables router health checks for controller connectivity"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"#identity",children:(0,t.jsx)(n.code,{children:"identity"})})," - configures the certificates used for outbound client connections, server\nlistening, and CA bundles"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"#link",children:(0,t.jsx)(n.code,{children:"link"})})," - the type of link listeners available for incoming router link and outgoing\nrouter link connections"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"#listeners",children:(0,t.jsx)(n.code,{children:"listeners"})})," - the interfaces, ports, and addresses exposed for connection by outside\nclients (e.g. edge SDK clients, non-edge connections)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"#metrics",children:(0,t.jsx)(n.code,{children:"metrics"})})," - configures metrics reporting"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"#trace",children:(0,t.jsx)(n.code,{children:"trace"})})," - adds a peek handler to all router messaging for debug purposes"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"#transport",children:(0,t.jsx)(n.code,{children:"transport"})})," - enables transport level configuration that affects all instances of\nspecific transports"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"#profile",children:(0,t.jsx)(n.code,{children:"profile"})})," - enables profiling of router memory and CPU statistics"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"#web",children:(0,t.jsx)(n.code,{children:"web"})})," - configures API presentation exposure"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"#v",children:(0,t.jsx)(n.code,{children:"v"})})," - A special section to note the version of the configuration file, only ",(0,t.jsx)(n.code,{children:"v: 3"})," is\ncurrently supported"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"The standard OpenZiti experience minimally requires the following sections:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"ctrl"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"dialers"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"edge"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"identity"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"link"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"listeners"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"v"})}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Of those values, to start the controller only the ",(0,t.jsx)(n.code,{children:"ctrl"}),", ",(0,t.jsx)(n.code,{children:"v"})," and ",(0,t.jsx)(n.code,{children:"identity"})," sections are required.\nNot including\nthe ",(0,t.jsx)(n.code,{children:"dialer"})," section will not allow the router to connect to terminate services. Not including\nthe ",(0,t.jsx)(n.code,{children:"edge"}),' section will start the controller in\n"fabric only" mode and will not support any edge functionality or concepts (edge SDK connectivity).\nNot including the\n',(0,t.jsx)(n.code,{children:"link"})," section will not allow the router to connect/dial or accept/host other routers for mesh\nestablishment. Not including the ",(0,t.jsx)(n.code,{children:"listeners"})," configuration will not allow external connections to\non-ramp connections over the mesh."]}),"\n",(0,t.jsx)(n.p,{children:"Example Minimum Router Configuration:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:'v: 3\n\nidentity:\n  cert: router.cert.pem\n  server_cert: router.server.cert.pem\n  key: router.key.pem\n  ca: ca-chain.cert.pem\n\nctrl:\n  endpoint: tls:127.0.0.1:6262\n\ndialers:\n  - binding: udp\n  - binding: transport\n\nedge:\n  csr:\n    country: US\n    province: NC\n    locality: Charlotte\n    organization: OpenZiti\n    organizationalUnit: Ziti\n    sans:\n      dns:\n        - "localhost"\n      ip:\n        - "127.0.0.1"\n\n\nlink:\n  listeners:\n    - binding: transport\n      bind: tls:127.0.0.1:6002\n      advertise: tls:127.0.0.1:6002\n  dialers:\n    - binding: transport\n\nlisteners:\n  - binding: edge\n    address: tls:0.0.0.0:3022\n  - binding: transport\n    address: tls:0.0.0.0:7099\n'})}),"\n",(0,t.jsx)(n.h3,{id:"ctrl",children:(0,t.jsx)(n.code,{children:"ctrl"})}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"ctrl"})," section configures how the router will connect to the controller."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"bind"})," - (optional) the address of a local interface used to dial the controller address specified\nin ",(0,t.jsx)(n.code,{children:"endpoint"})," or ",(0,t.jsx)(n.code,{children:"endpoints"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"defaultRequestTimeout"})," - (optional, 5s) the amount of time use for controller connection\ntimeouts (\nsee ",(0,t.jsx)(n.a,{href:"/docs/reference/configuration/conventions#time-units",children:"time units"}),")"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"endpoint"})," - (optional) the address of the controller. Either ",(0,t.jsx)(n.code,{children:"endpoint"})," or ",(0,t.jsx)(n.code,{children:"endpoints"})," is\nrequired. If both are provided, ",(0,t.jsx)(n.code,{children:"endpoints"})," will be ignored. Once the router is connected to a\ncontroller the set of endpoints will be kept up to date with current set of cluster members."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"endpoints"})," - (optional) a list of controller addresses. Either ",(0,t.jsx)(n.code,{children:"endpoint"})," or ",(0,t.jsx)(n.code,{children:"endpoints"})," is\nrequired. If both are provided, ",(0,t.jsx)(n.code,{children:"endpoints"})," will be ignored"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"heartbeats"})," - (optional) set of options for configuring heartbeats to the controller(s).\nSee ",(0,t.jsx)(n.a,{href:"/docs/reference/configuration/conventions#heartbeats",children:"heartbeats"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"options"})," - a set of option which includes the below options and those defined\nin ",(0,t.jsx)(n.a,{href:"/docs/reference/configuration/conventions#channel",children:"channel options"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"endpointsFile"})," - (optional, 'config file dir'/endpoints) - File location to save the current\nknown set of controller endpoints, when an endpoints update has been received from a controller."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Example:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"ctrl:\n  endpoint: tls:127.0.0.1:6262\n"})}),"\n",(0,t.jsx)(n.h3,{id:"dialers",children:(0,t.jsx)(n.code,{children:"dialers"})}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"dialers"})," sections defines the configuration for dialers that are used to dial (connect) to\nservices from routers. Various dialers are supported and referenced by ",(0,t.jsx)(n.code,{children:"binding"})," name. This section\nis an array of objects that configures individual dialers specified by the property ",(0,t.jsx)(n.code,{children:"binding"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"Example:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"dialers:\n  - binding: binding1\n    options:\n      mtu: 1000\n      #...options\n  - binding: binding2\n    options:\n    #...options\n  #...\n"})}),"\n",(0,t.jsxs)(n.p,{children:["The following dialer bindings that are supported in the ",(0,t.jsx)(n.code,{children:"binding"})," field are:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"proxy"})," - tbd"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"proxy_udp"})," - tbd"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"transport"})," - tbd"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"transport_udp"})," - tbd"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Each dialer currently supports a number of ",(0,t.jsx)(n.a,{href:"/docs/reference/configuration/conventions#xgress-options",children:"shared options"})]}),"\n",(0,t.jsx)(n.h3,{id:"edge",children:(0,t.jsx)(n.code,{children:"edge"})}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"edge"})," section contains configuration that pertain to edge functionality. This section must be\npresent to enable edge functionality (e.g. listening for edge SDK connections, tunnel binding modes)."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"db"})," - (optional, ",(0,t.jsx)(n.code,{children:"<path-to-config-file>.proto.gzip"}),") - path to file name where the router data model\nwill be written as a gzipped snapshot"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"dbSaveIntervalSeconds"})," - (optional, 30s) - Configures how the router data model will be snapshotted"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Example:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:'edge:\n  csr:\n    country: US\n    province: NC\n    locality: Charlotte\n    organization: OpenZiti\n    organizationalUnit: Ziti\n    sans:\n      dns:\n        - "localhost"\n        - "test-network"\n        - "test-network.localhost"\n        - "ziti-dev-ingress01"\n      email:\n        - "admin@example.com"\n      ip:\n        - "127.0.0.1"\n      uri:\n        - "ziti://ziti-dev-router01/made/up/example"\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Not specifying the\n",(0,t.jsx)(n.code,{children:"edge.csr"})," section will not allow the router to enroll or renew existing enrollments."]}),"\n",(0,t.jsx)(n.h4,{id:"edgecsr",children:(0,t.jsx)(n.code,{children:"edge.csr"})}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"edge.csr"})," section is used during router enrollment and enrollment extension. It specifies values\nthat will be used in the certificates that are the result of enrollment."]}),"\n",(0,t.jsx)(n.p,{children:"Many of the values in this section are optional, however to accept connections from SDKs or other\nrouters at least one valid SAN must be provided."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"country"})," - (optional) the subject information country field"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"province"})," - (optional) the subject information province field"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"locality"})," - (optional)  the subject information locality field"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"organization"})," - (optional)  the subject information organization field"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"organizationalUnit"})," - (optional)  the subject information organization unit field"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"sans"})," - (optional) - a subsection used to define Subject Alternate Names","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"dns"})," - (optional) - an array of DNS SAN entries"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"ip"})," - (optional) - an array of IP SAN entries"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"uri"})," - (optional) - an array of URI SAN entries"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"email"}),"  - (optional) - an array of email SAN entries"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"forwarder",children:(0,t.jsx)(n.code,{children:"forwarder"})}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"forwarder"})," section controls options that affect how a router forwards payloads across links to\nother routers within the mesh or egresses data to targeted services if the service is terminated by\na router."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"faultTxInterval"})," - (optional, 15,000) an integer representing the milliseconds to wait between\nchecking for circuits that have faulted, 0=disabled"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"idleCircuitTimeout"})," - (optional, 60,000) an integer representing the milliseconds to wait before\nmarking a circuit as idle and requesting a circuit confirmation"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"idleTxInterval"})," -  (optional, 60,000) an integer representing the milliseconds to wait between\nchecks for confirming idle circuits are in use, 0=disabled"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"linkDialQueueLength"})," -  (optional, 1000) an integer between 1 and 10,000 that represents the\nmaximum number of queued outgoing router link dials"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"linkDialWorkerCount"})," - (optional, 32) an integer between 1 and 10,000 that represents the maximum\nnumber of workers emptying the link dial queue"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"rateLimitedQueueLength"})," -  (optional, 5000) an integer between 1 and 50,000 that represents the\nmaximum number of rate limited operations to the controller. This currently includes terminator\ncreates"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"rateLimitedWorkerCount"})," - (optional, 5) an integer between 1 and 10,000 that represents the\nmaximum number of workers emptying the rate limited operations queue"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"xgressCloseCheckInterval"})," - (optional, 5,000) an integer representing the milliseconds to wait\nbefore un-routing a circuit for due to idleness"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"xgressDialDwellTime"})," - (optional, 0) an integer representing the milliseconds to wait before\ndialing a service for egress"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"xgressDialQueueLength"})," - (optional, 1000) an integer between 1 and 10,000 that represents the\nmaximum number of queued outgoing service dials"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"xgressDialWorkerCount"})," - (optional, 128) an integer between 1 and 10,000 that represents the\nmaximum number of workers emptying the xgress dial queue"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Example:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"forwarder:\n  latencyProbeInterval: 1000\n"})}),"\n",(0,t.jsx)(n.h3,{id:"healthChecks",children:(0,t.jsx)(n.code,{children:"healthChecks"})}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"healthChecks"})," sections allows configuration of router health checks performed. Health check\nstatus is available by exposing the ",(0,t.jsx)(n.code,{children:"health-checks"})," API in the ",(0,t.jsx)(n.code,{children:"web"})," section."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"ctrlPingCheck"})," - (optional) - configures controller health check pings","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"interval"})," - (optional, 30s) - the frequency to ping the controller with connection checks"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"timeout"})," - (optional, 15s) - the length of time to wait before giving up on a controller\nhealth ping"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"initialDelay"})," - (optional, 15s) - the length of time to wait before starting controller\nhealth check pings"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"linkCheck"})," - (optional) - configures link checks. A router maybe expected to have a certain\nnumber of links. It may be desirable to alert if the number of links falls below the expected\nnumber","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"interval"})," - (optional, 5s) - how often to run the check"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"initialDelay"})," - (optional, 1s) - how long to wait before running the check for the first time"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"minLinks"})," - (optional, 0) - minimum number of links before failing the check. By default, no\nlinks are required and the check will just return information about the links that do exist"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Example:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"healthChecks:\n  ctrlPingCheck:\n    interval: 30s\n    timeout: 15s\n    initialDelay: 15s\n"})}),"\n",(0,t.jsx)(n.h3,{id:"identity",children:(0,t.jsx)(n.code,{children:"identity"})}),"\n",(0,t.jsxs)(n.p,{children:["The identity section includes the default server certificate and private key used for services\nhosted by the router, alternate server certificates and keys to support SNI on hosted services,\nclient certificate and private key when making connections, and the ",(0,t.jsx)(n.code,{children:"ca"})," bundle that the controller\nwill use when making connections to controllers and routers. See the conventions that apply to\nall ",(0,t.jsx)(n.a,{href:"/docs/reference/configuration/conventions#identity",children:"identity"})," sections for field level detail."]}),"\n",(0,t.jsx)(n.h3,{id:"link",children:(0,t.jsx)(n.code,{children:"link"})}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"link"})," section configures which protocols and ports are used to listen for incoming router mesh\nlinks via the ",(0,t.jsx)(n.code,{children:"listeners"})," subsection and which protocols are used to dial other routers via the\n",(0,t.jsx)(n.code,{children:"dialers"})," subsection. Dialers and listeners use ",(0,t.jsx)(n.code,{children:"binding"})," names which can be further configured in\nthe ",(0,t.jsxs)(n.a,{href:"#transport",children:[(0,t.jsx)(n.code,{children:"transport"})," section"]}),". For both"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"listeners"})," (optional) - configures if and how this router should listen for connections from\nother routers to form the data plane mesh","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"binding"})," - (required) - specifies which subsystem should instantiate this listener. Currently\nonly ",(0,t.jsx)(n.code,{children:"transport"})," is supported"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"bind"})," - (required) the ",(0,t.jsx)(n.a,{href:"/docs/reference/configuration/conventions#addressing",children:"address"})," that the listener should listen\non"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"advertise"})," - (required) the ",(0,t.jsx)(n.code,{children:"<host>:<port>"})," combination that external resources should use to\nreach this listener The ",(0,t.jsx)(n.code,{children:"listeners"})," subsection supports the same settings and option as in\nthe ",(0,t.jsxs)(n.a,{href:"#listeners",children:[(0,t.jsx)(n.code,{children:"listeners"})," section"]}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"groups"})," - (optional, [",(0,t.jsx)(n.code,{children:"default"}),"]) - Both dialers and listeners can now specify a set of\ngroups. If no groups are specified, the dialer or listener will be placed in the ",(0,t.jsx)(n.code,{children:"default"}),"\ngroup. Dialers will only attempt to dial listeners who have at least one group in common with\nthem."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"options"})," - (optional) options specified by the component specifically in addition to\nthe ",(0,t.jsx)(n.a,{href:"/docs/reference/configuration/conventions#xgress-options",children:"shared options"})]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"dialers"})," (optional) - configures if and how this router should try to make connections to other\nrouters to form the data plane mesh","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"split"})," - (optional, true) - indicates if a single connection should be made for all data, or\nif separate connections should be made, one for payloads and the other for acknowledgments"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"binding"})," - (required) - specifies which subsystem should instantiate this listener. Currently\nonly ",(0,t.jsx)(n.code,{children:"transport"})," is supported"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"bind"})," - (optional) the network interface, or local IP address to use for routing outbound\ndata"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"groups"})," - (optional, [",(0,t.jsx)(n.code,{children:"default"}),"]) - Both dialers and listeners can now specify a set of\ngroups. If no groups are specified, the dialer or listener will be placed in the ",(0,t.jsx)(n.code,{children:"default"}),"\ngroup. Dialers will only attempt to dial listeners who have at least one group in common with\nthem."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"options"})," - (optional) options specified by the component specifically in addition to\nthe ",(0,t.jsx)(n.a,{href:"/docs/reference/configuration/conventions#xgress-options",children:"shared options"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"healthyDialBackoff"})," - (optional) - configures how the dialer will retry dialing link\nconnections when a dial fails. This backoff policy is used when the router being dialed is\nconnected to the controller, and is thus expected to be available","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"minRetryInterval"})," - (optional, default 5s, min 10ms, max 24h) - duration specifying the\nminimum time between dial attempts"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"maxRetryInterval"})," - (optional, default 5m, min 10ms, max 24h) - duration specifying the\nmaximum time between dial attempts"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"retryBackoffFactor"})," - (optional, default 1.5, min 1, max 100) - factor by which to\nincrease the retry interval between failed dial attempts"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"unhealthyDialBackoff"})," - (optional) - configures how the dialer will retry dialing link\nconnections when a dial fails. This backoff policy is used when the router being dialed is\n",(0,t.jsx)(n.strong,{children:"not"})," connected to the controller, and is thus expected to be available. Note that when a\nrouter connects to a controller, other routers are notified and will both immediately try to\nconnect to the router, if they are not already, and will switch to the\n",(0,t.jsx)(n.code,{children:"healthyDialBackoff"})," policy","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"minRetryInterval"})," - (optional, default 1m, min 10ms, max 24h) - duration specifying the\nminimum time between dial attempts"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"maxRetryInterval"})," - (optional, default 1h, min 10ms, max 24h) - duration specifying the\nmaximum time between dial attempts"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"retryBackoffFactor"})," - (optional, default 10, min 1, max 100) - factor by which to\nincrease the retry interval between failed dial attempts"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Example:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"link:\n  dialers:\n    - binding: transport\n  listeners:\n    - binding: transport\n      bind: tls:127.0.0.1:6004\n      advertise: tls:127.0.0.1:6004\n"})}),"\n",(0,t.jsx)(n.h3,{id:"listeners",children:(0,t.jsx)(n.code,{children:"listeners"})}),"\n",(0,t.jsxs)(n.p,{children:['Listeners configure different types of server logic and protocols to be "listened" for on the\nrouter. This includes opening ports on one or more interfaces specified in the ',(0,t.jsx)(n.code,{children:"address"})," option.\nThe ",(0,t.jsx)(n.code,{children:"address"})," field is formatted according to\nthe ",(0,t.jsx)(n.a,{href:"/docs/reference/configuration/conventions#addressing",children:"address conventions"}),". The advertise field specifies the address a\nclient will use to connect to the listener."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"binding"})," - (required) the name of a ",(0,t.jsx)(n.a,{href:"/docs/reference/configuration/conventions#xgress-components",children:"xgress component"})," that\nwill provide the server side logic for the listener"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"bind"})," - (required) the ",(0,t.jsx)(n.a,{href:"/docs/reference/configuration/conventions#addressing",children:"address"})," that the listener should listen on"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"advertise"})," (required) the ",(0,t.jsx)(n.code,{children:"<host>:<port>"})," combination that external resources should use to reach\nthis listener"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"options"})," - (optional) options specified by the component specifically in addition to\nthe ",(0,t.jsx)(n.a,{href:"/docs/reference/configuration/conventions#xgress-options",children:"shared options"})]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"listeners:\n  - binding: edge\n    address: tls:0.0.0.0:3022\n    options:\n      advertise: 127.0.0.1:3022\n"})}),"\n",(0,t.jsxs)(n.h4,{id:"tunnel-listeners",children:["tunnel ",(0,t.jsx)(n.code,{children:"listeners"})]}),"\n",(0,t.jsx)(n.p,{children:"A tunnel is a special kind of listener binding."}),"\n",(0,t.jsxs)(n.p,{children:["When generating a router configuration with ",(0,t.jsx)(n.code,{children:"ziti create config router edge"})," the tunnel binding is\nenabled with default mode ",(0,t.jsx)(n.code,{children:"host"}),". This mode continually configures the router's tunnel to reverse\nproxy the list of services that are authorized by Bind Service Policy."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"listeners:\n  - binding: tunnel\n    options:\n      mode: host\n"})}),"\n",(0,t.jsxs)(n.p,{children:["If tunnel is enabled at the time the router is created then its configuration may be changed and\nwill take effect when the router is restarted. For example, this configures the router's tunnel to\ntransparently proxy all services authorized by Dial Service Policy and provide a nameserver. This\nmode also enables the reverse proxy features of ",(0,t.jsx)(n.code,{children:"host"})," mode."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"listeners:\n  - binding: tunnel\n    options:\n      mode: tproxy\n      resolver: udp://127.0.0.1:53\n      dnsSvcIpRange: 100.80.0.0/12  # optionally customize the dynamic IP range used by Ziti DNS\n"})}),"\n",(0,t.jsxs)(n.p,{children:["In this example the router's tunnel is configured to provide a forward proxy listener for a list of\nservice, TCP port pairs. This mode also enables the reverse proxy features of ",(0,t.jsx)(n.code,{children:"host"})," mode."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"listeners:\n  - binding: tunnel\n    options:\n      mode: proxy\n      services:\n        - zedsDemoHttpHttpbin:8080\n"})}),"\n",(0,t.jsx)(n.h3,{id:"metrics",children:(0,t.jsx)(n.code,{children:"metrics"})}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"metrics"})," section controls how metrics are communicated to the connection controller."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"reportInterval"})," - (optional, 1m) the interval of time to wait between crafting a new metrics\nmessage to be sent to the controller"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"messageQueueSize"})," - (optional, 10) the maximum number of buffered metrics messages allowed to be\nqueued to send to the controller"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"intervalAgeThreshold"})," - (optional, 80s) how old a batch of metrics must be before it's eligible\nto be sent to the controller"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"metrics:\n  reportInterval: 1m\n  messageQueueSize: 10\n"})}),"\n",(0,t.jsx)(n.h3,{id:"trace",children:(0,t.jsx)(n.code,{children:"trace"})}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"trace"})," section instructs the router to output incoming and outgoing messaging it receives. This\nsetting is useful for debugging purposes only and should not be enabled in production environments\nwithout careful consideration."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"path"})," - (required) the file to output decoded messages to"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"trace:\n  path: /var/opt/open.ziti.router.trace\n"})}),"\n",(0,t.jsx)(n.h3,{id:"transport",children:(0,t.jsx)(n.code,{children:"transport"})}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"transport"})," section is for advanced configuration of underlay protocols. It currently only\napplies to an internally tuned TCP protocol named Transwarp and is tuned using ",(0,t.jsx)(n.code,{children:"westworld3"}),"\nconfiguration options. This section should largely be unnecessary outside of development."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"transport:\n  westworld3:\n    profile_version: 1\n    tx_portal_min_sz: 16384\n    tx_portal_max_sz: 1073741824\n    instrument:\n      name: metrics\n      path: /tmp/westworld3\n      snapshot_ms: 250\n      enabled: true\n"})}),"\n",(0,t.jsx)(n.h3,{id:"profile",children:(0,t.jsx)(n.code,{children:"profile"})}),"\n",(0,t.jsxs)(n.p,{children:["The profile section allows for ",(0,t.jsx)(n.a,{href:"https://go.dev/blog/pprof",children:"CPU (pprof) and memory (memprof)"})," dumps\nto be created. CPU profiling is buffered by the application's runtime and output to the designated\nfile. Memory profiling allows the interval memory profiling occurs at and is output. These settings\nare useful for debugging purposes only and should not be enabled in production environments without\ncareful consideration."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"cpu"})," - (optional)","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"path"})," - (required) the path to output the pprof data"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"memory"})," - (optional)","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"path"})," - (required) the path to output the memprof data"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"intervalMs"})," (optional) the frequency to output memprof data (default 15s)"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"profile:\n  cpu:\n    path: /home/user1/tmp/ctrl.cpu.pprof\n  memory:\n    path: ctrl.memprof\n    intervalMs: 150000\n"})}),"\n",(0,t.jsx)(n.h3,{id:"web",children:(0,t.jsx)(n.code,{children:"web"})}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"web"})," section follows the ",(0,t.jsx)(n.a,{href:"/docs/reference/configuration/conventions#xweb",children:"conventions of XWeb"}),". The controller has the\nfollowing APIs defined:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"health-checks"})," - provides a health check API that allows remote parties to verify the health of\nthe controller"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Each API may have their own options, but currently do not."}),"\n",(0,t.jsx)(n.h3,{id:"v",children:(0,t.jsx)(n.code,{children:"v"})}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"v"}),' section is used to detect if the version file is supported by the OpenZiti binary read it.\nThe current and only supported value is "3".']}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"v: 3\n"})})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>l});var r=i(96540);const t={},s=r.createContext(t);function o(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);